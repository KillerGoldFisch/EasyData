{"version":3,"file":"easydata.min.js","sources":["../../core/dist/easydata.core.es.js","../../ui/dist/easydata.ui.es.js","../dist/easydata.crud.es.js"],"sourcesContent":["\n/*!\n * EasyData.JS Core v1.4.20\n * Copyright 2023 Korzh.com\n * Licensed under MIT\n */\n\n/** Represents the common types of the data. */\nvar DataType;\n(function (DataType) {\n    /** Unknown type value*/\n    DataType[DataType[\"Unknown\"] = 0] = \"Unknown\";\n    /** String value*/\n    DataType[DataType[\"String\"] = 1] = \"String\";\n    /** 8-bit integer value */\n    DataType[DataType[\"Byte\"] = 2] = \"Byte\";\n    /** 16-bit integer value */\n    DataType[DataType[\"Word\"] = 3] = \"Word\";\n    /** 32-bit integer value */\n    DataType[DataType[\"Int32\"] = 4] = \"Int32\";\n    /** 64-bit integer value */\n    DataType[DataType[\"Int64\"] = 5] = \"Int64\";\n    /** Boolean value */\n    DataType[DataType[\"Bool\"] = 6] = \"Bool\";\n    /** Floating-point numeric value */\n    DataType[DataType[\"Float\"] = 7] = \"Float\";\n    /** Money value */\n    DataType[DataType[\"Currency\"] = 8] = \"Currency\";\n    /** Binary-coded decimal value */\n    DataType[DataType[\"BCD\"] = 9] = \"BCD\";\n    /** Date value */\n    DataType[DataType[\"Date\"] = 10] = \"Date\";\n    /** Time value */\n    DataType[DataType[\"Time\"] = 11] = \"Time\";\n    /** Date and time value */\n    DataType[DataType[\"DateTime\"] = 12] = \"DateTime\";\n    /** Autoincrement 32-bit integer value */\n    DataType[DataType[\"Autoinc\"] = 13] = \"Autoinc\";\n    /** MEMO value (text with unlimited length) */\n    DataType[DataType[\"Memo\"] = 14] = \"Memo\";\n    /** BLOB value (any data with unlimited length) */\n    DataType[DataType[\"Blob\"] = 15] = \"Blob\";\n    /** Fixed character value */\n    DataType[DataType[\"FixedChar\"] = 16] = \"FixedChar\";\n    /** The unique identifier */\n    DataType[DataType[\"Guid\"] = 17] = \"Guid\";\n    /*-------- Spatial data types ----------*/\n    /** Any geometry data */\n    DataType[DataType[\"Geometry\"] = 18] = \"Geometry\";\n    /** Any data that represents some geography objects</summary> */\n    DataType[DataType[\"Geography\"] = 19] = \"Geography\";\n})(DataType || (DataType = {}));\n\nvar EntityAttrKind;\n(function (EntityAttrKind) {\n    EntityAttrKind[EntityAttrKind[\"Data\"] = 0] = \"Data\";\n    EntityAttrKind[EntityAttrKind[\"Virtual\"] = 1] = \"Virtual\";\n    EntityAttrKind[EntityAttrKind[\"Lookup\"] = 2] = \"Lookup\";\n})(EntityAttrKind || (EntityAttrKind = {}));\n\nconst EditorTag = {\n    /** Unknown tag value */\n    Unknown: \"Unknown\",\n    /** Edit tag value */\n    Edit: \"EDIT\",\n    /** DateTime tag value  */\n    DateTime: \"DATETIME\",\n    /** List tag value */\n    List: \"LIST\",\n    /** CustomList tag value */\n    CustomList: \"CUSTOMLIST\",\n    /** File tag value */\n    File: \"FILE\"\n};\n\n/**\n * Represents a date/time value that can return either a date itself or a special date name\n */\nclass TimeValue {\n    constructor(dt) {\n        if (dt instanceof Date) {\n            this.date = dt;\n        }\n        else {\n            this._name = dt;\n        }\n    }\n    asTime(settings) {\n        if (this.date) {\n            return this.date;\n        }\n        else {\n            specialDatesResolver.getDateByName(this._name);\n        }\n    }\n    get name() {\n        return this.name;\n    }\n}\nclass SpecialDatesResolver {\n    getDateByName(name, settings) {\n        if (this[name]) {\n            return this[name](settings);\n        }\n        else {\n            return undefined;\n        }\n    }\n    Today(settings) {\n        return new Date();\n    }\n    Yesterday(settings) {\n        let d = new Date();\n        d.setDate(d.getDate() - 1);\n        return d;\n    }\n    Tomorrow(settings) {\n        let d = new Date();\n        d.setDate(d.getDate() + 1);\n        return d;\n    }\n    FirstDayOfMonth(settings) {\n        let d = new Date();\n        d.setDate(1);\n        return d;\n    }\n    LastDayOfMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() + 1, 0);\n        return d;\n    }\n    FirstDayOfNextMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() + 1, 1);\n        return d;\n    }\n    FirstDayOfPrevMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() - 1, 1);\n        return d;\n    }\n    FirstDayOfYear(settings) {\n        const d = new Date();\n        d.setMonth(0, 1);\n        return d;\n    }\n    FirstDayOfPrevYear(settings) {\n        let d = new Date();\n        d.setFullYear(d.getFullYear() - 1, 0, 1);\n        return d;\n    }\n    FirstDayOfNextYear(settings) {\n        let d = new Date();\n        d.setFullYear(d.getFullYear() + 1, 0, 1);\n        return d;\n    }\n    FirstDayOfWeek(settings) {\n        const d = new Date();\n        let day = d.getDay();\n        day = (day == 0) ? 6 : day - 1; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() - day);\n        return d;\n    }\n    FirstDayOfPrevWeek(settings) {\n        let d = new Date();\n        let day = d.getDay();\n        day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() - day);\n        return d;\n    }\n    FirstDayOfNextWeek(settings) {\n        let d = new Date();\n        var day = d.getDay();\n        day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() + day);\n        return d;\n    }\n}\nvar specialDatesResolver = new SpecialDatesResolver();\nfunction registerSpecialDatesResolver(resolver) {\n    specialDatesResolver = resolver;\n}\n\nvar HttpMethod;\n(function (HttpMethod) {\n    HttpMethod[\"Trace\"] = \"TRACE\";\n    HttpMethod[\"Options\"] = \"OPTIONS\";\n    HttpMethod[\"Get\"] = \"GET\";\n    HttpMethod[\"Put\"] = \"PUT\";\n    HttpMethod[\"Post\"] = \"POST\";\n    HttpMethod[\"Delete\"] = \"DELETE\";\n})(HttpMethod || (HttpMethod = {}));\n\nclass HttpRequest {\n    constructor(xhr, descriptor) {\n        this.xhr = xhr;\n        this.method = descriptor.method;\n        this.url = descriptor.url;\n        this.headers = descriptor.headers;\n        this.queryParams = descriptor.queryParams;\n        this.data = descriptor.data;\n    }\n    setHeader(name, value) {\n        this.headers[name] = value;\n    }\n    setQueryParam(name, value) {\n        this.queryParams[name] = value;\n    }\n    getXMLHttpRequest() {\n        return this.xhr;\n    }\n    getResponseHeaders() {\n        if (this.xhr.readyState == this.xhr.HEADERS_RECEIVED) {\n            const headers = this.xhr.getAllResponseHeaders();\n            const arr = headers.trim().split(/[\\r\\n]+/);\n            // Create a map of header names to values\n            const headerMap = {};\n            for (const line of arr) {\n                const parts = line.split(': ');\n                const header = parts.shift();\n                const value = parts.join(': ');\n                headerMap[header] = value;\n            }\n            return headerMap;\n        }\n        return {};\n    }\n    open() {\n        if (this.xhr.readyState !== this.xhr.UNSENT)\n            return;\n        let url = this.url;\n        if (this.queryParams && Object.keys(this.queryParams).length > 0) {\n            url += encodeURI('?' + Object.keys(this.queryParams)\n                .map(param => param + '=' + this.queryParams[param])\n                .join('&'));\n        }\n        this.xhr.open(this.method, url, true);\n        this.xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        for (const header in this.headers) {\n            this.xhr.setRequestHeader(header, this.headers[header]);\n        }\n    }\n    abort() {\n        this.xhr.abort();\n    }\n}\n\nvar utils;\n(function (utils) {\n    function getAllDataTypes() {\n        return Object.values(DataType).filter(item => typeof item === \"number\");\n    }\n    utils.getAllDataTypes = getAllDataTypes;\n    function getDateDataTypes() {\n        return [DataType.Time, DataType.Date, DataType.DateTime];\n    }\n    utils.getDateDataTypes = getDateDataTypes;\n    function getStringDataTypes() {\n        return [DataType.String, DataType.Memo, DataType.FixedChar];\n    }\n    utils.getStringDataTypes = getStringDataTypes;\n    const _numericTypes = [DataType.Byte, DataType.Word, DataType.Int32,\n        DataType.Int64, DataType.Float, DataType.Currency, DataType.Autoinc];\n    function getNumericDataTypes() {\n        return _numericTypes;\n    }\n    utils.getNumericDataTypes = getNumericDataTypes;\n    const _intTypes = [DataType.Byte, DataType.Word, DataType.Int32, DataType.Int64, DataType.Autoinc];\n    //-------------- object functions -------------------\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function copies only the first level properties.\n     * For a deep copy please use `assignDeep`\n     * @param target - the target object\n     * @param args  - an array of the source objects\n     */\n    function assign(target, ...args) {\n        for (let i = 0; i < args.length; i++) {\n            let source = args[i];\n            if (source) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    utils.assign = assign;\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function make a deep copy -\n     * so `assignDeep` will be called recursively for all object properties\n     * on the first level.\n     * @param target - the target object\n     * @param sources  - an array of the source objects\n     */\n    function assignDeep(target, ...sources) {\n        return assignDeepCore(new WeakMap(), target, sources);\n    }\n    utils.assignDeep = assignDeep;\n    function assignDeepCore(hashSet, target, sources) {\n        if (!target) {\n            target = {};\n        }\n        for (let source of sources) {\n            if (source) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        let sourceVal = source[key];\n                        if (sourceVal !== null && typeof sourceVal === 'object') {\n                            if (hashSet.has(sourceVal)) {\n                                target[key] = hashSet.get(sourceVal);\n                            }\n                            else {\n                                if (Array.isArray(sourceVal)) {\n                                    target[key] = createArrayFrom(sourceVal);\n                                    hashSet.set(sourceVal, target[key]);\n                                }\n                                else {\n                                    if (typeof target[key] == 'undefined' || target[key] == null) {\n                                        target[key] = Object.create(Object.getPrototypeOf(sourceVal));\n                                    }\n                                    hashSet.set(sourceVal, target[key]);\n                                    assignDeepCore(hashSet, target[key], [sourceVal]);\n                                }\n                            }\n                        }\n                        else {\n                            target[key] = sourceVal;\n                        }\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    function getIfDefined(value, defaultValue) {\n        return (typeof value !== 'undefined') ? value : defaultValue;\n    }\n    utils.getIfDefined = getIfDefined;\n    function IsDefinedAndNotNull(value) {\n        return typeof value !== 'undefined' && value !== null;\n    }\n    utils.IsDefinedAndNotNull = IsDefinedAndNotNull;\n    function copyArrayTo(collection1, collection2) {\n        const len1 = collection1.length;\n        const len2 = collection2.length;\n        for (let i = 0; i < len1 && i < len2; i++) {\n            collection2[i] = collection1[i];\n        }\n    }\n    utils.copyArrayTo = copyArrayTo;\n    function createArrayFrom(collection) {\n        let result = [];\n        for (let item of collection) {\n            result.push(item);\n        }\n        return result;\n    }\n    utils.createArrayFrom = createArrayFrom;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the found object or null.\n     * @param array\n     * @param id\n     */\n    function findItemById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return array[idx];\n        }\n        return null;\n    }\n    utils.findItemById = findItemById;\n    function findItemIndexById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return idx;\n        }\n        return -1;\n    }\n    utils.findItemIndexById = findItemIndexById;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the index of the found element, or -1 if nothing was found.\n     * @param array\n     * @param id\n     */\n    function indexOfArrayItem(arr, item) {\n        if (arr.indexOf) {\n            return arr.indexOf(item);\n        }\n        else {\n            let len = arr.length;\n            for (let i = 0; i < len; i++) {\n                if (item == arr[i]) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n    utils.indexOfArrayItem = indexOfArrayItem;\n    /**\n     * Moves an item in some array to a new position\n     * @param array\n     * @param index1\n     * @param index2\n     */\n    function moveArrayItem(array, index1, index2) {\n        if (index1 >= array.length) {\n            throw 'Index out of bounds: ' + index1;\n        }\n        if (index2 >= array.length) {\n            index2 = array.length - 1;\n        }\n        let item = array.splice(index1, 1)[0];\n        array.splice(index2, 0, item);\n    }\n    utils.moveArrayItem = moveArrayItem;\n    /**\n     * Searches for a particular item in the array are removes that item if found.\n     * @param arr\n     * @param value\n     */\n    function removeArrayItem(arr, value) {\n        let index = arr.indexOf(value);\n        if (index != -1) {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    utils.removeArrayItem = removeArrayItem;\n    function insertArrayItem(arr, index, value) {\n        arr.splice(index, 0, value);\n    }\n    utils.insertArrayItem = insertArrayItem;\n    function fillArray(arr, value, start = 0, end) {\n        let len = arr.length >>> 0;\n        var relativeStart = start >> 0;\n        var k = relativeStart < 0 ?\n            Math.max(len + relativeStart, 0) :\n            Math.min(relativeStart, len);\n        var relativeEnd = end === undefined ?\n            len : end >> 0;\n        let final = relativeEnd < 0 ?\n            Math.max(len + relativeEnd, 0) :\n            Math.min(relativeEnd, len);\n        while (k < final) {\n            arr[k] = value;\n            k++;\n        }\n        return arr;\n    }\n    utils.fillArray = fillArray;\n    //------------ DOM utils ------------\n    /**\n     * Calculates the shift on which we need to move our element horizontally\n     * to find current window\n     * @param absLeft\n     * @param width\n     */\n    function shiftToFitWindow(absLeft, width) {\n        let body = document.getElementsByTagName('body')[0];\n        let winWidth = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\n        var absRight = absLeft + width;\n        let shift = 0;\n        if (absRight > winWidth) {\n            shift = winWidth - absRight - 10;\n            if (absLeft + shift < 0) {\n                shift = 10 - absLeft;\n            }\n        }\n        return shift;\n    }\n    utils.shiftToFitWindow = shiftToFitWindow;\n    /**\n     * Returns `true` if the value passed in the parameter is an object\n     * @param val\n     */\n    function isObject(val) {\n        if (val === null) {\n            return false;\n        }\n        return ((typeof val === 'function') || (typeof val === 'object'));\n    }\n    utils.isObject = isObject;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isNumericType(dtype) {\n        const index = _numericTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isNumericType = isNumericType;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isIntType(dtype) {\n        const index = _intTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isIntType = isIntType;\n    /**\n     * Returns `true` if the value passed in the parameter is an a numeric value\n     * @param val\n     */\n    function isNumeric(val) {\n        return !isNaN(parseFloat(val)) && isFinite(val);\n    }\n    utils.isNumeric = isNumeric;\n    /**\n     * Returns `true` if two data types  passed in parameters\n     * are compatible - so it's safe to copy the values between\n     * two expressions with these two types\n     * @param type1\n     * @param type2\n     */\n    function areCompatibleDataTypes(type1, type2) {\n        return typeof type1 == \"undefined\" || typeof type2 == \"undefined\" || type1 == DataType.Unknown || type2 == DataType.Unknown\n            || (type1 == type2) || (type1 == DataType.Date && type2 == DataType.DateTime)\n            || (type1 == DataType.DateTime && type2 == DataType.Date);\n    }\n    utils.areCompatibleDataTypes = areCompatibleDataTypes;\n    /**\n     * Returns `true` if the property with named `propName`\n     * in the object `obj` has some value\n     * @param obj\n     * @param propName\n     */\n    function isPropSet(obj, propName) {\n        return obj[propName] || obj[propName.toLowerCase()] || obj[propName.toUpperCase()];\n    }\n    utils.isPropSet = isPropSet;\n    //-------------- ID generator -----------\n    const prefixIdLen = 4;\n    const symbols = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    const magicTicks = 636712160627685350;\n    /**\n     * Generates an unique ID\n     */\n    function generateId(prefix) {\n        if (!prefix) {\n            prefix = 'easy';\n        }\n        let prfx = (prefix.length > prefixIdLen) ? squeezeMoniker(prefix, prefixIdLen) : prefix;\n        if (prfx && prfx.length > 0) {\n            prfx += \"-\";\n        }\n        //adding 3 random symbols\n        var randCharPart = symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)];\n        var randInt = getRandomInt(0, 10000);\n        //generating main ID part \n        //it's a 36-base representation of some random number based on current value of ticks\n        let ticksNum36 = intToNumBase(getNowTicks() - magicTicks - randInt);\n        return prfx + randCharPart + ticksNum36;\n    }\n    utils.generateId = generateId;\n    function intToNumBase(value, targetBase = 36) {\n        var buffer = '';\n        var rest = value;\n        do {\n            buffer = symbols[rest % targetBase] + buffer;\n            rest = Math.floor(rest /= targetBase);\n        } while (rest > 0);\n        return buffer;\n    }\n    function squeezeMoniker(str, maxlen) {\n        let parts = str.split('-');\n        let pml = 1;\n        let ptt = maxlen;\n        if (parts.length < maxlen) {\n            pml = maxlen / parts.length;\n            ptt = parts.length;\n        }\n        let result = \"\";\n        for (let i = 0; i < ptt; i++) {\n            result += squeeze(parts[i], pml);\n        }\n        return result;\n    }\n    function squeeze(str, maxlen) {\n        const len = str.length;\n        if (len > maxlen) {\n            let step = len / maxlen;\n            let result = \"\";\n            result += str[0];\n            let nextIndex = step;\n            let ch;\n            for (let i = 1; i < len; i++) {\n                ch = str[i];\n                if (i + 1 > nextIndex) {\n                    result += ch;\n                    nextIndex += step;\n                }\n            }\n            return result;\n        }\n        else {\n            return str;\n        }\n    }\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n    function getNowTicks() {\n        return (621355968e9 + (new Date()).getTime() * 1e4);\n    }\n    function safeParseInt(str) {\n        const res = parseInt(str);\n        if (isNaN(res))\n            throw `\"${str}\" is not a valid number`;\n        return res;\n    }\n    function getDaysInMonth(month, year) {\n        return new Date(year, month + 1, 0).getDate();\n    }\n    // ------------- date/time functions -------------------\n    // TO DO: improve to process all datetime cases\n    function strToDateTime(value, format) {\n        if (!value || value.length == 0)\n            return new Date();\n        const normalizedValue = value.replace(/[^a-zA-Z0-9_]/g, '-');\n        const normalizedFormat = format.replace(/[^a-zA-Z0-9_]/g, '-');\n        const formatItems = normalizedFormat.split('-');\n        const dateItems = normalizedValue.split('-');\n        const monthIndex = formatItems.indexOf(\"MM\");\n        const dayIndex = formatItems.indexOf(\"dd\");\n        const yearIndex = formatItems.indexOf(\"yyyy\");\n        const hourIndex = formatItems.indexOf(\"HH\");\n        const minutesIndex = formatItems.indexOf(\"mm\");\n        const secondsIndex = formatItems.indexOf(\"ss\");\n        const today = new Date();\n        try {\n            const year = yearIndex > -1 && yearIndex < dateItems.length\n                ? safeParseInt(dateItems[yearIndex])\n                : today.getFullYear();\n            const month = monthIndex > -1 && monthIndex < dateItems.length\n                ? safeParseInt(dateItems[monthIndex]) - 1\n                : today.getMonth() - 1;\n            if (month > 11)\n                throw '';\n            const day = dayIndex > -1 && dayIndex < dateItems.length\n                ? safeParseInt(dateItems[dayIndex])\n                : today.getDate();\n            if (day > getDaysInMonth(month, year))\n                throw '';\n            const hour = hourIndex > -1 && hourIndex < dateItems.length\n                ? safeParseInt(dateItems[hourIndex])\n                : 0;\n            if (hour > 23)\n                throw '';\n            const minute = minutesIndex > -1 && minutesIndex < dateItems.length\n                ? safeParseInt(dateItems[minutesIndex])\n                : 0;\n            if (minute > 59)\n                throw '';\n            const second = secondsIndex > -1 && secondsIndex < dateItems.length\n                ? safeParseInt(dateItems[secondsIndex])\n                : 0;\n            if (second > 59)\n                throw '';\n            return new Date(year, month, day, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${value} is not a valid date.`;\n        }\n    }\n    utils.strToDateTime = strToDateTime;\n    function strToTime(str) {\n        const timeItems = str.split(':');\n        try {\n            const hour = timeItems.length > 0 ? safeParseInt(timeItems[0]) : 0;\n            if (hour > 23)\n                throw '';\n            const minute = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (minute > 59)\n                throw '';\n            const second = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (second > 59)\n                throw '';\n            return new Date(0, 0, 0, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${str} is not a valid time.`;\n        }\n    }\n    utils.strToTime = strToTime;\n})(utils || (utils = {}));\n\nclass HttpActionResult {\n    constructor(request, promise) {\n        this.request = request;\n        this.promise = promise;\n    }\n    getPromise() {\n        return this.promise;\n    }\n    getRequest() {\n        return this.request;\n    }\n    then(onfulfilled, onrejected) {\n        return this.promise.then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.promise.catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.promise.finally(onfinally);\n    }\n}\n\nclass HttpResponseError extends Error {\n    constructor(status, message) {\n        super(message);\n        this.status = status;\n    }\n}\nclass HttpClient {\n    /** Gets the response body for the latest request  */\n    get responseBody() {\n        return this._responseBody;\n    }\n    constructor() {\n        this.defaultHeaders = {};\n        this.customPayload = undefined;\n    }\n    get(url, options) {\n        return this.send(HttpMethod.Get, url, null, options);\n    }\n    post(url, data, options) {\n        return this.send(HttpMethod.Post, url, data, options);\n    }\n    put(url, data, options) {\n        return this.send(HttpMethod.Put, url, data, options);\n    }\n    delete(url, data, options) {\n        return this.send(HttpMethod.Delete, url, data, options);\n    }\n    send(method, url, data, options) {\n        options = options || {};\n        const dataType = options.dataType || 'json';\n        const contentType = options.contentType || (dataType !== 'form-data')\n            ? 'application/json'\n            : null;\n        if (data && dataType != 'form-data' && this.customPayload) {\n            data.data = utils.assignDeep(data.data || {}, this.customPayload);\n        }\n        const XHR = ('onload' in new XMLHttpRequest())\n            ? XMLHttpRequest\n            : window[\"XDomainRequest\"]; //IE support\n        const xhr = new XHR();\n        const desc = {\n            method: method,\n            url: url,\n            headers: Object.assign(Object.assign({}, this.defaultHeaders), options.headers || {}),\n            queryParams: options.queryParams || {},\n            data: data\n        };\n        if (contentType)\n            desc.headers['Content-Type'] = contentType;\n        const request = new HttpRequest(xhr, desc);\n        if (this.beforeEachRequest) {\n            console.warn(`HttpClient: 'beforeEachRequest' is deprecated and will be removed in future updates.\r\n            Use 'onRequest' instead`);\n            this.beforeEachRequest(request);\n        }\n        if (this.onRequest) {\n            this.onRequest(request);\n        }\n        const dataToSend = (request.data && typeof request.data !== 'string'\n            && dataType == 'json')\n            ? JSON.stringify(request.data)\n            : request.data;\n        request.open();\n        return new HttpActionResult(request, new Promise((resolve, reject) => {\n            if (options.responseType)\n                xhr.responseType = options.responseType;\n            xhr.onerror = (error) => {\n                reject(new HttpResponseError(xhr.status, xhr.responseText));\n            };\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState != 4)\n                    return; //we process only the state change to DONE(4)\n                const responseContentType = xhr.getResponseHeader('Content-Type') || '';\n                const status = xhr.status;\n                if (status === 0) {\n                    reject(new HttpResponseError(status, \"Network error or the request was aborted\"));\n                }\n                else if (status >= 200 && status < 400) {\n                    //Success\n                    const responseObj = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? xhr.response\n                        : (responseContentType.indexOf('application/json') == 0\n                            ? JSON.parse(xhr.responseText)\n                            : xhr.responseText);\n                    this._responseBody = responseObj;\n                    if (this.onResponse) {\n                        this.onResponse(xhr);\n                    }\n                    resolve(responseObj);\n                }\n                else {\n                    //Error\n                    const rtPromise = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? HttpClient.decodeArrayBuffer(xhr.response)\n                        : Promise.resolve(xhr.responseText);\n                    rtPromise.then(responseText => {\n                        const responseObj = (responseContentType.indexOf('application/json') == 0)\n                            ? JSON.parse(responseText)\n                            : responseText;\n                        this._responseBody = responseObj;\n                        const message = responseObj.message ||\n                            (status == 404\n                                ? `No such endpoint: ${url}`\n                                : responseObj);\n                        reject(new HttpResponseError(status, message));\n                    });\n                }\n            };\n            xhr.send(dataToSend);\n        }));\n    }\n    static decodeArrayBuffer(uintArray) {\n        var reader = new FileReader();\n        return new Promise((resolve) => {\n            reader.onloadend = function () {\n                if (reader.readyState == FileReader.DONE) {\n                    resolve(reader.result);\n                }\n            };\n            reader.readAsText(new Blob([uintArray]));\n        });\n    }\n}\n\n/**\n * Contains internatialization functionality.\n */\nvar i18n;\n(function (i18n) {\n    let englishUSLocaleSettings = {\n        shortDateFormat: 'MM/dd/yyyy',\n        longDateFormat: 'dd MMM, yyyy',\n        editDateFormat: 'MM/dd/yyyy',\n        shortTimeFormat: 'HH:mm',\n        editTimeFormat: 'HH:mm',\n        longTimeFormat: 'HH:mm:ss',\n        shortMonthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        longMonthNames: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        shortWeekDayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        longWeekDayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        decimalSeparator: '.',\n        currency: 'USD'\n    };\n    let defaultLocale = {\n        localeId: 'en-US',\n        englishName: 'English',\n        displayName: 'English',\n        texts: {\n            ButtonOK: 'OK',\n            ButtonCancel: 'Cancel',\n            Yes: 'Yes',\n            No: 'No',\n            True: 'True',\n            False: 'False'\n        },\n        settings: englishUSLocaleSettings\n    };\n    let allLocales = {\n        'en-US': defaultLocale\n    };\n    let currentLocale;\n    const mappers = [];\n    function mapInfo(info) {\n        for (const mapper of mappers) {\n            mapper(info);\n        }\n    }\n    function addMapper(mapper) {\n        mappers.push(mapper);\n    }\n    i18n.addMapper = addMapper;\n    /**\n     * Gets added locales with their names.\n     * @returns  The locales.\n     */\n    function getLocales() {\n        let result = [];\n        for (let locale in allLocales) {\n            result.push({\n                locale: locale,\n                englishName: allLocales[locale].englishName,\n                displayName: allLocales[locale].displayName\n            });\n        }\n        return result.sort((a, b) => {\n            if (a.englishName > b.englishName) {\n                return 1;\n            }\n            else if (a.englishName === b.englishName) {\n                return 0;\n            }\n            return -1;\n        });\n    }\n    i18n.getLocales = getLocales;\n    /**\n     * Gets the current locale ID.\n     * @returns The locale.\n     */\n    function getCurrentLocale() {\n        return currentLocale.localeId;\n    }\n    i18n.getCurrentLocale = getCurrentLocale;\n    /**\n    * Sets the curent locale.\n    * @deprecated Use setCurrentLocale instead\n    * @param l The locale.\n    */\n    function setLocale(l) {\n        console.warn('This method is deprecated. Use setCurrentLocale instead');\n        setCurrentLocale(l);\n    }\n    i18n.setLocale = setLocale;\n    /**\n     * Sets the curent locale.\n     * @param localeId The locale.\n     */\n    function setCurrentLocale(localeId) {\n        const newLocale = allLocales[localeId];\n        if (newLocale) {\n            utils.assignDeep(currentLocale, newLocale);\n        }\n        else {\n            currentLocale.englishName = localeId;\n            currentLocale.displayName = localeId;\n            currentLocale.texts = utils.assignDeep({}, defaultLocale.texts);\n        }\n        currentLocale.localeId = localeId;\n    }\n    i18n.setCurrentLocale = setCurrentLocale;\n    /**\n     * Returns localized text by the key defined in parameter.\n     * Here we get the text of the resource string assigned to CmdClickToAddCondition key:\n     *\n     ```\n       const text = i18n.getText('CmdClickToAddCondition')\n     ```\n     * @param args The keys of the resource string.\n     * @returns Text of the resource defined by key or null if the key is not found\n     *\n     */\n    function getText(...args) {\n        let textsObj = currentLocale.texts;\n        let resText = '';\n        if (args && args.length) {\n            const argLength = args.length;\n            for (let i = 0; i < argLength; i++) {\n                resText = textsObj[args[i]];\n                if (typeof resText === 'object') {\n                    textsObj = resText;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return resText;\n    }\n    i18n.getText = getText;\n    function getLocaleSettings() {\n        return currentLocale.settings;\n    }\n    i18n.getLocaleSettings = getLocaleSettings;\n    function getOneLocaleSetting(key) {\n        return currentLocale.settings[key];\n    }\n    i18n.getOneLocaleSetting = getOneLocaleSetting;\n    function getShortMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.shortMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getShortMonthName = getShortMonthName;\n    function getLongMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.longMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getLongMonthName = getLongMonthName;\n    function getShortWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.shortWeekDayNames.length >= dayNum\n                ? settings.shortWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getShortWeekDayName = getShortWeekDayName;\n    function getLongWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.longWeekDayNames.length >= dayNum\n                ? settings.longWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getLongWeekDayName = getLongWeekDayName;\n    /**\n     * Updates the locale settings (date/time formats, separators, etc) for the specified locale.\n     * @param settingsToUpdate a LocaleSettings object\n     */\n    function updateLocaleSettings(settingsToUpdate) {\n        if (!currentLocale.settings) {\n            currentLocale.settings = utils.assignDeep({}, englishUSLocaleSettings);\n        }\n        currentLocale.settings = utils.assignDeep(currentLocale.settings, settingsToUpdate);\n    }\n    i18n.updateLocaleSettings = updateLocaleSettings;\n    /**\n     * Updates the texts for the current locale\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateLocaleTexts(texts) {\n        if (typeof texts !== 'object') {\n            console.error('Wrong parameter type in updateLocaleTexts function call.' +\n                'The first parameter (localeId) is not necessary. Use updateLocaleTexts(texts) instead');\n            return;\n        }\n        mapInfo({ localeId: currentLocale.localeId, texts: texts });\n        utils.assignDeep(currentLocale.texts, texts);\n    }\n    i18n.updateLocaleTexts = updateLocaleTexts;\n    function updateDefaultTexts(texts) {\n        for (let localeId in allLocales) {\n            let locale = allLocales[localeId];\n            locale.texts = utils.assignDeep({}, texts, locale.texts);\n        }\n        currentLocale.texts = utils.assignDeep({}, texts, currentLocale.texts);\n    }\n    i18n.updateDefaultTexts = updateDefaultTexts;\n    /**\n     * Updates the information for the specified locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be added\n     * @param localeInfo  a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function updateLocaleInfo(localeId, localeData) {\n        mapInfo(localeData);\n        let localeInfoToUpdate = currentLocale;\n        if (localeId) {\n            if (!localeData.localeId) {\n                localeData.localeId = localeId;\n            }\n            localeInfoToUpdate = allLocales[localeId];\n            if (!localeInfoToUpdate) {\n                localeInfoToUpdate = utils.assignDeep({}, defaultLocale);\n                allLocales[localeId] = localeInfoToUpdate;\n            }\n        }\n        utils.assignDeep(localeInfoToUpdate, localeData);\n    }\n    i18n.updateLocaleInfo = updateLocaleInfo;\n    /**\n     * Adds the locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be created\n     * @param localeInfo - a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function addLocale(localeId, localeInfo) {\n        updateLocaleInfo(localeId, localeInfo);\n    }\n    i18n.addLocale = addLocale;\n    /**\n     * Overwrites some locale settings (date/time formats) with the formats used in browser's current language\n     */\n    function determineSettingsByLocale(localeId) {\n        const now = new Date(2020, 5, 7, 19, 34, 56, 88);\n        const dateOptions = { year: 'numeric', month: 'numeric', day: 'numeric' };\n        const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n        const dateStr = now.toLocaleDateString(localeId, dateOptions);\n        const timeStr = now.toLocaleTimeString(localeId, timeOptions);\n        let dateFormat = dateStr\n            .replace('07', 'dd')\n            .replace('7', 'd')\n            .replace('06', 'MM')\n            .replace('6', 'M')\n            .replace('2020', 'yyyy')\n            .replace('20', 'yy');\n        let timeFormat = timeStr\n            .replace('19', 'HH')\n            .replace('07', 'hh')\n            .replace('7', 'h')\n            .replace('34', 'mm')\n            .replace('56', 'ss')\n            .replace('PM', 'tt');\n        if (!currentLocale.settings) {\n            currentLocale.settings = {};\n        }\n        const localeSettings = {\n            shortDateFormat: dateFormat,\n            shortTimeFormat: timeFormat\n        };\n        updateLocaleSettings(localeSettings);\n    }\n    function loadBrowserLocaleSettings() {\n        const lang = typeof navigator === 'object' ? navigator.language : undefined;\n        determineSettingsByLocale(lang);\n    }\n    function resetLocales() {\n        if (!currentLocale) {\n            currentLocale = utils.assignDeep({}, defaultLocale);\n            loadBrowserLocaleSettings();\n        }\n    }\n    i18n.resetLocales = resetLocales;\n    const DT_FORMAT_RGEX = /\\[([^\\]]+)]|y{2,4}|M{1,4}|d{1,2}|H{1,2}|h{1,2}|m{2}|s{2}|t{2}/g;\n    /**\n     * Returns string representation of the date/time value according to the custom format (second parameter)\n     * The format is compatible with the one used in .NET: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\n     * @param date\n     * @param format\n     */\n    function dateTimeToStr(date, format) {\n        const year = date.getFullYear();\n        const yearStr = year.toString();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const minute = date.getMinutes();\n        const second = date.getSeconds();\n        const hour12 = hour % 12 || 12; //the remainder of the division by 12. Or 12 if it's 0\n        const isPm = hour > 11;\n        const matches = {\n            yyyy: yearStr,\n            yy: yearStr.substring(yearStr.length - 2),\n            MMMM: i18n.getLongMonthName(month),\n            MMM: i18n.getShortMonthName(month),\n            MM: (month < 10) ? '0' + month : month.toString(),\n            M: month.toString(),\n            dd: (day < 10) ? '0' + day : day.toString(),\n            d: day.toString(),\n            HH: (hour < 10) ? '0' + hour : hour.toString(),\n            H: hour.toString(),\n            hh: (hour12 < 10) ? '0' + hour12 : hour12.toString(),\n            h: hour12.toString(),\n            tt: isPm ? 'PM' : 'AM',\n            mm: (minute < 10) ? '0' + minute : minute.toString(),\n            ss: (second < 10) ? '0' + second : second.toString()\n        };\n        return format.replace(DT_FORMAT_RGEX, (match, $1) => {\n            return $1 || matches[match];\n        });\n    }\n    i18n.dateTimeToStr = dateTimeToStr;\n    function dateTimeToStrEx(dateTime, dataType, format) {\n        if (format) {\n            if (format == 'd') {\n                format = buildShortDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'D') {\n                format = buildLongDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'f') {\n                format = buildShortDateTimeFormat(DataType.DateTime);\n            }\n            else if (format == 'F') {\n                format = buildLongDateTimeFormat(DataType.DateTime);\n            }\n        }\n        else {\n            format = buildShortDateTimeFormat(dataType);\n        }\n        return dateTimeToStr(dateTime, format);\n    }\n    i18n.dateTimeToStrEx = dateTimeToStrEx;\n    function buildShortDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.shortDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.shortTimeFormat;\n                break;\n            default:\n                format = localeSettings.shortDateFormat + ' ' + localeSettings.shortTimeFormat;\n                break;\n        }\n        return format;\n    }\n    function buildLongDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.longDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.longTimeFormat;\n                break;\n            default:\n                format = localeSettings.longDateFormat + ' ' + localeSettings.longTimeFormat;\n                break;\n        }\n        return format;\n    }\n    /**\n    * Converts a numeric value to the string taking into the account the decimal separator\n    * @param value - the number to convert\n    * @param format - the format of the number representation (D - decimal, F - float, C - currency)\n    * @param decimalSeparator - the symbol that represents decimal separator. If not specified the function gets the one from the current locale settings.\n    */\n    function numberToStr(number, format, decimalSeparator) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                return formatWithSequence(number, format.slice(1));\n            }\n            else if (['D', 'F', 'C'].indexOf(type) >= 0) {\n                const locale = getCurrentLocale();\n                return number.toLocaleString(locale, getNumberFormatOptions(format));\n            }\n            else {\n                return convertWithMask(Math.trunc(number), format);\n            }\n        }\n        const localeSettings = getLocaleSettings();\n        decimalSeparator = decimalSeparator || localeSettings.decimalSeparator;\n        return number.toString().replace('.', decimalSeparator);\n    }\n    i18n.numberToStr = numberToStr;\n    function booleanToStr(bool, format) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                const values = format.slice(1).split('|');\n                if (values.length > 1) {\n                    const value = values[(bool) ? 1 : 0];\n                    return i18n.getText(value) || value;\n                }\n            }\n        }\n        return `${bool}`;\n    }\n    i18n.booleanToStr = booleanToStr;\n    const cachedSequenceFormats = {};\n    function formatWithSequence(number, format) {\n        if (!cachedSequenceFormats[format]) {\n            // parse and save in cache format values \n            const values = format.split('|')\n                .filter(v => v.length > 0)\n                .map(v => v.split('='));\n            cachedSequenceFormats[format] = {};\n            if (values.length > 0) {\n                if (values[0].length > 1) {\n                    for (const value of values) {\n                        cachedSequenceFormats[format][Number.parseInt(value[1])] = value[0];\n                    }\n                }\n                else {\n                    values.forEach((value, index) => {\n                        cachedSequenceFormats[format][index] = value[0];\n                    });\n                }\n            }\n        }\n        const values = cachedSequenceFormats[format];\n        if (values[number] !== undefined) {\n            const value = values[number];\n            return i18n.getText(value) || value;\n        }\n        return number.toString();\n    }\n    function convertWithMask(number, mask) {\n        let value = number.toString();\n        let result = '';\n        let index = value.length - 1;\n        for (let i = mask.length - 1; i >= 0; i--) {\n            const ch = mask.charAt(i);\n            if (ch === '#' || ch === '0') {\n                if (index >= 0) {\n                    result += value.charAt(index);\n                    index--;\n                }\n                else {\n                    if (ch === '0') {\n                        result += 0;\n                    }\n                }\n            }\n            else {\n                result += ch;\n            }\n        }\n        return result.split('').reverse().join('');\n    }\n    function getNumberFormatOptions(format) {\n        const localeSettings = getLocaleSettings();\n        const type = format[0].toUpperCase();\n        const digits = (format.length > 1)\n            ? Number.parseInt(format.slice(1))\n            : type == 'D' ? 1 : 2;\n        switch (type) {\n            case 'D':\n                return {\n                    style: 'decimal',\n                    useGrouping: false,\n                    minimumIntegerDigits: digits\n                };\n            case 'C':\n                return {\n                    style: 'currency',\n                    currency: localeSettings.currency,\n                    minimumFractionDigits: digits\n                };\n            default:\n                return {\n                    style: 'decimal',\n                    minimumFractionDigits: digits,\n                    maximumFractionDigits: digits\n                };\n        }\n    }\n})(i18n || (i18n = {}));\n\n/**\n * Represents one entity.\n */\nclass MetaEntity {\n    /** The default constructor. */\n    constructor(parent) {\n        /** Returns false if this entity is read-only */\n        this.isEditable = true;\n        this.name = \"\";\n        this.caption = \"\";\n        this.description = \"\";\n        this.parent = parent;\n        this.attributes = new Array();\n        this.subEntities = new Array();\n    }\n    /**\n    * Loads entity from its JSON representation object.\n    * @param model The Data Model.\n    * @param dto The JSON representation object.\n    */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.name = dto.name;\n            this.captionPlural = dto.namePlur;\n            this.caption = dto.name;\n            this.description = dto.desc;\n            if (typeof (dto.ied) !== 'undefined')\n                this.isEditable = dto.ied;\n            this.subEntities = new Array();\n            if (dto.ents) {\n                for (let i = 0; i < dto.ents.length; i++) {\n                    let newEntity = model.createEntity(this);\n                    newEntity.loadFromData(model, dto.ents[i]);\n                    this.subEntities.push(newEntity);\n                }\n            }\n            this.attributes = new Array();\n            if (dto.attrs) {\n                for (let i = 0; i < dto.attrs.length; i++) {\n                    let newAttr = model.createEntityAttr(this);\n                    newAttr.loadFromData(model, dto.attrs[i]);\n                    this.attributes.push(newAttr);\n                }\n            }\n        }\n    }\n    scan(processAttribute, processEntity) {\n        let opts = { stop: false };\n        let internalProcessEntity = (entity) => {\n            if (processEntity)\n                processEntity(entity, opts);\n            if (entity.attributes) {\n                let attrCount = entity.attributes.length;\n                for (let i = 0; (i < attrCount) && !opts.stop; i++) {\n                    let attr = entity.attributes[i];\n                    if (processAttribute) {\n                        processAttribute(attr, opts);\n                    }\n                    if (opts.stop)\n                        return;\n                }\n            }\n            if (entity.subEntities) {\n                let subEntityCount = entity.subEntities.length;\n                for (let i = 0; (i < subEntityCount) && !opts.stop; i++) {\n                    internalProcessEntity(entity.subEntities[i]);\n                }\n            }\n        };\n        internalProcessEntity(this);\n    }\n    getFirstPrimaryAttr() {\n        return this.getPrimaryAttrs()[0];\n    }\n    getPrimaryAttrs() {\n        return this.attributes.filter(attr => attr.isPrimaryKey);\n    }\n}\nclass MetaEntityAttr {\n    /** The default constructor. */\n    constructor(entity) {\n        this.id = \"\";\n        this.caption = \"{Unrecognized attribute}\";\n        this.dataType = DataType.String;\n        this.size = 0;\n        this.isPrimaryKey = false;\n        this.isForeignKey = false;\n        this.isNullable = true;\n        this.showOnView = true;\n        this.isEditable = true;\n        this.showOnCreate = true;\n        this.showOnEdit = true;\n        this.showInLookup = false;\n        this.lookupAttr = \"\";\n        this.expr = \"\";\n        this.entity = entity;\n        this.kind = EntityAttrKind.Data;\n    }\n    /**\n     * Loads entity attribute from JSON representation object.\n     * @param model The Data Model.\n     * @param dto The JSON representation object.\n     */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.description = dto.desc;\n            this.caption = dto.cptn;\n            this.dataType = dto.dtype;\n            this.isPrimaryKey = dto.ipk;\n            this.isForeignKey = dto.ifk;\n            this.size = dto.size;\n            this.lookupAttr = dto.lattr;\n            this.lookupEntity = dto.lent;\n            this.dataAttr = dto.dattr;\n            this.lookupDataAttr = dto.ldattr;\n            const isDataType = utils.getDateDataTypes().indexOf(this.dataType);\n            this.defaultValue = dto.defVal && isDataType ? new Date(dto.defVal) : dto.defVal;\n            this.isNullable = utils.getIfDefined(dto.nul, this.isNullable);\n            this.isEditable = utils.getIfDefined(dto.ied, this.isEditable);\n            this.showOnView = utils.getIfDefined(dto.ivis || dto.sov, this.showOnView);\n            this.showOnCreate = utils.getIfDefined(dto.soc, this.showOnCreate);\n            this.showOnEdit = utils.getIfDefined(dto.soe, this.showOnEdit);\n            this.showInLookup = utils.getIfDefined(dto.sil, this.showInLookup);\n            this.kind = dto.kind;\n            this.displayFormat = dto.dfmt;\n            if (dto.udata)\n                this.userData = dto.udata;\n            if (dto.edtr) {\n                this.defaultEditor = model.getEditorById(dto.edtr) || model.createValueEditor();\n            }\n        }\n    }\n}\n\n/**\n * Represents a value editor.\n */\nclass ValueEditor {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.tag = EditorTag.Unknown;\n        this.resType = DataType.Unknown;\n        this.defValue = \"\";\n    }\n    /**\n     * Loads value editor from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        if (data) {\n            this.id = data.id;\n            this.tag = data.tag;\n            this.defValue = data.defval;\n            this.resType = data.rtype;\n            this.accept = data.accept;\n            this.multiline = data.multiline;\n            if (data.subType) {\n                this.resType = data.subType;\n            }\n            if (data.name) {\n                this.name = data.name;\n            }\n            if (data.values) {\n                this.values = data.values;\n            }\n        }\n    }\n    getValueText(value) {\n        let result = \"\";\n        if (!this.values)\n            return result;\n        if (Array.isArray(value)) {\n            for (let item of this.values) {\n                if (value.indexOf(item.id) >= 0) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        else {\n            for (let item of this.values) {\n                if (item.id === value) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        if (result) {\n            result = result.substring(0, result.length - 1);\n        }\n        return result;\n    }\n}\n\n/**\n * Represents a data model\n */\nclass MetaData {\n    /** The default constructor. */\n    constructor() {\n        this.mainEntity = null;\n        this.id = '__none';\n        this.name = 'Empty model';\n        this.rootEntity = this.createEntity();\n        this.displayFormats = new Map();\n    }\n    /**\n     * Gets the main entity of model\n     * @return The main entity.\n     */\n    getMainEntity() {\n        return this.mainEntity;\n    }\n    createEntity(parent) {\n        return new MetaEntity(parent);\n    }\n    createEntityAttr(parent) {\n        return new MetaEntityAttr(parent);\n    }\n    createValueEditor() {\n        return new ValueEditor();\n    }\n    /**\n     * Loads data model from JSON.\n     * @param stringJson The JSON string.\n     */\n    loadFromJSON(stringJson) {\n        let model = JSON.parse(stringJson);\n        this.loadFromData(model);\n    }\n    /**\n     * Loads data model from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        this.id = data.id;\n        this.name = data.name;\n        this.version = data.vers;\n        //Editors\n        this.editors = new Array();\n        if (data.editors) {\n            for (let i = 0; i < data.editors.length; i++) {\n                let newEditor = this.createValueEditor();\n                newEditor.loadFromData(data.editors[i]);\n                this.editors.push(newEditor);\n            }\n        }\n        //rootEntity\n        this.rootEntity.loadFromData(this, data.entroot);\n        //DataFormats\n        this.displayFormats = new Map();\n        if (data.displayFormats) {\n            for (const dtypeStr in data.displayFormats) {\n                const dtype = DataType[dtypeStr];\n                const formats = data.displayFormats[dtypeStr] || new Array();\n                this.displayFormats.set(dtype, formats);\n            }\n        }\n    }\n    /**\n     * Gets the display formats.\n     * @returns The display formats.\n     */\n    getDisplayFormats() {\n        return this.displayFormats;\n    }\n    /**\n     * Gets the display formats for type\n     * @param type The type\n     * @returns An array of display formats\n     */\n    getDisplayFormatsForType(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type);\n        }\n        return [];\n    }\n    /**\n     * Gets the default display format for the provided type\n     * @param type The type\n     * @returns The default type format or null\n     */\n    getDefaultFormat(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type).filter(f => f.isdef)[0];\n        }\n        return null;\n    }\n    /**\n     * Sets data to data model.\n     * @param model Its JSON representation object or JSON string.\n     */\n    setData(model) {\n        if (typeof model === 'string') {\n            this.loadFromJSON(model);\n        }\n        else {\n            this.loadFromData(model);\n        }\n    }\n    /**\n     * Checks wether the data model is empty.\n     * @returns `true` if the data model is empty, otherwise `false`.\n     */\n    isEmpty() {\n        return this.rootEntity.subEntities.length === 0 && this.rootEntity.attributes.length === 0;\n    }\n    /**\n     * Gets ID of the data model.\n     * @returns The ID.\n     */\n    getId() {\n        return this.id;\n    }\n    /**\n     * Gets name of the data model.\n     * @returns The name.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Gets root entity of the data model.\n     * @returns The root entity.\n     */\n    getRootEntity() {\n        return this.rootEntity;\n    }\n    /**\n     * Finds editor by its ID.\n     * @param editorId The editor ID.\n     * @returns The value editor or `null`.\n     */\n    getEditorById(editorId) {\n        for (let editor of this.editors) {\n            if (editor.id === editorId) {\n                return editor;\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n     * @param attrId The attribute ID.\n     * @returns The attribute or `null`.\n     */\n    getAttributeById(attrId) {\n        let attr = this.getEntityAttrById(this.getRootEntity(), attrId);\n        if (!attr) {\n            return null;\n        }\n        return attr;\n    }\n    /**\n     * Checks wether attribute contains such property.\n     * @param attrId The attribute ID.\n     * @param propName The property name.\n     * @returns `true` if the attribute contains the property, otherwise `false`.\n     */\n    checkAttrProperty(attrId, propName) {\n        let attribute = this.getAttributeById(attrId);\n        if (attribute) {\n            if (typeof attribute[propName] === 'undefined') {\n                throw 'No such property: ' + propName;\n            }\n            if (attribute[propName]) {\n                return true;\n            }\n            else if (attribute.lookupAttr) {\n                attrId = attribute.lookupAttr;\n                attribute = this.getAttributeById(attrId);\n                return attribute && attribute[propName];\n            }\n            else {\n                return false;\n            }\n        }\n        else\n            return false;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified entity and all its sub-entities.\n     * @param entity\n     * @param attrId\n     * @returns The attribute or `null`.\n     */\n    getEntityAttrById(entity, attrId) {\n        let idx;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (idx = 0; idx < attrCount; idx++) {\n                if (entity.attributes[idx].id == attrId) {\n                    return entity.attributes[idx];\n                }\n            }\n        }\n        let res;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (idx = 0; idx < subEntityCount; idx++) {\n                res = this.getEntityAttrById(entity.subEntities[idx], attrId);\n                if (res)\n                    return res;\n            }\n        }\n        return null;\n    }\n    listByEntityWithFilter(entity, filterFunc) {\n        let result = new Array();\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name);\n                    if (!caption) {\n                        caption = ent.caption;\n                    }\n                    let newEnt = utils.assign(this.createEntity(), { id: ent.name, text: caption, items: [], isEntity: true });\n                    newEnt.items = this.listByEntityWithFilter(ent, filterFunc);\n                    if (newEnt.items.length > 0)\n                        result.push(newEnt);\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id);\n                    if (!caption)\n                        caption = attr.caption;\n                    let newEnt = utils.assign(this.createEntity(), { id: attr.id, text: caption, dataType: attr.dataType });\n                    result.push(newEnt);\n                }\n            }\n        }\n        return result;\n    }\n    listByEntity(entity, opts, filterFunc) {\n        opts = opts || {};\n        let resultEntities = [];\n        let resultAttributes = [];\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name) || ent.caption;\n                    let newEnt = utils.assign(this.createEntity(), {\n                        id: ent.name,\n                        text: caption,\n                        items: [],\n                        isEntity: true,\n                        description: ent.description\n                    });\n                    let newOpts = utils.assign({}, opts);\n                    newOpts.includeRootData = false;\n                    newEnt.items = this.listByEntity(ent, newOpts, filterFunc);\n                    if (newEnt.items.length > 0) {\n                        resultEntities.push(newEnt);\n                    }\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id) || attr.caption;\n                    resultAttributes.push(utils.assign(this.createEntityAttr(entity), {\n                        id: attr.id, text: caption,\n                        dataType: attr.dataType, lookupAttr: attr.lookupAttr,\n                        description: attr.description\n                    }));\n                }\n            }\n        }\n        let sortCheck = (a, b) => {\n            if (a.text.toLowerCase() == b.text.toLowerCase()) {\n                return 0;\n            }\n            if (a.text.toLowerCase() > b.text.toLowerCase()) {\n                return 1;\n            }\n            return -1;\n        };\n        if (opts.sortEntities) {\n            resultEntities.sort(sortCheck);\n            resultAttributes.sort(sortCheck);\n        }\n        let result;\n        if (!opts.attrPlacement || opts.attrPlacement == 0) {\n            result = resultEntities.concat(resultAttributes);\n        }\n        else {\n            result = resultAttributes.concat(resultEntities);\n        }\n        if (opts.attrPlacement == 2) {\n            result.sort(sortCheck);\n        }\n        if (opts.includeRootData) {\n            caption = i18n.getText('Entities', entity.name);\n            if (!caption)\n                caption = entity.caption;\n            return { id: entity.name, text: caption, items: result };\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * Clears data model.\n     */\n    clear() {\n        this.rootEntity = this.createEntity();\n        this.editors = [];\n        this.version = '';\n    }\n    /**\n     * Add default value editors.\n     */\n    addDefaultValueEditors() {\n        let ve;\n        ve = this.addOrUpdateValueEditor('_DTE', EditorTag.Edit, DataType.String);\n        ve.defValue = '';\n        this.addOrUpdateValueEditor('_DPDE', EditorTag.DateTime, DataType.DateTime);\n        this.addOrUpdateValueEditor('_DPTE', EditorTag.DateTime, DataType.DateTime);\n    }\n    /**\n    * Add or update a value editor.\n    * @param id The id.\n    * @param tag The tag.\n    * @param resType The result type.\n    * @returns The value editor.\n    */\n    addOrUpdateValueEditor(id, tag, resType) {\n        let ve = utils.findItemById(this.editors, id);\n        if (!ve) {\n            ve = this.createValueEditor();\n            ve.id = id;\n            this.editors.push(ve);\n        }\n        ve.tag = tag;\n        ve.resType = resType;\n        return ve;\n    }\n    /**\n     * Gets entities tree.\n     * @param opts The options.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to options and the filter function\n     */\n    getEntitiesTree(opts, filterFunc) {\n        return this.listByEntity(this.getRootEntity(), opts, filterFunc);\n    }\n    /**\n     * Gets entities tree due to filter.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to the filter function\n     */\n    getEntitiesTreeWithFilter(filterFunc) {\n        return this.listByEntityWithFilter(this.getRootEntity(), filterFunc);\n    }\n    /**\n     * Finds full entity path by attribute\n     * @param attrId The attribute id.\n     * @param sep The separator.\n     * @returns The path.\n     */\n    getFullEntityPathByAttr(attrId, sep) {\n        sep = sep || ' ';\n        return this.getEntityPathByAttr(this.getRootEntity(), attrId, sep, true);\n    }\n    /**\n    * Finds entity path by attribute\n    * @param entity The entity.\n    * @param attrId The attribute id.\n    * @param sep The separator.\n    * @param root The root option.\n    * @returns The path.\n    */\n    getEntityPathByAttr(entity, attrId, sep, root) {\n        if (!entity)\n            return '';\n        sep = sep || ' ';\n        let entityCaption = '';\n        if (entity.caption && !root) {\n            let entityText = i18n.getText('Entities', entity.caption);\n            entityCaption = entityText ? entityText : entity.caption;\n        }\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let i = 0; i < attrCount; i++) {\n                if (entity.attributes[i].id == attrId) {\n                    return entityCaption;\n                }\n            }\n        }\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let i = 0; i < subEntityCount; i++) {\n                let ent = entity.subEntities[i];\n                let res = this.getEntityPathByAttr(ent, attrId, sep, false);\n                if (res !== '') {\n                    if (entityCaption !== '')\n                        res = entityCaption + sep + res;\n                    return res;\n                }\n            }\n        }\n        return '';\n    }\n    /**\n     * Gets the attribute text.\n     * @param attr The attribute.\n     * @param format The format.\n     * @returns Formatted text.\n     */\n    getAttributeText(attr, format) {\n        let attrText = i18n.getText('Attributes', attr.id);\n        if (!attrText) {\n            attrText = attr.caption;\n        }\n        if (!format) {\n            return attrText;\n        }\n        let result = '';\n        let entityPath = this.getFullEntityPathByAttr(attr.id, ' ');\n        if (entityPath) {\n            result = format.replace(new RegExp('{attr}', 'g'), attrText);\n            result = result.replace(new RegExp('{entity}', 'g'), entityPath);\n        }\n        else {\n            result = attrText;\n        }\n        return result.trim();\n    }\n    /**\n     * Scans model's entity tree and calls the callback functions for each attribute and entity.\n     * @param processAttribute The callback function which is called for each attribute in model's entity tree.\n     * The processed attribute is passed in the first function parameter.\n     * @param processEntity The callback function which is called for each entity in tree.\n     * The processed entity is passed in the first function parameter.\n     */\n    runThroughEntities(processAttribute, processEntity) {\n        this.getRootEntity().scan(processAttribute, processEntity);\n    }\n    /**\n     * Finds first attribute by filter.\n     * @param filterFunc The filter function. Takes EntityAttr object in parameter and returns boolean\n     */\n    getFirstAttributeByFilter(filterFunc) {\n        let res = null;\n        this.runThroughEntities(function (attr, opts) {\n            if (filterFunc(attr)) {\n                opts.stop = true;\n                res = attr;\n            }\n        }, null);\n        return res;\n    }\n}\n\n/**\n * Defines aggregations settings for the current context.\n * Group, aggregate columns, grand totals, etc.\n */\nclass AggregationSettings {\n    constructor(colStore) {\n        this.colStore = colStore;\n        this.aggregates = [];\n        this.groups = [];\n        this.useGrandTotals = false;\n        this.useRecordCount = false;\n        this._caseSensitiveGroups = false;\n        this.COUNT_FIELD_NAME = 'GRPRECCNT';\n    }\n    get caseSensitiveGroups() {\n        return this._caseSensitiveGroups;\n    }\n    set caseSensitiveGroups(value) {\n        this._caseSensitiveGroups = value;\n        this.updateCompareProc();\n    }\n    updateCompareProc() {\n        this.compareValues = this._caseSensitiveGroups\n            ? this.strictCompare\n            : this.caseInsensitiveCompare;\n    }\n    addGroup(settings) {\n        const cols = settings.columns || this.colStore.getColumnIds(settings.from, settings.to);\n        if (!this.colStore.validateColumns(cols))\n            throw \"Invalid columns: \" + cols;\n        if (this.hasColumnsInUse(cols))\n            throw \"Can't add same columns to different groups/aggregates\";\n        this.groups.push(Object.assign({ columns: cols }, settings));\n        return this;\n    }\n    addAggregateColumn(colIndexOrId, funcId) {\n        const colId = typeof colIndexOrId == 'string'\n            ? colIndexOrId\n            : this.colStore.getColumnIds(colIndexOrId, colIndexOrId)[0];\n        if (this.hasColumnsInUse([colId]) || !this.colStore.validateAggregate(colId, funcId))\n            throw 'Invalid aggregation function for the column: ' + colId;\n        this.aggregates.push({ colId, funcId });\n        return this;\n    }\n    addGrandTotals() {\n        this.useGrandTotals = true;\n        return this;\n    }\n    addCounts() {\n        this.useRecordCount = true;\n        return this;\n    }\n    getGroups() {\n        let cols = [];\n        const mappedGrops = this.groups.map(grp => {\n            cols = cols.concat(grp.columns);\n            return Object.assign(Object.assign({}, grp), { columns: Array.from(cols), aggregates: Array.from(this.aggregates) });\n        });\n        return mappedGrops;\n    }\n    getInternalGroups() {\n        return this.groups;\n    }\n    lastGroup() {\n        const groups = this.getGroups();\n        return groups[groups.length - 1];\n    }\n    getAggregates() {\n        return this.aggregates;\n    }\n    hasAggregates() {\n        return this.aggregates.length > 0;\n    }\n    hasGroups() {\n        return this.groups.length > 0;\n    }\n    hasGrandTotals() {\n        return this.useGrandTotals;\n    }\n    hasRecordCount() {\n        return this.useRecordCount;\n    }\n    isEmpty() {\n        return !(this.hasAggregates() || this.hasGroups() ||\n            this.hasAggregates() || this.hasRecordCount());\n    }\n    drop() {\n        console.warn('\"drop()\" method is obsolete. Use \"clear()\" instead');\n        this.clear();\n    }\n    clear() {\n        this.groups = [];\n        this.aggregates = [];\n        this.useGrandTotals = false;\n        this.useRecordCount = false;\n        this.caseSensitiveGroups = false;\n        return this;\n    }\n    /**\n     * Checks if all columns from the list passed in the parameter are \"unused\".\n     * Here \"unused column\" means a column that is included neither in any group nor in the aggregates list.\n     * @param cols - the array of column IDs\n     * @returns true if all columns in the list are not used anywhere, othervise - fals\n     */\n    hasColumnsInUse(cols) {\n        for (const group of this.groups) {\n            const interCols = group.columns\n                .filter(c => cols.indexOf(c) >= 0);\n            if (interCols.length > 0)\n                return true;\n        }\n        for (const aggr of this.aggregates) {\n            if (cols.indexOf(aggr.colId) >= 0)\n                return true;\n        }\n        return false;\n    }\n    needAggrCalculation() {\n        return (this.hasAggregates() || this.hasRecordCount())\n            && (this.hasGrandTotals() || this.hasGroups());\n    }\n    saveToData() {\n        return {\n            groups: Array.from(this.groups),\n            ugt: this.useGrandTotals,\n            urc: this.useRecordCount,\n            csg: this.caseSensitiveGroups,\n            aggregates: Array.from(this.aggregates)\n        };\n    }\n    loadFromData(data) {\n        if (data) {\n            if (typeof data.ugt !== 'undefined')\n                this.useGrandTotals = data.ugt;\n            if (typeof data.urc !== 'undefined')\n                this.useRecordCount = data.urc;\n            if (typeof data.csg !== 'undefined')\n                this.caseSensitiveGroups = data.csg;\n            if (data.groups) {\n                this.groups = Array.from(data.groups);\n            }\n            if (data.aggregates) {\n                this.aggregates = Array.from(data.aggregates);\n            }\n        }\n    }\n    buildGroupKey(group, row) {\n        const caseInsensitive = !this.caseSensitiveGroups;\n        let result = {};\n        if (group) {\n            for (const colId of group.columns) {\n                let keyVal = row.getValue(colId);\n                if (caseInsensitive && typeof (keyVal) === 'string') {\n                    keyVal = keyVal.toLowerCase();\n                }\n                result[colId] = keyVal;\n            }\n        }\n        return result;\n    }\n    //returns true if value1 == value2\n    strictCompare(value1, value2) {\n        if (value1 instanceof Date) {\n            return value1.getTime() === value2.getTime();\n        }\n        else\n            return value1 === value2;\n    }\n    //makes a case insensative comparision of two values and return true if there are equal\n    caseInsensitiveCompare(value1, value2) {\n        if (value1 instanceof Date) {\n            return value1.getTime() === value2.getTime();\n        }\n        else {\n            const val1 = (typeof value1 === 'string') ? value1.toLowerCase() : value1;\n            const val2 = (typeof value2 === 'string') ? value2.toLowerCase() : value2;\n            return val1 === val2;\n        }\n    }\n}\n\nvar ColumnAlignment;\n(function (ColumnAlignment) {\n    ColumnAlignment[ColumnAlignment[\"None\"] = 0] = \"None\";\n    ColumnAlignment[ColumnAlignment[\"Left\"] = 1] = \"Left\";\n    ColumnAlignment[ColumnAlignment[\"Center\"] = 2] = \"Center\";\n    ColumnAlignment[ColumnAlignment[\"Right\"] = 3] = \"Right\";\n})(ColumnAlignment || (ColumnAlignment = {}));\nclass DataColumn {\n    constructor(desc) {\n        if (!desc)\n            throw Error(\"Options are required\");\n        if (!desc.id)\n            throw Error(\"Field Id is required\");\n        if (!desc.label)\n            throw Error(\"Label is required\");\n        this.id = desc.id;\n        this.type = utils.getIfDefined(desc.type, DataType.String);\n        this.label = desc.label;\n        this.originAttrId = desc.originAttrId;\n        this.isAggr = desc.isAggr || false;\n        this.displayFormat = desc.dfmt;\n        this.groupFooterColumnTemplate = desc.gfct;\n        this.style = desc.style || {};\n        this.description = desc.description;\n        this.calculatedWidth = 0;\n    }\n}\nclass DataColumnList {\n    constructor() {\n        this.items = [];\n        this.mapper = {};\n        this._dateColumnIdx = [];\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(colOrDesc) {\n        let col;\n        if (colOrDesc instanceof DataColumn) {\n            col = colOrDesc;\n        }\n        else {\n            col = new DataColumn(colOrDesc);\n        }\n        const index = this.items.length;\n        this.items.push(col);\n        this.mapper[col.id] = index;\n        if ([DataType.Date, DataType.DateTime, DataType.Time].indexOf(col.type) >= 0) {\n            this._dateColumnIdx.push(index);\n        }\n        return index;\n    }\n    updateDateColumnIdx() {\n        this._dateColumnIdx = this.getItems()\n            .filter(col => [DataType.Date, DataType.DateTime, DataType.Time].indexOf(col.type) >= 0)\n            .map((col, index) => index);\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.count) {\n            this.items[index] = col;\n            this.updateDateColumnIdx();\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex) {\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n            this.updateDateColumnIdx();\n        }\n    }\n    get(index) {\n        if (index >= 0 && index < this.count) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    getIndex(id) {\n        return this.mapper[id];\n    }\n    getItems() {\n        return this.items;\n    }\n    getDateColumnIndexes() {\n        return this._dateColumnIdx;\n    }\n    removeAt(index) {\n        const col = this.get(index);\n        this.items.splice(index, 1);\n        const removeDate = this._dateColumnIdx.indexOf(index);\n        if (removeDate >= 0) {\n            this._dateColumnIdx.splice(removeDate, 1);\n        }\n        delete this.mapper[col.id];\n    }\n    clear() {\n        this.items = [];\n        this._dateColumnIdx = [];\n        this.mapper = {};\n    }\n}\n\nclass DataRow {\n    constructor(columns, values) {\n        this.columns = columns;\n        this.values = values;\n    }\n    toArray() {\n        return Array.from(this.values);\n    }\n    size() {\n        return this.values.length;\n    }\n    getValue(colIdOrIndex) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        return this.values[index];\n    }\n    setValue(colIdOrIndex, value) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        this.values[index] = value;\n    }\n}\n\nclass EasyDataTable {\n    constructor(options) {\n        this._chunkSize = 1000;\n        this._elasticChunks = false;\n        this.cachedRows = [];\n        this.total = 0;\n        this.loader = null;\n        this.needTotal = true;\n        this.isInMemory = false;\n        options = options || {};\n        this._chunkSize = options.chunkSize || this._chunkSize;\n        this._elasticChunks = options.elasticChunks || this._elasticChunks;\n        this.loader = options.loader;\n        if (typeof options.inMemory !== 'undefined') {\n            this.isInMemory = options.inMemory;\n        }\n        if (this.isInMemory) {\n            this.needTotal = false;\n        }\n        this._columns = new DataColumnList();\n        this.onUpdate = options.onUpdate;\n        if (options.columns) {\n            for (const colDesc of options.columns) {\n                this._columns.add(colDesc);\n            }\n        }\n        if (options.rows) {\n            for (const rowData of options.rows) {\n                const row = this.createRow(rowData);\n                this.addRow(row);\n            }\n        }\n        this.needTotal = !this._elasticChunks;\n    }\n    get columns() {\n        return this._columns;\n    }\n    get chunkSize() {\n        return this._chunkSize;\n    }\n    set chunkSize(value) {\n        this._chunkSize = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    get elasticChunks() {\n        return this._elasticChunks;\n    }\n    set elasticChunks(value) {\n        this._elasticChunks = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    getRows(params) {\n        let fromIndex = 0, count = this._chunkSize;\n        if (params) {\n            if ('page' in params) {\n                fromIndex = params.pageSize * (params.page - 1);\n                count = params.pageSize;\n            }\n            else {\n                fromIndex = params.offset;\n                count = params.limit;\n            }\n        }\n        let endIndex = fromIndex + count; //the first index of the next page\n        //if we don't calculate total on this request\n        if (!this.needTotal && !this.elasticChunks) {\n            if (fromIndex >= this.total) {\n                return Promise.resolve([]);\n            }\n            if (endIndex > this.total) {\n                endIndex = this.total;\n            }\n        }\n        if (this.isInMemory && endIndex > this.cachedRows.length) {\n            endIndex = this.cachedRows.length;\n        }\n        let allChunksCached = endIndex <= this.cachedRows.length;\n        if (allChunksCached) {\n            return Promise.resolve(this.cachedRows.slice(fromIndex, endIndex));\n        }\n        //if loader is not defined\n        if (!this.loader) {\n            throw `Loader is not defined. Can't get the rows from ${fromIndex} to ${endIndex}`;\n        }\n        // we need total only for the first request\n        const needTotal = this.needTotal;\n        if (this.needTotal) {\n            this.needTotal = false;\n        }\n        let offset = this.cachedRows.length;\n        let limit = endIndex - offset;\n        if (limit < this._chunkSize) {\n            limit = this._chunkSize;\n        }\n        const resultPromise = this.loader.loadChunk({\n            offset: offset,\n            limit: limit,\n            needTotal: needTotal\n        })\n            .then(result => {\n            if (needTotal) {\n                this.total = result.total;\n            }\n            Array.prototype.push.apply(this.cachedRows, result.table.getCachedRows());\n            if (endIndex > this.cachedRows.length) {\n                endIndex = this.cachedRows.length;\n            }\n            if (this.elasticChunks) {\n                const count = result.table.getCachedCount();\n                if (count < limit) {\n                    this.total = this.cachedRows.length;\n                }\n            }\n            this.fireUpdated();\n            return this.cachedRows.slice(fromIndex, endIndex);\n        });\n        return resultPromise;\n    }\n    getRow(index) {\n        return this.getRows({ offset: index, limit: 1 })\n            .then(rows => rows.length > 0 ? rows[0] : null);\n    }\n    getTotal() {\n        return this.total;\n    }\n    setTotal(total) {\n        this.total = total;\n        this.needTotal = false;\n    }\n    getCachedCount() {\n        return this.cachedRows.length;\n    }\n    clear() {\n        this.columns.clear();\n        this.cachedRows = [];\n        this.total = 0;\n        this.needTotal = !this._elasticChunks;\n        this.fireUpdated();\n    }\n    createRow(dataOrRow) {\n        const dateIdx = this._columns.getDateColumnIndexes();\n        const values = new Array(this._columns.count);\n        const getValue = dataOrRow instanceof DataRow\n            ? (colId) => dataOrRow.getValue(colId)\n            : (colId) => dataOrRow[colId];\n        if (dataOrRow) {\n            this.columns.getItems().forEach((column) => {\n                const value = getValue(column.id);\n                const index = this.columns.getIndex(column.id);\n                values[index] = (dateIdx.indexOf(index) >= 0)\n                    ? this.mapDate(value, column.type)\n                    : value;\n            });\n        }\n        return new DataRow(this._columns, values);\n    }\n    mapDate(value, dtype) {\n        if (value) {\n            let result = new Date(value);\n            if (isNaN(result.getTime())\n                && dtype == DataType.Time) {\n                result = utils.strToTime(value);\n            }\n            return result;\n        }\n        return null;\n    }\n    addRow(rowOrValues) {\n        let newRow;\n        if (Array.isArray(rowOrValues)) {\n            let values = rowOrValues;\n            const dateIdx = this._columns.getDateColumnIndexes();\n            if (dateIdx.length > 0) {\n                for (const idx of dateIdx) {\n                    if (values[idx]) {\n                        values[idx] = this.mapDate(values[idx], this._columns.get(idx).type);\n                    }\n                }\n            }\n            newRow = new DataRow(this._columns, values);\n        }\n        else {\n            newRow = this.createRow(rowOrValues);\n        }\n        this.cachedRows.push(newRow);\n        const cachedTotal = this.getCachedCount();\n        if (cachedTotal > this.total) {\n            this.total = cachedTotal;\n        }\n        return newRow;\n    }\n    getCachedRows() {\n        return this.cachedRows;\n    }\n    totalIsKnown() {\n        if (this.elasticChunks) {\n            const count = this.getCachedCount();\n            return count === this.total;\n        }\n        return !this.needTotal;\n    }\n    fireUpdated() {\n        if (this.onUpdate) {\n            this.onUpdate(this);\n        }\n    }\n}\n\n/**\n * EasyData representation of GUID.\n */\nclass EasyGuid {\n    /**\n     * Generates new GUID.\n     * @returns The string representation of GUID.\n     */\n    static newGuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * The representation of event emitter.\n */\nclass EventEmitter {\n    /**\n     * The default constructor.\n     * @param source The source.\n     */\n    constructor(source) {\n        this.silentMode = 0;\n        this.events = new Array();\n        this.source = source;\n    }\n    /**\n     * Subscries to the event.\n     * @param eventType The event type.\n     * @param callback The callback.\n     * @returns The subscribtion ID.\n     */\n    subscribe(eventType, callback) {\n        let event = this.getEventRecByType(eventType);\n        const eventCallback = {\n            id: EasyGuid.newGuid(),\n            callback: callback\n        };\n        if (event) {\n            event.eventCallbacks.push(eventCallback);\n        }\n        else {\n            event = {\n                type: eventType,\n                eventCallbacks: new Array(eventCallback)\n            };\n            this.events.push(event);\n        }\n        return eventCallback.id;\n    }\n    /**\n     * Unsubsribes from the event.\n     * @param eventType The event type.\n     * @param callbackId The subscribtion ID.\n     */\n    unsubscribe(eventType, callbackId) {\n        let event = this.getEventRecByType(eventType);\n        if (event) {\n            let index = -1;\n            for (index = 0; index < event.eventCallbacks.length; index++) {\n                if (event.eventCallbacks[index].id === callbackId) {\n                    break;\n                }\n            }\n            if (index >= 0) {\n                event.eventCallbacks.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Fires the event.\n     * @param eventType The event type.\n     * @param data The event data.\n     * @param postpone  The postpone.\n     * @param force To fire force. If value is `true`, ignores silent mode.\n     */\n    fire(eventType, data, postpone = 0, force = false) {\n        if (this.silentMode && !force) {\n            return;\n        }\n        let eventRec = this.getEventRecByType(eventType);\n        if (eventRec) {\n            const eqevent = {\n                type: eventType,\n                source: this.source,\n                data: data\n            };\n            let emitAllFunc = () => {\n                for (let callback of eventRec.eventCallbacks) {\n                    callback.callback(eqevent);\n                }\n            };\n            if (postpone > 0) {\n                setTimeout(emitAllFunc, postpone);\n            }\n            else {\n                emitAllFunc();\n            }\n        }\n    }\n    /**\n     * Enters to silent mode.\n     */\n    enterSilentMode() {\n        this.silentMode++;\n    }\n    /**\n     * Exits from silent mode.\n     */\n    exitSilentMode() {\n        if (this.silentMode) {\n            this.silentMode--;\n        }\n    }\n    /**\n     * Checks if emitter is in silent mode.\n     * @return `true`, if silent mode is enable.\n     */\n    isSilent() {\n        return this.silentMode > 0;\n    }\n    getEventRecByType(eventType) {\n        for (let event of this.events) {\n            if (event.type == eventType) {\n                return event;\n            }\n        }\n        return null;\n    }\n}\n\nfunction repeatString(str, times) {\n    return str.repeat(times);\n}\nfunction reverseString(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\nfunction strEndsWith(str, symbol) {\n    return str && str.lastIndexOf(symbol) == (str.length - symbol.length);\n}\n/**\n * Adds two paths and returns the result\n * Correctly processes leading and trailing slashes\n * @param path1\n * @param path2\n */\nfunction combinePath(path1, path2) {\n    let result = path1;\n    if (result != null && result.length > 0) {\n        if (result.charAt(result.length - 1) != '/')\n            result += \"/\";\n        result += path2;\n    }\n    else {\n        result = path2;\n    }\n    return result;\n}\n\nvar liquid;\n(function (liquid) {\n    function renderLiquidTemplate(template, vars) {\n        let result = template;\n        if (vars) {\n            for (let v in vars) {\n                const liquidVarRegexp = new RegExp('\\{\\{' + v + '\\}\\}', 'g');\n                result = result.replace(liquidVarRegexp, vars[v]);\n            }\n        }\n        return result;\n    }\n    liquid.renderLiquidTemplate = renderLiquidTemplate;\n})(liquid || (liquid = {}));\n\ni18n.resetLocales();\n\n//types\nif (typeof Object.values !== 'function') {\n    Object.values = function (obj) {\n        return Object.keys(obj).map(key => obj[key]);\n    };\n}\nif (typeof Math.trunc !== 'function') {\n    Math.trunc = function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n}\n\nexport { AggregationSettings, ColumnAlignment, DataColumn, DataColumnList, DataRow, DataType, EasyDataTable, EasyGuid, EditorTag, EntityAttrKind, EventEmitter, HttpClient, HttpMethod, HttpRequest, HttpResponseError, MetaData, MetaEntity, MetaEntityAttr, SpecialDatesResolver, TimeValue, ValueEditor, combinePath, i18n, liquid, registerSpecialDatesResolver, repeatString, reverseString, strEndsWith, utils };\n//# sourceMappingURL=easydata.core.es.js.map\n","\n/*!\n * EasyData.JS UI v1.4.20\n * Copyright 2023 Korzh.com\n * Licensed under MIT\n */\n\n/*!\n * EasyData.JS Core v1.4.20\n * Copyright 2023 Korzh.com\n * Licensed under MIT\n */\n\n/** Represents the common types of the data. */\nvar DataType;\n(function (DataType) {\n    /** Unknown type value*/\n    DataType[DataType[\"Unknown\"] = 0] = \"Unknown\";\n    /** String value*/\n    DataType[DataType[\"String\"] = 1] = \"String\";\n    /** 8-bit integer value */\n    DataType[DataType[\"Byte\"] = 2] = \"Byte\";\n    /** 16-bit integer value */\n    DataType[DataType[\"Word\"] = 3] = \"Word\";\n    /** 32-bit integer value */\n    DataType[DataType[\"Int32\"] = 4] = \"Int32\";\n    /** 64-bit integer value */\n    DataType[DataType[\"Int64\"] = 5] = \"Int64\";\n    /** Boolean value */\n    DataType[DataType[\"Bool\"] = 6] = \"Bool\";\n    /** Floating-point numeric value */\n    DataType[DataType[\"Float\"] = 7] = \"Float\";\n    /** Money value */\n    DataType[DataType[\"Currency\"] = 8] = \"Currency\";\n    /** Binary-coded decimal value */\n    DataType[DataType[\"BCD\"] = 9] = \"BCD\";\n    /** Date value */\n    DataType[DataType[\"Date\"] = 10] = \"Date\";\n    /** Time value */\n    DataType[DataType[\"Time\"] = 11] = \"Time\";\n    /** Date and time value */\n    DataType[DataType[\"DateTime\"] = 12] = \"DateTime\";\n    /** Autoincrement 32-bit integer value */\n    DataType[DataType[\"Autoinc\"] = 13] = \"Autoinc\";\n    /** MEMO value (text with unlimited length) */\n    DataType[DataType[\"Memo\"] = 14] = \"Memo\";\n    /** BLOB value (any data with unlimited length) */\n    DataType[DataType[\"Blob\"] = 15] = \"Blob\";\n    /** Fixed character value */\n    DataType[DataType[\"FixedChar\"] = 16] = \"FixedChar\";\n    /** The unique identifier */\n    DataType[DataType[\"Guid\"] = 17] = \"Guid\";\n    /*-------- Spatial data types ----------*/\n    /** Any geometry data */\n    DataType[DataType[\"Geometry\"] = 18] = \"Geometry\";\n    /** Any data that represents some geography objects</summary> */\n    DataType[DataType[\"Geography\"] = 19] = \"Geography\";\n})(DataType || (DataType = {}));\n\nvar EntityAttrKind;\n(function (EntityAttrKind) {\n    EntityAttrKind[EntityAttrKind[\"Data\"] = 0] = \"Data\";\n    EntityAttrKind[EntityAttrKind[\"Virtual\"] = 1] = \"Virtual\";\n    EntityAttrKind[EntityAttrKind[\"Lookup\"] = 2] = \"Lookup\";\n})(EntityAttrKind || (EntityAttrKind = {}));\n\nvar HttpMethod;\n(function (HttpMethod) {\n    HttpMethod[\"Trace\"] = \"TRACE\";\n    HttpMethod[\"Options\"] = \"OPTIONS\";\n    HttpMethod[\"Get\"] = \"GET\";\n    HttpMethod[\"Put\"] = \"PUT\";\n    HttpMethod[\"Post\"] = \"POST\";\n    HttpMethod[\"Delete\"] = \"DELETE\";\n})(HttpMethod || (HttpMethod = {}));\n\nvar utils;\n(function (utils) {\n    function getAllDataTypes() {\n        return Object.values(DataType).filter(item => typeof item === \"number\");\n    }\n    utils.getAllDataTypes = getAllDataTypes;\n    function getDateDataTypes() {\n        return [DataType.Time, DataType.Date, DataType.DateTime];\n    }\n    utils.getDateDataTypes = getDateDataTypes;\n    function getStringDataTypes() {\n        return [DataType.String, DataType.Memo, DataType.FixedChar];\n    }\n    utils.getStringDataTypes = getStringDataTypes;\n    const _numericTypes = [DataType.Byte, DataType.Word, DataType.Int32,\n        DataType.Int64, DataType.Float, DataType.Currency, DataType.Autoinc];\n    function getNumericDataTypes() {\n        return _numericTypes;\n    }\n    utils.getNumericDataTypes = getNumericDataTypes;\n    const _intTypes = [DataType.Byte, DataType.Word, DataType.Int32, DataType.Int64, DataType.Autoinc];\n    //-------------- object functions -------------------\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function copies only the first level properties.\n     * For a deep copy please use `assignDeep`\n     * @param target - the target object\n     * @param args  - an array of the source objects\n     */\n    function assign(target, ...args) {\n        for (let i = 0; i < args.length; i++) {\n            let source = args[i];\n            if (source) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    utils.assign = assign;\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function make a deep copy -\n     * so `assignDeep` will be called recursively for all object properties\n     * on the first level.\n     * @param target - the target object\n     * @param sources  - an array of the source objects\n     */\n    function assignDeep(target, ...sources) {\n        return assignDeepCore(new WeakMap(), target, sources);\n    }\n    utils.assignDeep = assignDeep;\n    function assignDeepCore(hashSet, target, sources) {\n        if (!target) {\n            target = {};\n        }\n        for (let source of sources) {\n            if (source) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        let sourceVal = source[key];\n                        if (sourceVal !== null && typeof sourceVal === 'object') {\n                            if (hashSet.has(sourceVal)) {\n                                target[key] = hashSet.get(sourceVal);\n                            }\n                            else {\n                                if (Array.isArray(sourceVal)) {\n                                    target[key] = createArrayFrom(sourceVal);\n                                    hashSet.set(sourceVal, target[key]);\n                                }\n                                else {\n                                    if (typeof target[key] == 'undefined' || target[key] == null) {\n                                        target[key] = Object.create(Object.getPrototypeOf(sourceVal));\n                                    }\n                                    hashSet.set(sourceVal, target[key]);\n                                    assignDeepCore(hashSet, target[key], [sourceVal]);\n                                }\n                            }\n                        }\n                        else {\n                            target[key] = sourceVal;\n                        }\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    function getIfDefined(value, defaultValue) {\n        return (typeof value !== 'undefined') ? value : defaultValue;\n    }\n    utils.getIfDefined = getIfDefined;\n    function IsDefinedAndNotNull(value) {\n        return typeof value !== 'undefined' && value !== null;\n    }\n    utils.IsDefinedAndNotNull = IsDefinedAndNotNull;\n    function copyArrayTo(collection1, collection2) {\n        const len1 = collection1.length;\n        const len2 = collection2.length;\n        for (let i = 0; i < len1 && i < len2; i++) {\n            collection2[i] = collection1[i];\n        }\n    }\n    utils.copyArrayTo = copyArrayTo;\n    function createArrayFrom(collection) {\n        let result = [];\n        for (let item of collection) {\n            result.push(item);\n        }\n        return result;\n    }\n    utils.createArrayFrom = createArrayFrom;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the found object or null.\n     * @param array\n     * @param id\n     */\n    function findItemById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return array[idx];\n        }\n        return null;\n    }\n    utils.findItemById = findItemById;\n    function findItemIndexById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return idx;\n        }\n        return -1;\n    }\n    utils.findItemIndexById = findItemIndexById;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the index of the found element, or -1 if nothing was found.\n     * @param array\n     * @param id\n     */\n    function indexOfArrayItem(arr, item) {\n        if (arr.indexOf) {\n            return arr.indexOf(item);\n        }\n        else {\n            let len = arr.length;\n            for (let i = 0; i < len; i++) {\n                if (item == arr[i]) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n    utils.indexOfArrayItem = indexOfArrayItem;\n    /**\n     * Moves an item in some array to a new position\n     * @param array\n     * @param index1\n     * @param index2\n     */\n    function moveArrayItem(array, index1, index2) {\n        if (index1 >= array.length) {\n            throw 'Index out of bounds: ' + index1;\n        }\n        if (index2 >= array.length) {\n            index2 = array.length - 1;\n        }\n        let item = array.splice(index1, 1)[0];\n        array.splice(index2, 0, item);\n    }\n    utils.moveArrayItem = moveArrayItem;\n    /**\n     * Searches for a particular item in the array are removes that item if found.\n     * @param arr\n     * @param value\n     */\n    function removeArrayItem(arr, value) {\n        let index = arr.indexOf(value);\n        if (index != -1) {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    utils.removeArrayItem = removeArrayItem;\n    function insertArrayItem(arr, index, value) {\n        arr.splice(index, 0, value);\n    }\n    utils.insertArrayItem = insertArrayItem;\n    function fillArray(arr, value, start = 0, end) {\n        let len = arr.length >>> 0;\n        var relativeStart = start >> 0;\n        var k = relativeStart < 0 ?\n            Math.max(len + relativeStart, 0) :\n            Math.min(relativeStart, len);\n        var relativeEnd = end === undefined ?\n            len : end >> 0;\n        let final = relativeEnd < 0 ?\n            Math.max(len + relativeEnd, 0) :\n            Math.min(relativeEnd, len);\n        while (k < final) {\n            arr[k] = value;\n            k++;\n        }\n        return arr;\n    }\n    utils.fillArray = fillArray;\n    //------------ DOM utils ------------\n    /**\n     * Calculates the shift on which we need to move our element horizontally\n     * to find current window\n     * @param absLeft\n     * @param width\n     */\n    function shiftToFitWindow(absLeft, width) {\n        let body = document.getElementsByTagName('body')[0];\n        let winWidth = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\n        var absRight = absLeft + width;\n        let shift = 0;\n        if (absRight > winWidth) {\n            shift = winWidth - absRight - 10;\n            if (absLeft + shift < 0) {\n                shift = 10 - absLeft;\n            }\n        }\n        return shift;\n    }\n    utils.shiftToFitWindow = shiftToFitWindow;\n    /**\n     * Returns `true` if the value passed in the parameter is an object\n     * @param val\n     */\n    function isObject(val) {\n        if (val === null) {\n            return false;\n        }\n        return ((typeof val === 'function') || (typeof val === 'object'));\n    }\n    utils.isObject = isObject;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isNumericType(dtype) {\n        const index = _numericTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isNumericType = isNumericType;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isIntType(dtype) {\n        const index = _intTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isIntType = isIntType;\n    /**\n     * Returns `true` if the value passed in the parameter is an a numeric value\n     * @param val\n     */\n    function isNumeric(val) {\n        return !isNaN(parseFloat(val)) && isFinite(val);\n    }\n    utils.isNumeric = isNumeric;\n    /**\n     * Returns `true` if two data types  passed in parameters\n     * are compatible - so it's safe to copy the values between\n     * two expressions with these two types\n     * @param type1\n     * @param type2\n     */\n    function areCompatibleDataTypes(type1, type2) {\n        return typeof type1 == \"undefined\" || typeof type2 == \"undefined\" || type1 == DataType.Unknown || type2 == DataType.Unknown\n            || (type1 == type2) || (type1 == DataType.Date && type2 == DataType.DateTime)\n            || (type1 == DataType.DateTime && type2 == DataType.Date);\n    }\n    utils.areCompatibleDataTypes = areCompatibleDataTypes;\n    /**\n     * Returns `true` if the property with named `propName`\n     * in the object `obj` has some value\n     * @param obj\n     * @param propName\n     */\n    function isPropSet(obj, propName) {\n        return obj[propName] || obj[propName.toLowerCase()] || obj[propName.toUpperCase()];\n    }\n    utils.isPropSet = isPropSet;\n    //-------------- ID generator -----------\n    const prefixIdLen = 4;\n    const symbols = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    const magicTicks = 636712160627685350;\n    /**\n     * Generates an unique ID\n     */\n    function generateId(prefix) {\n        if (!prefix) {\n            prefix = 'easy';\n        }\n        let prfx = (prefix.length > prefixIdLen) ? squeezeMoniker(prefix, prefixIdLen) : prefix;\n        if (prfx && prfx.length > 0) {\n            prfx += \"-\";\n        }\n        //adding 3 random symbols\n        var randCharPart = symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)];\n        var randInt = getRandomInt(0, 10000);\n        //generating main ID part \n        //it's a 36-base representation of some random number based on current value of ticks\n        let ticksNum36 = intToNumBase(getNowTicks() - magicTicks - randInt);\n        return prfx + randCharPart + ticksNum36;\n    }\n    utils.generateId = generateId;\n    function intToNumBase(value, targetBase = 36) {\n        var buffer = '';\n        var rest = value;\n        do {\n            buffer = symbols[rest % targetBase] + buffer;\n            rest = Math.floor(rest /= targetBase);\n        } while (rest > 0);\n        return buffer;\n    }\n    function squeezeMoniker(str, maxlen) {\n        let parts = str.split('-');\n        let pml = 1;\n        let ptt = maxlen;\n        if (parts.length < maxlen) {\n            pml = maxlen / parts.length;\n            ptt = parts.length;\n        }\n        let result = \"\";\n        for (let i = 0; i < ptt; i++) {\n            result += squeeze(parts[i], pml);\n        }\n        return result;\n    }\n    function squeeze(str, maxlen) {\n        const len = str.length;\n        if (len > maxlen) {\n            let step = len / maxlen;\n            let result = \"\";\n            result += str[0];\n            let nextIndex = step;\n            let ch;\n            for (let i = 1; i < len; i++) {\n                ch = str[i];\n                if (i + 1 > nextIndex) {\n                    result += ch;\n                    nextIndex += step;\n                }\n            }\n            return result;\n        }\n        else {\n            return str;\n        }\n    }\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n    function getNowTicks() {\n        return (621355968e9 + (new Date()).getTime() * 1e4);\n    }\n    function safeParseInt(str) {\n        const res = parseInt(str);\n        if (isNaN(res))\n            throw `\"${str}\" is not a valid number`;\n        return res;\n    }\n    function getDaysInMonth(month, year) {\n        return new Date(year, month + 1, 0).getDate();\n    }\n    // ------------- date/time functions -------------------\n    // TO DO: improve to process all datetime cases\n    function strToDateTime(value, format) {\n        if (!value || value.length == 0)\n            return new Date();\n        const normalizedValue = value.replace(/[^a-zA-Z0-9_]/g, '-');\n        const normalizedFormat = format.replace(/[^a-zA-Z0-9_]/g, '-');\n        const formatItems = normalizedFormat.split('-');\n        const dateItems = normalizedValue.split('-');\n        const monthIndex = formatItems.indexOf(\"MM\");\n        const dayIndex = formatItems.indexOf(\"dd\");\n        const yearIndex = formatItems.indexOf(\"yyyy\");\n        const hourIndex = formatItems.indexOf(\"HH\");\n        const minutesIndex = formatItems.indexOf(\"mm\");\n        const secondsIndex = formatItems.indexOf(\"ss\");\n        const today = new Date();\n        try {\n            const year = yearIndex > -1 && yearIndex < dateItems.length\n                ? safeParseInt(dateItems[yearIndex])\n                : today.getFullYear();\n            const month = monthIndex > -1 && monthIndex < dateItems.length\n                ? safeParseInt(dateItems[monthIndex]) - 1\n                : today.getMonth() - 1;\n            if (month > 11)\n                throw '';\n            const day = dayIndex > -1 && dayIndex < dateItems.length\n                ? safeParseInt(dateItems[dayIndex])\n                : today.getDate();\n            if (day > getDaysInMonth(month, year))\n                throw '';\n            const hour = hourIndex > -1 && hourIndex < dateItems.length\n                ? safeParseInt(dateItems[hourIndex])\n                : 0;\n            if (hour > 23)\n                throw '';\n            const minute = minutesIndex > -1 && minutesIndex < dateItems.length\n                ? safeParseInt(dateItems[minutesIndex])\n                : 0;\n            if (minute > 59)\n                throw '';\n            const second = secondsIndex > -1 && secondsIndex < dateItems.length\n                ? safeParseInt(dateItems[secondsIndex])\n                : 0;\n            if (second > 59)\n                throw '';\n            return new Date(year, month, day, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${value} is not a valid date.`;\n        }\n    }\n    utils.strToDateTime = strToDateTime;\n    function strToTime(str) {\n        const timeItems = str.split(':');\n        try {\n            const hour = timeItems.length > 0 ? safeParseInt(timeItems[0]) : 0;\n            if (hour > 23)\n                throw '';\n            const minute = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (minute > 59)\n                throw '';\n            const second = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (second > 59)\n                throw '';\n            return new Date(0, 0, 0, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${str} is not a valid time.`;\n        }\n    }\n    utils.strToTime = strToTime;\n})(utils || (utils = {}));\n\n/**\n * Contains internatialization functionality.\n */\nvar i18n;\n(function (i18n) {\n    let englishUSLocaleSettings = {\n        shortDateFormat: 'MM/dd/yyyy',\n        longDateFormat: 'dd MMM, yyyy',\n        editDateFormat: 'MM/dd/yyyy',\n        shortTimeFormat: 'HH:mm',\n        editTimeFormat: 'HH:mm',\n        longTimeFormat: 'HH:mm:ss',\n        shortMonthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        longMonthNames: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        shortWeekDayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        longWeekDayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        decimalSeparator: '.',\n        currency: 'USD'\n    };\n    let defaultLocale = {\n        localeId: 'en-US',\n        englishName: 'English',\n        displayName: 'English',\n        texts: {\n            ButtonOK: 'OK',\n            ButtonCancel: 'Cancel',\n            Yes: 'Yes',\n            No: 'No',\n            True: 'True',\n            False: 'False'\n        },\n        settings: englishUSLocaleSettings\n    };\n    let allLocales = {\n        'en-US': defaultLocale\n    };\n    let currentLocale;\n    const mappers = [];\n    function mapInfo(info) {\n        for (const mapper of mappers) {\n            mapper(info);\n        }\n    }\n    function addMapper(mapper) {\n        mappers.push(mapper);\n    }\n    i18n.addMapper = addMapper;\n    /**\n     * Gets added locales with their names.\n     * @returns  The locales.\n     */\n    function getLocales() {\n        let result = [];\n        for (let locale in allLocales) {\n            result.push({\n                locale: locale,\n                englishName: allLocales[locale].englishName,\n                displayName: allLocales[locale].displayName\n            });\n        }\n        return result.sort((a, b) => {\n            if (a.englishName > b.englishName) {\n                return 1;\n            }\n            else if (a.englishName === b.englishName) {\n                return 0;\n            }\n            return -1;\n        });\n    }\n    i18n.getLocales = getLocales;\n    /**\n     * Gets the current locale ID.\n     * @returns The locale.\n     */\n    function getCurrentLocale() {\n        return currentLocale.localeId;\n    }\n    i18n.getCurrentLocale = getCurrentLocale;\n    /**\n    * Sets the curent locale.\n    * @deprecated Use setCurrentLocale instead\n    * @param l The locale.\n    */\n    function setLocale(l) {\n        console.warn('This method is deprecated. Use setCurrentLocale instead');\n        setCurrentLocale(l);\n    }\n    i18n.setLocale = setLocale;\n    /**\n     * Sets the curent locale.\n     * @param localeId The locale.\n     */\n    function setCurrentLocale(localeId) {\n        const newLocale = allLocales[localeId];\n        if (newLocale) {\n            utils.assignDeep(currentLocale, newLocale);\n        }\n        else {\n            currentLocale.englishName = localeId;\n            currentLocale.displayName = localeId;\n            currentLocale.texts = utils.assignDeep({}, defaultLocale.texts);\n        }\n        currentLocale.localeId = localeId;\n    }\n    i18n.setCurrentLocale = setCurrentLocale;\n    /**\n     * Returns localized text by the key defined in parameter.\n     * Here we get the text of the resource string assigned to CmdClickToAddCondition key:\n     *\n     ```\n       const text = i18n.getText('CmdClickToAddCondition')\n     ```\n     * @param args The keys of the resource string.\n     * @returns Text of the resource defined by key or null if the key is not found\n     *\n     */\n    function getText(...args) {\n        let textsObj = currentLocale.texts;\n        let resText = '';\n        if (args && args.length) {\n            const argLength = args.length;\n            for (let i = 0; i < argLength; i++) {\n                resText = textsObj[args[i]];\n                if (typeof resText === 'object') {\n                    textsObj = resText;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return resText;\n    }\n    i18n.getText = getText;\n    function getLocaleSettings() {\n        return currentLocale.settings;\n    }\n    i18n.getLocaleSettings = getLocaleSettings;\n    function getOneLocaleSetting(key) {\n        return currentLocale.settings[key];\n    }\n    i18n.getOneLocaleSetting = getOneLocaleSetting;\n    function getShortMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.shortMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getShortMonthName = getShortMonthName;\n    function getLongMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.longMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getLongMonthName = getLongMonthName;\n    function getShortWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.shortWeekDayNames.length >= dayNum\n                ? settings.shortWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getShortWeekDayName = getShortWeekDayName;\n    function getLongWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.longWeekDayNames.length >= dayNum\n                ? settings.longWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getLongWeekDayName = getLongWeekDayName;\n    /**\n     * Updates the locale settings (date/time formats, separators, etc) for the specified locale.\n     * @param settingsToUpdate a LocaleSettings object\n     */\n    function updateLocaleSettings(settingsToUpdate) {\n        if (!currentLocale.settings) {\n            currentLocale.settings = utils.assignDeep({}, englishUSLocaleSettings);\n        }\n        currentLocale.settings = utils.assignDeep(currentLocale.settings, settingsToUpdate);\n    }\n    i18n.updateLocaleSettings = updateLocaleSettings;\n    /**\n     * Updates the texts for the current locale\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateLocaleTexts(texts) {\n        if (typeof texts !== 'object') {\n            console.error('Wrong parameter type in updateLocaleTexts function call.' +\n                'The first parameter (localeId) is not necessary. Use updateLocaleTexts(texts) instead');\n            return;\n        }\n        mapInfo({ localeId: currentLocale.localeId, texts: texts });\n        utils.assignDeep(currentLocale.texts, texts);\n    }\n    i18n.updateLocaleTexts = updateLocaleTexts;\n    function updateDefaultTexts(texts) {\n        for (let localeId in allLocales) {\n            let locale = allLocales[localeId];\n            locale.texts = utils.assignDeep({}, texts, locale.texts);\n        }\n        currentLocale.texts = utils.assignDeep({}, texts, currentLocale.texts);\n    }\n    i18n.updateDefaultTexts = updateDefaultTexts;\n    /**\n     * Updates the information for the specified locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be added\n     * @param localeInfo  a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function updateLocaleInfo(localeId, localeData) {\n        mapInfo(localeData);\n        let localeInfoToUpdate = currentLocale;\n        if (localeId) {\n            if (!localeData.localeId) {\n                localeData.localeId = localeId;\n            }\n            localeInfoToUpdate = allLocales[localeId];\n            if (!localeInfoToUpdate) {\n                localeInfoToUpdate = utils.assignDeep({}, defaultLocale);\n                allLocales[localeId] = localeInfoToUpdate;\n            }\n        }\n        utils.assignDeep(localeInfoToUpdate, localeData);\n    }\n    i18n.updateLocaleInfo = updateLocaleInfo;\n    /**\n     * Adds the locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be created\n     * @param localeInfo - a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function addLocale(localeId, localeInfo) {\n        updateLocaleInfo(localeId, localeInfo);\n    }\n    i18n.addLocale = addLocale;\n    /**\n     * Overwrites some locale settings (date/time formats) with the formats used in browser's current language\n     */\n    function determineSettingsByLocale(localeId) {\n        const now = new Date(2020, 5, 7, 19, 34, 56, 88);\n        const dateOptions = { year: 'numeric', month: 'numeric', day: 'numeric' };\n        const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n        const dateStr = now.toLocaleDateString(localeId, dateOptions);\n        const timeStr = now.toLocaleTimeString(localeId, timeOptions);\n        let dateFormat = dateStr\n            .replace('07', 'dd')\n            .replace('7', 'd')\n            .replace('06', 'MM')\n            .replace('6', 'M')\n            .replace('2020', 'yyyy')\n            .replace('20', 'yy');\n        let timeFormat = timeStr\n            .replace('19', 'HH')\n            .replace('07', 'hh')\n            .replace('7', 'h')\n            .replace('34', 'mm')\n            .replace('56', 'ss')\n            .replace('PM', 'tt');\n        if (!currentLocale.settings) {\n            currentLocale.settings = {};\n        }\n        const localeSettings = {\n            shortDateFormat: dateFormat,\n            shortTimeFormat: timeFormat\n        };\n        updateLocaleSettings(localeSettings);\n    }\n    function loadBrowserLocaleSettings() {\n        const lang = typeof navigator === 'object' ? navigator.language : undefined;\n        determineSettingsByLocale(lang);\n    }\n    function resetLocales() {\n        if (!currentLocale) {\n            currentLocale = utils.assignDeep({}, defaultLocale);\n            loadBrowserLocaleSettings();\n        }\n    }\n    i18n.resetLocales = resetLocales;\n    const DT_FORMAT_RGEX = /\\[([^\\]]+)]|y{2,4}|M{1,4}|d{1,2}|H{1,2}|h{1,2}|m{2}|s{2}|t{2}/g;\n    /**\n     * Returns string representation of the date/time value according to the custom format (second parameter)\n     * The format is compatible with the one used in .NET: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\n     * @param date\n     * @param format\n     */\n    function dateTimeToStr(date, format) {\n        const year = date.getFullYear();\n        const yearStr = year.toString();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const minute = date.getMinutes();\n        const second = date.getSeconds();\n        const hour12 = hour % 12 || 12; //the remainder of the division by 12. Or 12 if it's 0\n        const isPm = hour > 11;\n        const matches = {\n            yyyy: yearStr,\n            yy: yearStr.substring(yearStr.length - 2),\n            MMMM: i18n.getLongMonthName(month),\n            MMM: i18n.getShortMonthName(month),\n            MM: (month < 10) ? '0' + month : month.toString(),\n            M: month.toString(),\n            dd: (day < 10) ? '0' + day : day.toString(),\n            d: day.toString(),\n            HH: (hour < 10) ? '0' + hour : hour.toString(),\n            H: hour.toString(),\n            hh: (hour12 < 10) ? '0' + hour12 : hour12.toString(),\n            h: hour12.toString(),\n            tt: isPm ? 'PM' : 'AM',\n            mm: (minute < 10) ? '0' + minute : minute.toString(),\n            ss: (second < 10) ? '0' + second : second.toString()\n        };\n        return format.replace(DT_FORMAT_RGEX, (match, $1) => {\n            return $1 || matches[match];\n        });\n    }\n    i18n.dateTimeToStr = dateTimeToStr;\n    function dateTimeToStrEx(dateTime, dataType, format) {\n        if (format) {\n            if (format == 'd') {\n                format = buildShortDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'D') {\n                format = buildLongDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'f') {\n                format = buildShortDateTimeFormat(DataType.DateTime);\n            }\n            else if (format == 'F') {\n                format = buildLongDateTimeFormat(DataType.DateTime);\n            }\n        }\n        else {\n            format = buildShortDateTimeFormat(dataType);\n        }\n        return dateTimeToStr(dateTime, format);\n    }\n    i18n.dateTimeToStrEx = dateTimeToStrEx;\n    function buildShortDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.shortDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.shortTimeFormat;\n                break;\n            default:\n                format = localeSettings.shortDateFormat + ' ' + localeSettings.shortTimeFormat;\n                break;\n        }\n        return format;\n    }\n    function buildLongDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.longDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.longTimeFormat;\n                break;\n            default:\n                format = localeSettings.longDateFormat + ' ' + localeSettings.longTimeFormat;\n                break;\n        }\n        return format;\n    }\n    /**\n    * Converts a numeric value to the string taking into the account the decimal separator\n    * @param value - the number to convert\n    * @param format - the format of the number representation (D - decimal, F - float, C - currency)\n    * @param decimalSeparator - the symbol that represents decimal separator. If not specified the function gets the one from the current locale settings.\n    */\n    function numberToStr(number, format, decimalSeparator) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                return formatWithSequence(number, format.slice(1));\n            }\n            else if (['D', 'F', 'C'].indexOf(type) >= 0) {\n                const locale = getCurrentLocale();\n                return number.toLocaleString(locale, getNumberFormatOptions(format));\n            }\n            else {\n                return convertWithMask(Math.trunc(number), format);\n            }\n        }\n        const localeSettings = getLocaleSettings();\n        decimalSeparator = decimalSeparator || localeSettings.decimalSeparator;\n        return number.toString().replace('.', decimalSeparator);\n    }\n    i18n.numberToStr = numberToStr;\n    function booleanToStr(bool, format) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                const values = format.slice(1).split('|');\n                if (values.length > 1) {\n                    const value = values[(bool) ? 1 : 0];\n                    return i18n.getText(value) || value;\n                }\n            }\n        }\n        return `${bool}`;\n    }\n    i18n.booleanToStr = booleanToStr;\n    const cachedSequenceFormats = {};\n    function formatWithSequence(number, format) {\n        if (!cachedSequenceFormats[format]) {\n            // parse and save in cache format values \n            const values = format.split('|')\n                .filter(v => v.length > 0)\n                .map(v => v.split('='));\n            cachedSequenceFormats[format] = {};\n            if (values.length > 0) {\n                if (values[0].length > 1) {\n                    for (const value of values) {\n                        cachedSequenceFormats[format][Number.parseInt(value[1])] = value[0];\n                    }\n                }\n                else {\n                    values.forEach((value, index) => {\n                        cachedSequenceFormats[format][index] = value[0];\n                    });\n                }\n            }\n        }\n        const values = cachedSequenceFormats[format];\n        if (values[number] !== undefined) {\n            const value = values[number];\n            return i18n.getText(value) || value;\n        }\n        return number.toString();\n    }\n    function convertWithMask(number, mask) {\n        let value = number.toString();\n        let result = '';\n        let index = value.length - 1;\n        for (let i = mask.length - 1; i >= 0; i--) {\n            const ch = mask.charAt(i);\n            if (ch === '#' || ch === '0') {\n                if (index >= 0) {\n                    result += value.charAt(index);\n                    index--;\n                }\n                else {\n                    if (ch === '0') {\n                        result += 0;\n                    }\n                }\n            }\n            else {\n                result += ch;\n            }\n        }\n        return result.split('').reverse().join('');\n    }\n    function getNumberFormatOptions(format) {\n        const localeSettings = getLocaleSettings();\n        const type = format[0].toUpperCase();\n        const digits = (format.length > 1)\n            ? Number.parseInt(format.slice(1))\n            : type == 'D' ? 1 : 2;\n        switch (type) {\n            case 'D':\n                return {\n                    style: 'decimal',\n                    useGrouping: false,\n                    minimumIntegerDigits: digits\n                };\n            case 'C':\n                return {\n                    style: 'currency',\n                    currency: localeSettings.currency,\n                    minimumFractionDigits: digits\n                };\n            default:\n                return {\n                    style: 'decimal',\n                    minimumFractionDigits: digits,\n                    maximumFractionDigits: digits\n                };\n        }\n    }\n})(i18n || (i18n = {}));\n\nvar ColumnAlignment;\n(function (ColumnAlignment) {\n    ColumnAlignment[ColumnAlignment[\"None\"] = 0] = \"None\";\n    ColumnAlignment[ColumnAlignment[\"Left\"] = 1] = \"Left\";\n    ColumnAlignment[ColumnAlignment[\"Center\"] = 2] = \"Center\";\n    ColumnAlignment[ColumnAlignment[\"Right\"] = 3] = \"Right\";\n})(ColumnAlignment || (ColumnAlignment = {}));\n\nclass DataRow {\n    constructor(columns, values) {\n        this.columns = columns;\n        this.values = values;\n    }\n    toArray() {\n        return Array.from(this.values);\n    }\n    size() {\n        return this.values.length;\n    }\n    getValue(colIdOrIndex) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        return this.values[index];\n    }\n    setValue(colIdOrIndex, value) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        this.values[index] = value;\n    }\n}\n\n/**\n * EasyData representation of GUID.\n */\nclass EasyGuid {\n    /**\n     * Generates new GUID.\n     * @returns The string representation of GUID.\n     */\n    static newGuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * The representation of event emitter.\n */\nclass EventEmitter {\n    /**\n     * The default constructor.\n     * @param source The source.\n     */\n    constructor(source) {\n        this.silentMode = 0;\n        this.events = new Array();\n        this.source = source;\n    }\n    /**\n     * Subscries to the event.\n     * @param eventType The event type.\n     * @param callback The callback.\n     * @returns The subscribtion ID.\n     */\n    subscribe(eventType, callback) {\n        let event = this.getEventRecByType(eventType);\n        const eventCallback = {\n            id: EasyGuid.newGuid(),\n            callback: callback\n        };\n        if (event) {\n            event.eventCallbacks.push(eventCallback);\n        }\n        else {\n            event = {\n                type: eventType,\n                eventCallbacks: new Array(eventCallback)\n            };\n            this.events.push(event);\n        }\n        return eventCallback.id;\n    }\n    /**\n     * Unsubsribes from the event.\n     * @param eventType The event type.\n     * @param callbackId The subscribtion ID.\n     */\n    unsubscribe(eventType, callbackId) {\n        let event = this.getEventRecByType(eventType);\n        if (event) {\n            let index = -1;\n            for (index = 0; index < event.eventCallbacks.length; index++) {\n                if (event.eventCallbacks[index].id === callbackId) {\n                    break;\n                }\n            }\n            if (index >= 0) {\n                event.eventCallbacks.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Fires the event.\n     * @param eventType The event type.\n     * @param data The event data.\n     * @param postpone  The postpone.\n     * @param force To fire force. If value is `true`, ignores silent mode.\n     */\n    fire(eventType, data, postpone = 0, force = false) {\n        if (this.silentMode && !force) {\n            return;\n        }\n        let eventRec = this.getEventRecByType(eventType);\n        if (eventRec) {\n            const eqevent = {\n                type: eventType,\n                source: this.source,\n                data: data\n            };\n            let emitAllFunc = () => {\n                for (let callback of eventRec.eventCallbacks) {\n                    callback.callback(eqevent);\n                }\n            };\n            if (postpone > 0) {\n                setTimeout(emitAllFunc, postpone);\n            }\n            else {\n                emitAllFunc();\n            }\n        }\n    }\n    /**\n     * Enters to silent mode.\n     */\n    enterSilentMode() {\n        this.silentMode++;\n    }\n    /**\n     * Exits from silent mode.\n     */\n    exitSilentMode() {\n        if (this.silentMode) {\n            this.silentMode--;\n        }\n    }\n    /**\n     * Checks if emitter is in silent mode.\n     * @return `true`, if silent mode is enable.\n     */\n    isSilent() {\n        return this.silentMode > 0;\n    }\n    getEventRecByType(eventType) {\n        for (let event of this.events) {\n            if (event.type == eventType) {\n                return event;\n            }\n        }\n        return null;\n    }\n}\n\nvar liquid;\n(function (liquid) {\n    function renderLiquidTemplate(template, vars) {\n        let result = template;\n        if (vars) {\n            for (let v in vars) {\n                const liquidVarRegexp = new RegExp('\\{\\{' + v + '\\}\\}', 'g');\n                result = result.replace(liquidVarRegexp, vars[v]);\n            }\n        }\n        return result;\n    }\n    liquid.renderLiquidTemplate = renderLiquidTemplate;\n})(liquid || (liquid = {}));\n\ni18n.resetLocales();\n\n//types\nif (typeof Object.values !== 'function') {\n    Object.values = function (obj) {\n        return Object.keys(obj).map(key => obj[key]);\n    };\n}\nif (typeof Math.trunc !== 'function') {\n    Math.trunc = function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n}\n\nvar browserUtils;\n(function (browserUtils) {\n    let _isFirefox = null;\n    let _isIE = null;\n    function IsIE() {\n        if (_isIE === null) {\n            const ua = navigator.userAgent;\n            /* MSIE used to detect old browsers and Trident used to newer ones*/\n            _isIE = ua.indexOf(\"MSIE \") > -1 || ua.indexOf(\"Trident/\") > -1;\n        }\n        return _isIE;\n    }\n    browserUtils.IsIE = IsIE;\n    function IsEdge() {\n        const ua = window.navigator.userAgent;\n        return !IsIE() && ua.includes('Edge/');\n    }\n    browserUtils.IsEdge = IsEdge;\n    function IsFirefox() {\n        if (_isFirefox === null) {\n            const ua = navigator.userAgent;\n            _isFirefox = ua.toLowerCase().indexOf('firefox') > -1;\n        }\n        return _isFirefox;\n    }\n    browserUtils.IsFirefox = IsFirefox;\n    let _detectedIsMobileMode = false;\n    let _isMobileMode = undefined;\n    let detectIsMobileMode = () => {\n        const oldValue = isMobileMode();\n        _detectedIsMobileMode = window.matchMedia('only screen and (max-width: 840px)').matches\n            || window.matchMedia('only screen and (max-height: 420px)').matches;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    };\n    detectIsMobileMode();\n    window.addEventListener('resize', () => detectIsMobileMode());\n    function isMobileMode() {\n        if (_isMobileMode !== undefined) {\n            return _isMobileMode;\n        }\n        else {\n            return _detectedIsMobileMode;\n        }\n    }\n    browserUtils.isMobileMode = isMobileMode;\n    function setIsMobileMode(value) {\n        const oldValue = isMobileMode();\n        _isMobileMode = value;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    }\n    browserUtils.setIsMobileMode = setIsMobileMode;\n    let mobileModeChangeHandler;\n    function onMobileModeChanged(callback) {\n        mobileModeChangeHandler = callback;\n    }\n    browserUtils.onMobileModeChanged = onMobileModeChanged;\n    function getMobileCssClass() {\n        return isMobileMode() ? 'k-mobile' : null;\n    }\n    browserUtils.getMobileCssClass = getMobileCssClass;\n})(browserUtils || (browserUtils = {}));\n\n/**\n * Wraps all the elements inside \"parent\" by \"wrapper\" element\n * @param parent The element to add wrapper to.\n * @param wrapper The element that will wrap child elements.\n */\nfunction wrapInner(parent, wrapper) {\n    parent.appendChild(wrapper);\n    while (parent.firstChild !== wrapper) {\n        wrapper.appendChild(parent.firstChild);\n    }\n}\n/**\n * Creates ands adds a new [[HTMLElement]] to \"parent\"\n * @param parent The element to add new element to.\n * @param tag Html tag of the new element.\n * @param options The options. In particular, options.cssClass sets the new element class.\n * @returns New element.\n */\nfunction addElement(parent, tag, options) {\n    let element = document.createElement(tag);\n    let opts = options || {};\n    if (opts.cssClass) {\n        element.className = opts.cssClass;\n    }\n    parent.appendChild(element);\n    return element;\n}\n/**\n * Adds css class to the html element.\n * @param element The element to add css class to.\n * @param className The name of the css class to be added.\n */\nfunction addCssClass(element, className) {\n    element.className = (element.className)\n        ? element.className + ' ' + className\n        : className;\n}\n/**\n * Hides the html element.\n * @param element The element to be hidden.\n */\nfunction hideElement(element) {\n    element.style.display = 'none';\n}\n/**\n * Shows the html element.\n * @param element The element to be shown.\n * @param display The value of \"display\" style to be set. Default value is \"block\".\n */\nfunction showElement(element, display) {\n    if (!display) {\n        display = '';\n    }\n    element.style.display = display;\n}\n/**\n * Hides the \"first\" element and shows the \"second\".\n * @param first The element to be hidden.\n * @param second The element to be shown.\n * @param options The options. The following options are applied:\n * - display - the value of \"display\" style to be set. Default value is \"block\"\n * - duration - the duration of fading in and out\n * - complete - the callback to be called when toggle is complete\n */\nfunction toggleVisibility(first, second, options) {\n    if (!options) {\n        options = {};\n    }\n    if (!options.display) {\n        options.display = '';\n    }\n    if (!options.duration) {\n        options.duration = 200;\n    }\n    //TODO: later we need to make it fading in and out\n    hideElement(first);\n    showElement(second, options.display);\n    if (options.complete) {\n        options.complete();\n    }\n}\n/**\n * Checks if element is visible\n * @param element The element to check.\n * @returns `true` if visible, otherwise - `false`.\n */\nfunction isVisible(element) {\n    return element.style.display != 'none'\n        && element.offsetWidth != 0\n        && element.offsetHeight != 0;\n}\nfunction createBrowserEvent(eventName) {\n    var event;\n    if (typeof (Event) === 'function') {\n        event = new Event(eventName);\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent(eventName, true, true);\n    }\n    return event;\n}\nfunction getViewportSize() {\n    const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction getDocSize() {\n    if (browserUtils.IsIE())\n        return getWinSize();\n    const width = Math.max(document.documentElement.clientWidth, document.body.clientWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight, document.body.clientHeight || 0);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction getScrollPos() {\n    const body = document.body;\n    const docElem = document.documentElement;\n    return {\n        top: window.pageYOffset || docElem.scrollTop || body.scrollTop,\n        left: window.pageXOffset || docElem.scrollLeft || body.scrollLeft\n    };\n}\nfunction getElementAbsolutePos(element) {\n    let res = { x: 0, y: 0 };\n    if (element !== null) {\n        const position = offset(element);\n        res = { x: position.left, y: position.top };\n    }\n    return res;\n}\nfunction offset(element) {\n    const defaultBoundingClientRect = { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 };\n    let box;\n    try {\n        box = element.getBoundingClientRect();\n    }\n    catch (_a) {\n        box = defaultBoundingClientRect;\n    }\n    const body = document.body;\n    const docElem = document.documentElement;\n    const scollPos = getScrollPos();\n    const scrollTop = scollPos.top;\n    const scrollLeft = scollPos.left;\n    const clientTop = docElem.clientTop || body.clientTop || 0;\n    const clientLeft = docElem.clientLeft || body.clientLeft || 0;\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n    return { top: Math.round(top), left: Math.round(left) };\n}\nfunction getWinSize() {\n    return {\n        width: window.innerWidth,\n        height: window.innerHeight\n    };\n}\nfunction slideDown(target, duration, callback) {\n    target.style.removeProperty('display');\n    let display = window.getComputedStyle(target).display;\n    if (display === 'none')\n        display = 'block';\n    target.style.display = display;\n    let height = target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0 + 'px';\n    target.style.paddingTop = 0 + 'px';\n    target.style.paddingBottom = 0 + 'px';\n    target.style.marginTop = 0 + 'px';\n    target.style.marginBottom = 0 + 'px';\n    target.offsetHeight;\n    target.style.boxSizing = 'border-box';\n    target.style.transitionProperty = \"height, margin, padding\";\n    target.style.transitionDuration = duration + 'ms';\n    target.style.height = height + 'px';\n    target.style.removeProperty('padding-top');\n    target.style.removeProperty('padding-bottom');\n    target.style.removeProperty('margin-top');\n    target.style.removeProperty('margin-bottom');\n    window.setTimeout(() => {\n        target.style.removeProperty('height');\n        target.style.removeProperty('overflow');\n        target.style.removeProperty('transition-duration');\n        target.style.removeProperty('transition-property');\n        target.style.removeProperty('box-sizing');\n        if (callback) {\n            callback();\n        }\n    }, duration);\n}\nfunction slideUp(target, duration, callback) {\n    target.style.transitionProperty = 'height, margin, padding';\n    target.style.transitionDuration = duration + 'ms';\n    target.style.boxSizing = 'border-box';\n    target.style.height = target.offsetHeight + 'px';\n    target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0 + 'px';\n    target.style.paddingTop = 0 + 'px';\n    target.style.paddingBottom = 0 + 'px';\n    target.style.marginTop = 0 + 'px';\n    target.style.marginBottom = 0 + 'px';\n    window.setTimeout(() => {\n        target.style.display = 'none';\n        target.style.removeProperty('height');\n        target.style.removeProperty('padding-top');\n        target.style.removeProperty('padding-bottom');\n        target.style.removeProperty('margin-top');\n        target.style.removeProperty('margin-bottom');\n        target.style.removeProperty('overflow');\n        target.style.removeProperty('transition-duration');\n        target.style.removeProperty('transition-property');\n        target.style.removeProperty('box-sizing');\n        if (callback) {\n            callback();\n        }\n    }, duration);\n}\nconst eqCssPrefix = 'eqjs';\nconst eqCssMobile = 'eqjs-mobile';\n\nfunction mask(input, maskPattern) {\n    const d = { 9: '[0-9]', a: '[a-z]' };\n    const mask = maskPattern.split('');\n    const keyDownHandler = (e) => {\n        // backspace key or delete key\n        if (e.keyCode === 8 || e.keyCode === 46) {\n            e.preventDefault();\n            let mskd = [];\n            let startSelection = input.selectionStart;\n            if (startSelection == 0)\n                return;\n            let selection = startSelection;\n            let onlyLodash = true;\n            for (let index = mask.length - 1; index >= 0; index--) {\n                const el = mask[index];\n                if (d[el]) {\n                    let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                    if (t && index != startSelection - 1) {\n                        onlyLodash = false;\n                    }\n                    if (index === startSelection - 1)\n                        selection--;\n                    mskd.push(t && index != startSelection - 1\n                        ? input.value.charAt(index)\n                        : '_');\n                }\n                else {\n                    if (index === selection - 1)\n                        selection--;\n                    if (startSelection - 1 === index)\n                        startSelection--;\n                    mskd.push(el);\n                }\n            }\n            input.value = !onlyLodash ? mskd.reverse().join('') : '';\n            input.selectionStart = input.selectionEnd = selection < 0 ? 0 : selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const keyPressHandler = (e) => {\n        const char = String.fromCharCode(e.charCode);\n        if (char) {\n            e.preventDefault();\n            let mskd = [];\n            let selectionStart = input.selectionStart;\n            let selection = selectionStart;\n            mask.forEach((el, index) => {\n                if (d[el]) {\n                    const ch = (index != selectionStart)\n                        ? input.value.charAt(index)\n                        : char;\n                    let t = new RegExp(d[el], 'i').test(ch);\n                    mskd.push(t ? ch : '_');\n                    if (t && selectionStart === index)\n                        selection++;\n                }\n                else {\n                    mskd.push(el);\n                    if (selection === index)\n                        selection++;\n                    if (selectionStart === index)\n                        selectionStart++;\n                }\n            });\n            input.value = mskd.join('');\n            input.selectionStart = input.selectionEnd = selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const inputHandler = (e) => {\n        if (e.type === 'focus' && input.value !== '')\n            return;\n        let mskd = [];\n        let startSelection = input.selectionStart;\n        mask.forEach((el, index) => {\n            if (d[el]) {\n                let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                mskd.push(t ? input.value.charAt(index) : '_');\n            }\n            else {\n                mskd.push(el);\n            }\n        });\n        input.value = mskd.join('');\n        input.selectionStart = input.selectionEnd = startSelection;\n    };\n    input.addEventListener('keydown', keyDownHandler);\n    input.addEventListener('keypress', keyPressHandler);\n    input.addEventListener('input', inputHandler);\n    input.addEventListener('focus', inputHandler);\n}\n\nclass DomElementBuilder {\n    constructor(tag, parent) {\n        if (typeof tag === \"string\") {\n            this.element = document.createElement(tag);\n        }\n        else {\n            this.element = tag;\n        }\n        if (parent && this.element.parentElement !== parent) {\n            parent.appendChild(this.element);\n        }\n    }\n    addChild(tag, childBuilder) {\n        const builder = domel(tag, this.element);\n        if (childBuilder) {\n            childBuilder(builder);\n        }\n        return this;\n    }\n    addChildElement(element) {\n        if (element) {\n            this.element.appendChild(element);\n        }\n        return this;\n    }\n    attr(attrId, attrValue) {\n        this.element.setAttribute(attrId, attrValue);\n        return this;\n    }\n    id(value) {\n        return this.attr(\"id\", value);\n    }\n    focus() {\n        this.element.focus();\n        return this;\n    }\n    title(value) {\n        return this.attr('title', value);\n    }\n    data(dataId, dataValue = null) {\n        if (dataValue === null) {\n            this.element.removeAttribute('data-' + dataId);\n            return this;\n        }\n        else {\n            return this.attr('data-' + dataId, dataValue);\n        }\n    }\n    show() {\n        return this.removeStyle('display');\n    }\n    hide(toHide = true) {\n        return (toHide) ? this.setStyle('display', 'none') : this;\n    }\n    visible(isVisible = true) {\n        return isVisible ? this.setStyle('visibility', 'visible') : this.setStyle('visibility', 'hidden');\n    }\n    isVisible() {\n        return !!(this.element.offsetWidth || this.element.offsetHeight || this.element.getClientRects().length);\n    }\n    addClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.add(fullList[i]);\n        }\n        return this;\n    }\n    removeClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.remove(fullList[i]);\n        }\n        return this;\n    }\n    toggleClass(className, force = undefined) {\n        if (className) {\n            this.element.classList.toggle(className, force);\n        }\n        return this;\n    }\n    on(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.addEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    off(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.removeEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    setStyle(styleId, styleValue) {\n        this.element.style.setProperty(styleId, styleValue);\n        return this;\n    }\n    removeStyle(styleId) {\n        this.element.style.removeProperty(styleId);\n        return this;\n    }\n    text(text) {\n        this.element.innerText = text;\n        return this;\n    }\n    html(html) {\n        this.element.innerHTML = html;\n        return this;\n    }\n    clear() {\n        const oldElem = this.element;\n        this.element = document.createElement(this.element.tagName);\n        oldElem.replaceWith(this.element);\n    }\n    addText(text) {\n        const textEl = document.createTextNode(text);\n        this.element.appendChild(textEl);\n        return this;\n    }\n    addHtml(html) {\n        this.element.innerHTML += html;\n        return this;\n    }\n    toDOM() {\n        return this.element;\n    }\n    appendTo(parent) {\n        if (parent) {\n            parent.appendChild(this.element);\n        }\n        return this;\n    }\n}\nclass DomTextAreaElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"textarea\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    rows(rows) {\n        this.element.rows = rows;\n        return this;\n    }\n    cols(cols) {\n        this.element.cols = cols;\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nclass DomInputElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"input\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    type(value) {\n        this.element.type = value;\n        return this;\n    }\n    size(value) {\n        this.element.size = value;\n        return this;\n    }\n    value(value) {\n        if (value instanceof Date) {\n            this.element.valueAsDate = value;\n        }\n        else if (typeof value === \"number\") {\n            this.element.valueAsNumber = value;\n        }\n        else {\n            this.element.value = value;\n        }\n        return this;\n    }\n    mask(maskPattern) {\n        mask(this.element, maskPattern);\n        return this;\n    }\n}\nclass DomSelectElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"select\", parent);\n        }\n    }\n    addOption(value) {\n        const option = document.createElement('option');\n        if (typeof value === \"string\") {\n            option.value = value;\n            option.innerHTML = value;\n        }\n        else {\n            option.value = value.value;\n            option.innerHTML = value.title || value.value;\n            option.selected = value.selected || false;\n        }\n        this.element.appendChild(option);\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nfunction domel(tag, parent) {\n    if (tag === \"div\" || tag instanceof HTMLDivElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    if (tag === \"span\" || tag instanceof HTMLSpanElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"a\" || tag instanceof HTMLAnchorElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"button\" || tag instanceof HTMLButtonElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"img\" || tag instanceof HTMLImageElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"input\" || tag instanceof HTMLInputElement) {\n        return new DomInputElementBuilder(tag instanceof HTMLInputElement ? tag : null, parent);\n    }\n    else if (tag === \"textarea\" || tag instanceof HTMLTextAreaElement) {\n        return new DomTextAreaElementBuilder(tag instanceof HTMLTextAreaElement ? tag : null, parent);\n    }\n    else if (tag === \"select\" || tag instanceof HTMLSelectElement) {\n        return new DomSelectElementBuilder(tag instanceof HTMLSelectElement ? tag : null, parent);\n    }\n    return new DomElementBuilder(tag, parent);\n}\n\nconst touchEventIsDefined = typeof TouchEvent !== 'undefined';\nvar DropEffect;\n(function (DropEffect) {\n    DropEffect[\"None\"] = \"none\";\n    DropEffect[\"Allow\"] = \"allow\";\n    DropEffect[\"Forbid\"] = \"forbid\";\n})(DropEffect || (DropEffect = {}));\nclass EqDragEvent {\n    constructor(item, dragImage, sourceEvent) {\n        this.dropEffect = DropEffect.Allow;\n        this.pageX = 0;\n        this.pageY = 0;\n        this.item = item;\n        this.dragImage = dragImage;\n        this.data = item.data;\n        this.sourceEvent = sourceEvent;\n        if (sourceEvent && sourceEvent instanceof MouseEvent) {\n            this.pageX = sourceEvent.pageX,\n                this.pageY = sourceEvent.pageY;\n        }\n        if (sourceEvent && touchEventIsDefined && sourceEvent instanceof TouchEvent\n            && sourceEvent.touches[0]) {\n            this.pageX = sourceEvent.touches[0].pageX,\n                this.pageY = sourceEvent.touches[0].pageY;\n        }\n    }\n}\nclass Position {\n    constructor(ev) {\n        if (ev && ev instanceof MouseEvent) {\n            this.x = ev.pageX,\n                this.y = ev.pageY;\n        }\n        if (ev && touchEventIsDefined && ev instanceof TouchEvent && ev.touches[0]) {\n            this.x = ev.touches[0].pageX,\n                this.y = ev.touches[0].pageY;\n        }\n    }\n}\nclass DragManager {\n    constructor() {\n        this.delta = 5;\n        this.draggableItem = null;\n        this.dragImage = null;\n        this.finishedSuccessfully = false;\n        this.mouseDownPosition = null;\n        this.containerDescriptors = [];\n        this.containerDescriptorIndex = -1;\n        this.dropEffect = DropEffect.None;\n        this.classPrefix = 'eqjs-drop';\n        this.DRAG_DISABLED_ATTR = 'drag-disabled';\n    }\n    registerDraggableItem(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in draggle item is null or undefined\");\n        }\n        element.ondragstart = function () {\n            return false;\n        };\n        const detectDragging = (ev) => {\n            if (element.hasAttribute(this.DRAG_DISABLED_ATTR)) {\n                return;\n            }\n            ev.preventDefault();\n            if (ev instanceof MouseEvent) {\n                ev.stopPropagation();\n            }\n            const cursorPosition = new Position(ev);\n            if (Math.abs(cursorPosition.x - this.mouseDownPosition.x) > this.delta\n                || Math.abs(cursorPosition.y - this.mouseDownPosition.y) > this.delta) {\n                startDragging(ev);\n            }\n        };\n        const mouseMoveEventListener = (ev) => {\n            this.mouseMoveDragListener(ev);\n        };\n        const startDragging = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            this.finishedSuccessfully = false;\n            if (descriptor.beforeDragStart)\n                descriptor.beforeDragStart();\n            this.dragImage = domel('div')\n                .setStyle('position', 'absolute')\n                .setStyle('z-index', '65530')\n                .toDOM();\n            document.body.appendChild(this.dragImage);\n            this.dragImage.appendChild(element.cloneNode(true));\n            if (descriptor.renderer) {\n                descriptor.renderer(this.dragImage);\n            }\n            this.dropEffect = DropEffect.None;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n            this.draggableItem = {\n                element: element,\n                scope: descriptor.scope,\n                data: descriptor.data\n            };\n            this.updateDragItemPosition(ev);\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = this.dropEffect;\n            if (descriptor.onDragStart) {\n                descriptor.onDragStart(event);\n            }\n            if (this.dropEffect !== event.dropEffect) {\n                this.dropEffect = event.dropEffect;\n                this.updateImageClass(this.dropEffect);\n            }\n            document.addEventListener('mousemove', mouseMoveEventListener, true);\n            document.addEventListener('touchmove', mouseMoveEventListener, true);\n        };\n        const mouseDownListener = (ev) => {\n            if (touchEventIsDefined && ev instanceof TouchEvent) {\n                ev.preventDefault();\n            }\n            this.mouseDownPosition = new Position(ev);\n            element.addEventListener('mousemove', detectDragging);\n            element.addEventListener('touchmove', detectDragging);\n            document.addEventListener('mouseup', mouseUpListener);\n            document.addEventListener('touchend', mouseUpListener);\n        };\n        element.addEventListener('mousedown', mouseDownListener);\n        element.addEventListener('touchstart', mouseDownListener);\n        const mouseUpListener = (ev) => {\n            this.mouseDownPosition = null;\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            document.removeEventListener('mousemove', mouseMoveEventListener, true);\n            document.removeEventListener('touchmove', mouseMoveEventListener, true);\n            if (this.draggableItem) {\n                endDraggind(ev);\n            }\n        };\n        const endDraggind = (ev) => {\n            try {\n                if (this.containerDescriptorIndex >= 0) {\n                    const dropContDesc = this.containerDescriptors[this.containerDescriptorIndex];\n                    const container = {\n                        element: dropContDesc.element,\n                        scopes: dropContDesc.scopes,\n                        data: dropContDesc.data\n                    };\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    try {\n                        if (container.scopes.indexOf(this.draggableItem.scope) >= 0\n                            && this.dropEffect === DropEffect.Allow) {\n                            this.finishedSuccessfully = true;\n                            if (dropContDesc.onDrop) {\n                                dropContDesc.onDrop(container, event);\n                            }\n                        }\n                    }\n                    finally {\n                        if (dropContDesc.onDragLeave) {\n                            dropContDesc.onDragLeave(container, event);\n                        }\n                    }\n                }\n            }\n            finally {\n                try {\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    event.data.finishedSuccessfully = this.finishedSuccessfully;\n                    if (descriptor.onDragEnd) {\n                        descriptor.onDragEnd(event);\n                    }\n                }\n                finally {\n                    this.draggableItem = null;\n                    if (this.dragImage && this.dragImage.parentElement) {\n                        this.dragImage.parentElement.removeChild(this.dragImage);\n                    }\n                    this.dragImage = null;\n                    this.finishedSuccessfully = false;\n                    document.removeEventListener('mouseup', mouseUpListener);\n                    document.removeEventListener('touchend', mouseUpListener);\n                }\n            }\n        };\n    }\n    registerDropContainer(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in drop container is null or undefined\");\n        }\n        this.containerDescriptors.push(descriptor);\n    }\n    removeDropContainer(descriptorOrSlot) {\n        const descs = this.containerDescriptors\n            .filter(desc => desc === descriptorOrSlot\n            || desc.element == descriptorOrSlot);\n        if (descs) {\n            for (const desc of descs) {\n                utils.removeArrayItem(this.containerDescriptors, desc);\n            }\n        }\n    }\n    mouseMoveDragListener(ev) {\n        if (ev instanceof MouseEvent) {\n            ev.preventDefault();\n        }\n        ev.stopPropagation();\n        this.updateDragItemPosition(ev);\n        if (this.containerDescriptorIndex == -1) {\n            for (let i = 0; i < this.containerDescriptors.length; i++) {\n                const descriptor = this.containerDescriptors[i];\n                if (this.detectDragEnterEvent(descriptor.element, ev)) {\n                    this.containerDescriptorIndex = i;\n                    break;\n                }\n            }\n            if (this.containerDescriptorIndex >= 0) {\n                this.dragEnterEvent(ev);\n            }\n        }\n        else {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            if (this.detectDragLeaveEvent(descriptor.element, ev)) {\n                this.dragLeaveEvent(ev);\n                this.containerDescriptorIndex = -1;\n            }\n        }\n        if (this.containerDescriptorIndex >= 0) {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            const container = {\n                element: descriptor.element,\n                scopes: descriptor.scopes,\n                data: descriptor.data\n            };\n            if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n                const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                event.dropEffect = this.dropEffect;\n                if (descriptor.onDragOver) {\n                    descriptor.onDragOver(container, event);\n                }\n            }\n        }\n    }\n    updateCusror(dropEffect) {\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n            case DropEffect.Forbid:\n                this.setCursorStyle(this.dragImage, 'no-drop');\n                break;\n            default:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n        }\n    }\n    updateImageClass(dropEffect) {\n        this.dragImage.classList.remove(`${this.classPrefix}-allow`);\n        this.dragImage.classList.remove(`${this.classPrefix}-forbid`);\n        this.dragImage.classList.remove(`${this.classPrefix}-none`);\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.dragImage.classList.add(`${this.classPrefix}-allow`);\n                break;\n            case DropEffect.None:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n            case DropEffect.Forbid:\n                this.dragImage.classList.add(`${this.classPrefix}-forbid`);\n                break;\n            default:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n        }\n    }\n    setCursorStyle(element, cursor) {\n        if (element) {\n            element.style.cursor = cursor;\n            for (let i = 0; i < element.children.length; i++) {\n                this.setCursorStyle(element.children[i], cursor);\n            }\n        }\n    }\n    updateDragItemPosition(ev) {\n        if (this.dragImage) {\n            const pos = new Position(ev);\n            this.dragImage.style.top = (pos.y - this.dragImage.offsetHeight / 2) + 'px';\n            this.dragImage.style.left = (pos.x - this.dragImage.offsetWidth / 2) + 'px';\n        }\n    }\n    dragEnterEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.Allow;\n            if (descriptor.onDragEnter) {\n                descriptor.onDragEnter(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n        else {\n            if (this.dropEffect !== DropEffect.Forbid) {\n                this.dropEffect = DropEffect.None;\n                this.updateCusror(this.dropEffect);\n                this.updateImageClass(this.dropEffect);\n            }\n        }\n    }\n    dragLeaveEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.None;\n            if (descriptor.onDragLeave) {\n                descriptor.onDragLeave(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n    }\n    detectDragEnterEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y < containerPos.y || pos.y > containerPos.y + container.offsetHeight) {\n            return false;\n        }\n        if (pos.x < containerPos.x || pos.x > containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n    detectDragLeaveEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y > containerPos.y && pos.y < containerPos.y + container.offsetHeight\n            && pos.x > containerPos.x && pos.x < containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n}\n//global variable\nconst eqDragManager = new DragManager();\n\nvar AutoResizeColumns;\n(function (AutoResizeColumns) {\n    AutoResizeColumns[AutoResizeColumns[\"Always\"] = 0] = \"Always\";\n    AutoResizeColumns[AutoResizeColumns[\"Once\"] = 1] = \"Once\";\n    AutoResizeColumns[AutoResizeColumns[\"Never\"] = 2] = \"Never\";\n})(AutoResizeColumns || (AutoResizeColumns = {}));\n\n//import { CellRendererType } from \"./easy_grid_cell_renderer\";\n//import { GridCellRenderer } from './easy_grid_cell_renderer';\nconst DEFAULT_WIDTH_STRING = 250;\nconst ROW_NUM_WIDTH = 60;\nvar GridColumnAlign;\n(function (GridColumnAlign) {\n    GridColumnAlign[GridColumnAlign[\"NONE\"] = 1] = \"NONE\";\n    GridColumnAlign[GridColumnAlign[\"LEFT\"] = 2] = \"LEFT\";\n    GridColumnAlign[GridColumnAlign[\"CENTER\"] = 3] = \"CENTER\";\n    GridColumnAlign[GridColumnAlign[\"RIGHT\"] = 4] = \"RIGHT\";\n})(GridColumnAlign || (GridColumnAlign = {}));\nfunction MapAlignment(alignment) {\n    switch (alignment) {\n        case ColumnAlignment.Left:\n            return GridColumnAlign.LEFT;\n        case ColumnAlignment.Center:\n            return GridColumnAlign.CENTER;\n        case ColumnAlignment.Right:\n            return GridColumnAlign.RIGHT;\n        default:\n            return GridColumnAlign.NONE;\n    }\n}\nclass GridColumn {\n    constructor(column, grid, isRowNum = false) {\n        this._label = null;\n        this._description = null;\n        //public left: number;\n        this.align = GridColumnAlign.NONE;\n        this.isVisible = true;\n        this.isRowNum = false;\n        this.dataColumn = column;\n        this.grid = grid;\n        const widthOptions = grid.options.columnWidths || {};\n        if (column) {\n            if (column.style.alignment) {\n                this.align = MapAlignment(column.style.alignment);\n            }\n            this.width = (widthOptions && widthOptions[this.type]) ? widthOptions[this.type].default : DEFAULT_WIDTH_STRING;\n            this._description = column.description;\n        }\n        else if (isRowNum) {\n            this.isRowNum = true;\n            this.width = (widthOptions && widthOptions.rowNumColumn) ? widthOptions.rowNumColumn.default : ROW_NUM_WIDTH;\n            this._label = '';\n        }\n    }\n    get label() {\n        return this._label ? this._label : this.isRowNum ? '' : this.dataColumn.label;\n    }\n    ;\n    set label(value) {\n        this._label = this.label;\n    }\n    /** Get column description. */\n    get description() {\n        return this._description;\n    }\n    get type() {\n        return this.dataColumn ? this.dataColumn.type : null;\n    }\n}\nclass GridColumnList {\n    constructor(columnList, grid) {\n        this.items = [];\n        this.grid = grid;\n        this.sync(columnList);\n    }\n    sync(columnList, hasRowNumCol = true) {\n        this.clear();\n        const rowNumCol = new GridColumn(null, this.grid, true);\n        this.add(rowNumCol);\n        if (!hasRowNumCol) {\n            rowNumCol.isVisible = false;\n        }\n        if (columnList) {\n            for (let column of columnList.getItems()) {\n                const col = new GridColumn(column, this.grid);\n                if (this.grid.options.onSyncGridColumn) {\n                    this.grid.options.onSyncGridColumn(col);\n                }\n                this.add(col);\n            }\n        }\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(col) {\n        const index = this.items.length;\n        this.items.push(col);\n        return index;\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.items.length) {\n            this.items[index] = col;\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex)\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n    }\n    get(index) {\n        if (index >= 0 && index < this.items.length) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    //    public getIndex(name: string) : number {\n    //        return this.mapper[name];\n    //    }\n    getItems() {\n        return this.items;\n    }\n    removeAt(index) {\n        this.get(index);\n        this.items.splice(index, 1);\n        //delete this.mapper[col.name];\n    }\n    clear() {\n        this.items = [];\n        //this.mapper = {};\n    }\n}\n\nconst cssPrefix$1 = \"keg\";\nconst DFMT_REGEX = /{0:(.*?)}/g;\nvar CellRendererType;\n(function (CellRendererType) {\n    CellRendererType[CellRendererType[\"STRING\"] = 1] = \"STRING\";\n    CellRendererType[CellRendererType[\"NUMBER\"] = 2] = \"NUMBER\";\n    CellRendererType[CellRendererType[\"DATETIME\"] = 3] = \"DATETIME\";\n    CellRendererType[CellRendererType[\"BOOL\"] = 4] = \"BOOL\";\n})(CellRendererType || (CellRendererType = {}));\nconst StringCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const text = value ? value.toString().replace(/\\n/g, '\\u21B5 ') : '';\n    cellValueElement.innerText = text;\n    cellValueElement.title = text;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-left`);\n    }\n};\nconst NumberCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    let strValue = (value || '').toString();\n    if (typeof value == 'number') {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.numberToStr(value, $1);\n            });\n        }\n        else {\n            strValue = value.toLocaleString();\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst DateTimeCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const isDate = Object.prototype.toString.call(value) === '[object Date]';\n    let strValue = (value || '').toString();\n    if (isDate) {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.dateTimeToStrEx(value, column.type, $1);\n            });\n        }\n        else {\n            const locale = i18n.getCurrentLocale();\n            const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n            switch (column.type) {\n                case DataType.Date:\n                    strValue = value.toLocaleDateString(locale);\n                    break;\n                case DataType.Time:\n                    strValue = value.toLocaleTimeString(locale, timeOptions);\n                    break;\n                case DataType.DateTime:\n                    strValue = `${value.toLocaleDateString(locale)} ${value.toLocaleTimeString(locale, timeOptions)}`;\n                    break;\n            }\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst BoolCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    if (column.dataColumn && column.dataColumn.displayFormat\n        && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n        const strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n            return i18n.booleanToStr(value, $1);\n        });\n        return StringCellRendererDefault(strValue, column, cellValueElement);\n    }\n    else {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-bool`);\n        cellValueElement.classList.add(`${cssPrefix$1}-${value ? 'cell-value-true' : 'cell-value-false'}`);\n    }\n};\nclass GridCellRendererStore {\n    constructor(options) {\n        this.renderers = {};\n        this.defaultRenderers = {};\n        this.registerRenderer('StringDefault', StringCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.STRING, StringCellRendererDefault);\n        this.registerRenderer('NumberDefault', NumberCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.NUMBER, NumberCellRendererDefault);\n        this.registerRenderer('DateTimeDefault', DateTimeCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.DATETIME, DateTimeCellRendererDefault);\n        this.registerRenderer('BoolDefault', BoolCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.BOOL, BoolCellRendererDefault);\n    }\n    getDefaultRenderer(columnType) {\n        const cellType = this.getCellType(columnType);\n        return this.defaultRenderers[CellRendererType[cellType]];\n    }\n    getDefaultRendererByType(rendererType) {\n        return this.defaultRenderers[CellRendererType[rendererType]];\n    }\n    setDefaultRenderer(cellType, renderer) {\n        if (renderer) {\n            this.defaultRenderers[CellRendererType[cellType]] = renderer;\n        }\n    }\n    getRenderer(name) {\n        return this.renderers[name];\n    }\n    registerRenderer(name, renderer) {\n        this.renderers[name] = renderer;\n    }\n    getCellType(dataType) {\n        switch (dataType) {\n            case DataType.Autoinc:\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Currency:\n            case DataType.Float:\n            case DataType.Int32:\n            case DataType.Int64:\n                return CellRendererType.NUMBER;\n            case DataType.Date:\n            case DataType.DateTime:\n            case DataType.Time:\n                return CellRendererType.DATETIME;\n            case DataType.Bool:\n                return CellRendererType.BOOL;\n            default:\n                return CellRendererType.STRING;\n        }\n    }\n}\n\nconst DEFAULT_ROW_HEIGHT = 36;\n/** Represents a grid widget with columns rows, paging, custom rendering and more */\nclass EasyGrid {\n    /** Creates and initializes all internal properties of the grid object */\n    constructor(options) {\n        this.cssPrefix = \"keg\";\n        this.pagination = { page: 1, pageSize: 30, total: 0 };\n        this.paginationOptions = {\n            maxButtonCount: 10,\n            useBootstrap: false //true\n        };\n        this.defaultDataGridOptions = {\n            slot: null,\n            dataTable: null,\n            fixHeightOnFirstRender: false,\n            syncGridColumns: true,\n            useRowNumeration: true,\n            allowDragDrop: false,\n            aggregates: {\n                settings: null,\n                calculator: null\n            },\n            paging: {\n                enabled: true,\n                pageSize: 30,\n                pageSizeItems: [20, 30, 50, 100, 200]\n            },\n            columnWidths: {\n                autoResize: AutoResizeColumns.Always,\n                stringColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                numberColumns: {\n                    min: 60,\n                    default: 120\n                },\n                boolColumns: {\n                    min: 50,\n                    default: 80\n                },\n                dateColumns: {\n                    min: 80,\n                    default: 200\n                },\n                otherColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                rowNumColumn: {\n                    min: 40,\n                    default: 60\n                }\n            },\n            showPlusButton: false,\n            viewportRowsCount: null,\n            showActiveRow: true\n        };\n        this.rowsOnPagePromise = null;\n        this.containerInitialHeight = 0;\n        this.firstRender = true;\n        this.prevRowTotals = null;\n        this.landingIndex = -1;\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-col-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        this._activeRowIndex = -1;\n        if (options && options.paging) {\n            options.paging = utils.assign(this.defaultDataGridOptions.paging, options.paging);\n        }\n        this.options = this.mergeOptions(options);\n        this.processColumnWidthsOptions();\n        if (!this.options.slot)\n            throw Error('\"slot\" parameter is required to initialize EasyDataGrid');\n        if (!this.options.dataTable)\n            throw Error('\"dataTable\" parameter is required to initialize EasyDataGrid');\n        this.dataTable = options.dataTable;\n        this.eventEmitter = new EventEmitter(this);\n        this.cellRendererStore = new GridCellRendererStore(options);\n        this.columns = new GridColumnList(this.dataTable.columns, this);\n        this.setSlot(this.options.slot);\n        this.init(this.options);\n    }\n    mergeOptions(options) {\n        const colWidthOptions = utils.assignDeep({}, this.defaultDataGridOptions.columnWidths, options.columnWidths);\n        const pagingOptions = utils.assignDeep({}, this.defaultDataGridOptions.paging, options.paging);\n        const result = utils.assign({}, this.defaultDataGridOptions, options);\n        result.columnWidths = colWidthOptions;\n        result.paging = pagingOptions;\n        return result;\n    }\n    processColumnWidthsOptions() {\n        const widthOptions = this.options.columnWidths;\n        if (!widthOptions)\n            return;\n        //string columns\n        utils.getStringDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.stringColumns), widthOptions[dataType]);\n        });\n        //numeric columns\n        utils.getNumericDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.numberColumns), widthOptions[dataType]);\n        });\n        //bool columns\n        widthOptions[DataType.Bool] = Object.assign(Object.assign({}, widthOptions.boolColumns), widthOptions[DataType.Bool]);\n        //date columns\n        utils.getDateDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.dateColumns), widthOptions[dataType]);\n        });\n        //other columns\n        const knownTypes = [\n            ...utils.getStringDataTypes(),\n            ...utils.getNumericDataTypes(),\n            ...utils.getDateDataTypes(),\n            DataType.Bool\n        ];\n        utils.getAllDataTypes().forEach(dataType => {\n            if (!(dataType in knownTypes)) {\n                widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.otherColumns), widthOptions[dataType]);\n            }\n        });\n        widthOptions[DataType.Unknown] = widthOptions.otherColumns;\n    }\n    setSlot(slot) {\n        if (typeof slot === 'string') {\n            if (slot.length) {\n                if (slot[0] === '#') {\n                    this.slot = document.getElementById(slot.substring(1));\n                }\n                else if (slot[0] === '.') {\n                    const result = document.getElementsByClassName(slot.substring(1));\n                    if (result.length)\n                        this.slot = result[0];\n                }\n                else {\n                    throw Error('Unrecognized slot parameter ' +\n                        '(Must be id, class or HTMLElement): ' + slot);\n                }\n            }\n        }\n        else {\n            this.slot = slot;\n        }\n    }\n    /** Initializes grid widget according to the options passed in the parameter */\n    init(options) {\n        if (options.onInit) {\n            this.addEventListener('init', options.onInit);\n        }\n        if (options.onRowClick) {\n            this.addEventListener('rowClick', options.onRowClick);\n        }\n        if (options.onRowDbClick) {\n            this.addEventListener('rowDbClick', options.onRowDbClick);\n        }\n        if (options.onPlusButtonClick) {\n            this.addEventListener('plusButtonClick', options.onPlusButtonClick);\n        }\n        if (options.onColumnChanged) {\n            this.addEventListener('columnChanged', options.onColumnChanged);\n        }\n        if (options.onColumnDeleted) {\n            this.addEventListener('columnDeleted', options.onColumnDeleted);\n        }\n        if (options.onColumnMoved) {\n            this.addEventListener('columnMoved', options.onColumnMoved);\n        }\n        if (options.onPageChanged) {\n            this.addEventListener('pageChanged', options.onPageChanged);\n        }\n        if (options.onActiveRowChanged) {\n            this.addEventListener('activeRowChanged', options.onActiveRowChanged);\n        }\n        this.addEventListener('pageChanged', ev => this.activeRowIndex = -1);\n        utils.assignDeep(this.paginationOptions, options.pagination);\n        this.pagination.pageSize = this.options.paging.pageSize\n            || this.pagination.pageSize;\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"gridColumnMove\"],\n                onDragEnter: (_, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (_, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (_, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLandingSlot();\n                },\n                onDrop: (_, ev) => {\n                    this.dataTable.columns.move(ev.data.column, this.landingIndex);\n                    this.refresh();\n                    this.fireEvent({\n                        type: 'columnMoved',\n                        columnId: ev.data.column.id,\n                        newIndex: this.landingIndex\n                    });\n                }\n            });\n        }\n        this.refresh();\n        this.fireEvent('init');\n    }\n    /** Fires a grid event. You can pass either an event type\n     * (like 'init', 'rowClick', 'pageChanged', etc )\n     * or a ready-to-use grid event object\n     * */\n    fireEvent(event) {\n        if (typeof event === \"string\") {\n            this.eventEmitter.fire(event);\n        }\n        else {\n            this.eventEmitter.fire(event.type, event);\n        }\n    }\n    /** Allows to set the data (represented by a EasyDataTable object)\n     *  or to replace the existing one associated with the grid */\n    setData(data) {\n        this.dataTable = data;\n        this.clear();\n        this.refresh();\n    }\n    /** Returns the EasyDataTable object associated with the grid via `setData()` call */\n    getData() {\n        return this.dataTable;\n    }\n    /** Gets the list of grid columns */\n    getColumns() {\n        return this.columns;\n    }\n    /** This function is called when the grid is destroyed */\n    destroy() {\n        this.slot.innerHTML = \"\";\n    }\n    /** Clears the current DOM object and re-renders everything from the scratch */\n    refresh() {\n        this.clearDOM();\n        this.render();\n    }\n    clearDOM() {\n        this.slot.innerHTML = '';\n    }\n    /** Clears all DOM object in the grid and return it to its initial state */\n    clear() {\n        this.pagination.page = 1;\n        this.clearDOM();\n    }\n    /** Renders the grid */\n    render() {\n        if (!this.hasData() && !this.options.showPlusButton)\n            return;\n        this.containerInitialHeight = this.slot.clientHeight;\n        this.rootDiv = document.createElement('div');\n        this.rootDiv.style.width = '100%';\n        this.rootDiv.classList.add(`${this.cssPrefix}-root`);\n        this.columns.sync(this.dataTable.columns, this.options.useRowNumeration);\n        this.renderHeader();\n        this.rootDiv.appendChild(this.headerDiv);\n        this.renderBody();\n        this.rootDiv.appendChild(this.bodyDiv);\n        this.renderFooter();\n        this.rootDiv.appendChild(this.footerDiv);\n        let gridContainer = document.createElement('div');\n        gridContainer.classList.add(`${this.cssPrefix}-container`);\n        gridContainer.appendChild(this.rootDiv);\n        this.slot.appendChild(gridContainer);\n        const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise\n                .then(() => this.updateHeight())\n                .then(() => {\n                this.firstRender = false;\n                this.rowsOnPagePromise = null;\n            });\n        }\n        else {\n            setTimeout(() => {\n                this.updateHeight()\n                    .then(() => {\n                    this.firstRender = false;\n                    if (needAutoResize) {\n                        this.resizeColumns();\n                    }\n                });\n            }, 100);\n        }\n    }\n    updateHeight() {\n        return new Promise((resolve) => {\n            if (this.options.viewportRowsCount) {\n                const firstRow = this.bodyCellContainerDiv.firstElementChild;\n                const rowHeight = firstRow ? firstRow.offsetHeight : DEFAULT_ROW_HEIGHT;\n                const rowCount = this.options.viewportRowsCount; // || DEFAULT_ROW_COUNT;\n                let viewportHeight = rowHeight * rowCount;\n                domel(this.bodyViewportDiv)\n                    .setStyle('height', `${viewportHeight}px`);\n                setTimeout(() => {\n                    const sbHeight = this.bodyViewportDiv.offsetHeight - this.bodyViewportDiv.clientHeight;\n                    viewportHeight = viewportHeight + sbHeight;\n                    domel(this.bodyViewportDiv)\n                        .setStyle('height', `${viewportHeight}px`);\n                    resolve();\n                }, 100);\n                return;\n            }\n            else if (this.containerInitialHeight > 0) ;\n            resolve();\n        })\n            .then(() => {\n            if (this.options.fixHeightOnFirstRender && this.firstRender) {\n                this.slot.style.height = `${this.slot.offsetHeight}px`;\n            }\n        });\n    }\n    getContainerWidth() {\n        return this.columns.getItems()\n            .filter(col => col.isVisible)\n            .map(col => col.width)\n            .reduce((sum, current) => { return sum + current; });\n    }\n    renderHeader() {\n        this.headerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-header`)\n            .toDOM();\n        this.headerViewportDiv = domel('div', this.headerDiv)\n            .addClass(`${this.cssPrefix}-header-viewport`)\n            .toDOM();\n        this.headerCellContainerDiv = domel('div', this.headerViewportDiv)\n            .addClass(`${this.cssPrefix}-header-cell-container`)\n            .toDOM();\n        this.headerRowDiv = domel('div', this.headerCellContainerDiv)\n            .addClass(`${this.cssPrefix}-header-row`)\n            .toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let hd = this.renderColumnHeader(column, index);\n            this.headerRowDiv.appendChild(hd);\n            if (column.isRowNum) {\n                domel(hd)\n                    .addChildElement(this.renderHeaderButtons());\n            }\n        });\n        const containerWidth = this.getContainerWidth();\n        domel(this.headerCellContainerDiv)\n            .setStyle('width', `${containerWidth}px`);\n    }\n    hasData() {\n        return this.dataTable.columns.count > 0;\n    }\n    renderColumnHeader(column, index) {\n        let colBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-header-cell`)\n            .data('col-idx', `${index}`)\n            .setStyle('width', `${column.width}px`);\n        if (column.dataColumn) {\n            colBuilder\n                .data('col-id', `${column.dataColumn.id}`);\n        }\n        let colDiv = colBuilder.toDOM();\n        domel('div', colDiv)\n            .addClass(`${this.cssPrefix}-header-cell-resize`);\n        if (!column.isRowNum) {\n            domel('div', colDiv)\n                .addClass(`${this.cssPrefix}-header-cell-label`)\n                .text(column.label);\n        }\n        if (column.description) {\n            domel('div', colDiv)\n                .addClass('question-mark')\n                .title(column.description);\n        }\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: colDiv,\n                scope: \"gridColumnMove\",\n                data: { column: column },\n                renderer: (dragImage) => {\n                    dragImage.innerHTML = '';\n                    const attrLabel = document.createElement('div');\n                    attrLabel.innerText = column.label;\n                    dragImage.classList.add(`${this.cssPrefix}-sortable-helper`);\n                    dragImage.appendChild(attrLabel);\n                },\n                onDragStart: (ev) => {\n                    ev.dropEffect = DropEffect.Allow;\n                }\n            });\n        }\n        return colDiv;\n    }\n    renderBody() {\n        this.bodyDiv = domel('div')\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n        this.bodyViewportDiv = domel('div', this.bodyDiv)\n            .addClass(`${this.cssPrefix}-body-viewport`)\n            .attr('tabIndex', '0')\n            .toDOM();\n        this.bodyCellContainerDiv = domel('div', this.bodyViewportDiv)\n            .addClass(`${this.cssPrefix}-cell-container`)\n            .toDOM();\n        const showAggrs = this.canShowAggregates();\n        if (this.dataTable) {\n            this.showProgress();\n            this.rowsOnPagePromise = this.getRowsToRender()\n                .then((rows) => {\n                this.pagination.total = this.dataTable.getTotal();\n                this.hideProgress();\n                //prevent double rendering (bad solution, we have to figure out how to avoid this behavior properly)\n                this.bodyCellContainerDiv.innerHTML = '';\n                this.prevRowTotals = null;\n                let rowsToRender = 0;\n                if (rows.length) {\n                    const groups = showAggrs\n                        ? this.options.aggregates.settings.getGroups()\n                        : [];\n                    rowsToRender = (rows.length < this.pagination.pageSize)\n                        ? rows.length\n                        : this.pagination.pageSize;\n                    rows.forEach((row, index) => {\n                        if (showAggrs)\n                            this.updateTotalsState(groups, row);\n                        //we don't actually render the last row\n                        if (index < rowsToRender) {\n                            const tr = this.renderRow(row, index);\n                            this.bodyCellContainerDiv.appendChild(tr);\n                        }\n                    });\n                    const showGrandTotalsOnEachPage = this.options.aggregates && this.options.aggregates.showGrandTotalsOnEachPage;\n                    if (showAggrs && (this.isLastPage() || showGrandTotalsOnEachPage)) {\n                        const row = new DataRow(this.dataTable.columns, new Array(this.dataTable.columns.count));\n                        this.updateTotalsState(groups, row, true);\n                    }\n                }\n                const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n                if (needAutoResize) {\n                    this.resizeColumns();\n                }\n                else {\n                    const containerWidth = this.getContainerWidth();\n                    domel(this.bodyCellContainerDiv)\n                        .setStyle('width', `${containerWidth}px`);\n                }\n                return rowsToRender;\n            })\n                .catch(error => { console.error(error); return 0; });\n        }\n        this.bodyViewportDiv.addEventListener('scroll', ev => {\n            domel(this.headerViewportDiv)\n                .setStyle('margin-left', `-${this.bodyViewportDiv.scrollLeft}px`);\n        });\n        this.bodyViewportDiv.addEventListener('keydown', this.onViewportKeydown.bind(this));\n    }\n    isLastPage() {\n        if (this.dataTable.elasticChunks) {\n            return this.dataTable.totalIsKnown()\n                && (this.pagination.page * this.pagination.pageSize) >= this.pagination.total;\n        }\n        return this.pagination.page * this.pagination.pageSize >= this.pagination.total;\n    }\n    canShowAggregates() {\n        if (!this.options || !this.options.aggregates || !this.options.aggregates.settings)\n            return false;\n        const aggrSettings = this.options.aggregates.settings;\n        const result = (aggrSettings.hasAggregates() || aggrSettings.hasRecordCount())\n            && (aggrSettings.hasGroups() || aggrSettings.hasGrandTotals());\n        return result;\n    }\n    updateTotalsState(groups, newRow, isLast = false) {\n        const aggrSettings = this.options.aggregates.settings;\n        if (this.prevRowTotals && aggrSettings.hasGroups()) {\n            let changeLevel = -1;\n            for (let level = 1; level <= groups.length; level++) {\n                const group = groups[level - 1];\n                for (const col of group.columns) {\n                    if (!aggrSettings.compareValues(this.prevRowTotals.getValue(col), newRow.getValue(col))) {\n                        changeLevel = level;\n                        break;\n                    }\n                }\n                if (changeLevel !== -1)\n                    break;\n            }\n            if (changeLevel !== -1) {\n                for (let level = groups.length; level >= changeLevel; level--) {\n                    const row = new DataRow(this.dataTable.columns, this.prevRowTotals.toArray());\n                    const tr = this.renderTotalsRow(level, row);\n                    this.bodyCellContainerDiv.appendChild(tr);\n                }\n            }\n        }\n        if (isLast && aggrSettings.hasGrandTotals() && aggrSettings.hasAggregates()) {\n            const tr = this.renderTotalsRow(0, newRow);\n            this.bodyCellContainerDiv.appendChild(tr);\n        }\n        this.prevRowTotals = newRow;\n    }\n    applyGroupColumnTemplate(template, value, count) {\n        let result = template.replace(/{{\\s*GroupValue\\s*}}/g, value ? `${value}` : '-');\n        result = result.replace(/{{\\s*GroupCount\\s*}}/g, count ? `${count}` : '-');\n        return result;\n    }\n    renderTotalsRow(level, row) {\n        const aggrSettings = this.options.aggregates.settings;\n        const group = (level > 0)\n            ? aggrSettings.getGroups()[level - 1]\n            : { columns: [], aggregates: aggrSettings.getAggregates() };\n        const rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-totals`)\n            .addClass(`${this.cssPrefix}-totals-lv${level}`)\n            .data('totals-level', `${level}`)\n            .attr('tabindex', '-1');\n        const rowElement = rowBuilder.toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let val = '';\n            const colIndex = !column.isRowNum\n                ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                : -1;\n            if (!column.isRowNum && column.dataColumn) {\n                if (group.columns.indexOf(column.dataColumn.id) >= 0) {\n                    val = row.getValue(colIndex);\n                }\n            }\n            if (colIndex == this.dataTable.columns.count - 1) {\n                val = '.  .  .  .  .  .';\n            }\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        const aggrContainer = this.options.aggregates.calculator.getAggrContainer();\n        const aggrCols = aggrSettings.getAggregates().map(c => c.colId);\n        const key = aggrSettings.buildGroupKey(group, row);\n        aggrContainer.getAggregateData(level, key)\n            .then((values) => {\n            for (const aggrColId of aggrCols) {\n                row.setValue(aggrColId, values[aggrColId]);\n            }\n            rowElement.innerHTML = '';\n            this.columns.getItems().forEach((column, index) => {\n                if (!column.isVisible) {\n                    return;\n                }\n                let val = '';\n                const colIndex = !column.isRowNum\n                    ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                    : -1;\n                if (!column.isRowNum) {\n                    let isLastGroupColumn = false;\n                    if (column.dataColumn) {\n                        const groupColIndex = group.columns.indexOf(column.dataColumn.id);\n                        const aggrColIndex = aggrCols.indexOf(column.dataColumn.id);\n                        if (level > 0) {\n                            isLastGroupColumn = groupColIndex == group.columns.length - 1;\n                        }\n                        else {\n                            //if it's a grand total row consider first column as the last group column\n                            isLastGroupColumn = colIndex == 0;\n                        }\n                        if (groupColIndex >= 0 || aggrColIndex >= 0) {\n                            val = row.getValue(colIndex);\n                        }\n                    }\n                    let groupFooterTemplate = '';\n                    if (level > 0) {\n                        groupFooterTemplate = column.dataColumn.groupFooterColumnTemplate;\n                        //set the default template for the last grouping column\n                        if (!groupFooterTemplate && aggrSettings.hasRecordCount() && isLastGroupColumn) {\n                            groupFooterTemplate = '{{GroupValue}} ({{GroupCount}})';\n                        }\n                    }\n                    if (groupFooterTemplate) {\n                        const cellDiv = this.renderCell(column, index, val, rowElement);\n                        const innerCell = cellDiv.firstChild;\n                        val = innerCell.innerHTML;\n                        val = this.applyGroupColumnTemplate(groupFooterTemplate, val, values[aggrSettings.COUNT_FIELD_NAME]);\n                    }\n                }\n                const cellDiv = this.renderCell(column, index, val, rowElement);\n                rowElement.appendChild(cellDiv);\n            });\n        })\n            .catch((error) => console.error(error));\n        return rowElement;\n    }\n    onViewportKeydown(ev) {\n        if (this.options.showActiveRow) {\n            const rowCount = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row`).length;\n            let newValue;\n            switch (ev.key) {\n                case 'ArrowLeft':\n                    break;\n                case 'ArrowRight':\n                    break;\n                case 'ArrowUp':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? rowCount - 1 : this.activeRowIndex - 1;\n                    this.activeRowIndex = newValue >= 0 ? newValue : 0;\n                    break;\n                case 'ArrowDown':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? 0 : this.activeRowIndex + 1;\n                    this.activeRowIndex = newValue < rowCount ? newValue : rowCount - 1;\n                    break;\n            }\n        }\n    }\n    ensureRowVisibility(rowOrIndex) {\n        const row = typeof rowOrIndex === 'number'\n            ? this.getDataRow(rowOrIndex)\n            : rowOrIndex;\n        if (row) {\n            let rowRect = row.getBoundingClientRect();\n            const viewportRect = this.bodyViewportDiv.getBoundingClientRect();\n            const rowTop = rowRect.top - viewportRect.top;\n            const rowBottom = rowRect.bottom - viewportRect.top;\n            const viewportHeight = this.bodyViewportDiv.clientHeight;\n            const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n            if (rowTop > 0 &&\n                rowBottom <= viewportHeight &&\n                rowRect.top > 0 &&\n                rowRect.bottom < windowHeight) {\n                return;\n            }\n            if (rowTop < 0) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowTop;\n            }\n            else if (rowBottom > viewportHeight) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowBottom - viewportHeight;\n            }\n            rowRect = row.getBoundingClientRect();\n            if (rowRect.top < 0) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.top;\n            }\n            else if (rowRect.bottom > windowHeight) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.bottom - windowHeight;\n            }\n        }\n    }\n    /** Returns a promise with the list of the rows to render on one page.\n     * The list contains pageSize+1 row to make it possible\n     * to render the totals row (if it appears to be on the edge between pages)\n     */\n    getRowsToRender() {\n        if (this.options.paging.enabled === false) {\n            return Promise.resolve(this.dataTable.getCachedRows());\n        }\n        return this.dataTable.getRows({\n            offset: (this.pagination.page - 1) * this.pagination.pageSize,\n            limit: this.pagination.pageSize + 1\n        })\n            .catch(error => {\n            console.error(error);\n            return [];\n        });\n    }\n    renderFooter() {\n        this.footerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-footer`)\n            .toDOM();\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise.then(count => {\n                this.footerDiv.innerHTML = '';\n                this.footerPaginateDiv = this.renderPageNavigator();\n                this.footerDiv.appendChild(this.footerPaginateDiv);\n                const pageInfoBlock = this.renderPageInfoBlock(count);\n                this.footerDiv.appendChild(pageInfoBlock);\n            });\n        }\n    }\n    renderPageInfoBlock(count) {\n        const pageInfoDiv = domel('div')\n            .addClass(`${this.cssPrefix}-page-info`)\n            .toDOM();\n        const rowCount = this.dataTable.getTotal();\n        if (rowCount > 0) {\n            const fistPageRecordNum = count\n                ? (this.pagination.page - 1) * this.pagination.pageSize + 1\n                : 0;\n            const lastPageRecordNum = count\n                ? fistPageRecordNum + count - 1\n                : 0;\n            let totalStr = this.dataTable.getTotal().toString();\n            if (this.dataTable.elasticChunks) {\n                const count = this.dataTable.getCachedCount();\n                const total = this.dataTable.getTotal();\n                if (count !== total)\n                    totalStr = '?';\n            }\n            pageInfoDiv.innerHTML = i18n.getText('GridPageInfo')\n                .replace('{FirstPageRecordNum}', `<span>${fistPageRecordNum.toString()}</span>`)\n                .replace('{LastPageRecordNum}', `<span>${lastPageRecordNum.toString()}</span>`)\n                .replace('{Total}', `<span>${totalStr}</span>`);\n        }\n        return pageInfoDiv;\n    }\n    showProgress() {\n    }\n    hideProgress() {\n    }\n    getLocalIndexByGlobal(index) {\n        if (this.pagination) {\n            return index % this.pagination.pageSize;\n        }\n        else {\n            return index;\n        }\n    }\n    getGlobalIndexByLocal(index) {\n        if (this.pagination) {\n            return (this.pagination.page - 1) * this.pagination.pageSize + index;\n        }\n        else {\n            return index;\n        }\n    }\n    renderRow(row, index) {\n        let indexGlobal = this.getGlobalIndexByLocal(index);\n        let rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-${index % 2 == 1 ? 'odd' : 'even'}`)\n            .data('row-idx', `${indexGlobal}`)\n            .attr('tabindex', '-1')\n            .on('click', (ev) => {\n            this.activeRowIndex = index;\n            this.fireEvent({\n                type: 'rowClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        })\n            .on('dblclick', (ev) => {\n            this.fireEvent({\n                type: 'rowDbClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        });\n        if (index == 0) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-first`);\n        }\n        let rowElement = rowBuilder.toDOM();\n        if (this.options.showActiveRow && index == this.activeRowIndex) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-active`);\n        }\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            const colindex = column.isRowNum ? -1 : this.dataTable.columns.getIndex(column.dataColumn.id);\n            let val = column.isRowNum ? indexGlobal + 1 : row.getValue(colindex);\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        return rowElement;\n    }\n    renderCell(column, colIndex, value, rowElement) {\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-cell`)\n            .data('col-idx', `${colIndex}`)\n            .attr('tabindex', '-1')\n            .setStyle('width', `${column.width}px`);\n        if (column.align == GridColumnAlign.LEFT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-left`);\n        }\n        else if (column.align == GridColumnAlign.RIGHT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-right`);\n        }\n        else if (column.align == GridColumnAlign.CENTER) {\n            builder.addClass(`${this.cssPrefix}-cell-align-center`);\n        }\n        const cellElement = builder.toDOM();\n        const valueCell = cellElement.appendChild(domel('div')\n            .addClass(`${this.cssPrefix}-cell-value`)\n            .toDOM());\n        const cellRenderer = this.getCellRenderer(column);\n        if (cellRenderer) {\n            cellRenderer(value, column, valueCell, rowElement);\n        }\n        return cellElement;\n    }\n    getCellRenderer(column) {\n        let cellRenderer;\n        if (column.isRowNum) {\n            cellRenderer = this.cellRendererStore.getDefaultRendererByType(CellRendererType.NUMBER);\n        }\n        else {\n            cellRenderer = this.cellRendererStore.getDefaultRenderer(column.type);\n        }\n        if (this.options && this.options.onGetCellRenderer) {\n            cellRenderer = this.options.onGetCellRenderer(column, cellRenderer) || cellRenderer;\n        }\n        return cellRenderer;\n    }\n    /** Sets current grid pages (if paging is used) */\n    setPage(page) {\n        this.pagination.page = page;\n        this.fireEvent({ type: \"pageChanged\", page: page });\n        this.refresh();\n        this.bodyViewportDiv.focus();\n    }\n    renderPageNavigator() {\n        let paginateDiv = document.createElement('div');\n        paginateDiv.className = `${this.cssPrefix}-pagination-wrapper`;\n        const rowCount = this.dataTable.getTotal();\n        if (this.options.paging && this.options.paging.enabled && rowCount > 0) {\n            const prefix = this.paginationOptions.useBootstrap ? '' : `${this.cssPrefix}-`;\n            const buttonClickHandler = (ev) => {\n                const element = ev.target;\n                if (element.hasAttribute('data-page')) {\n                    const page = parseInt(element.getAttribute('data-page'));\n                    this.setPage(page);\n                }\n            };\n            const renderPageCell = (pageIndex, content, disabled, extreme, active) => {\n                const li = document.createElement('li');\n                li.className = `${prefix}page-item`;\n                if (!extreme) {\n                    if (active) {\n                        li.className += ' active';\n                    }\n                    const a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.innerHTML = content || pageIndex.toString();\n                    a.setAttribute(\"data-page\", `${pageIndex}`);\n                    a.className = `${prefix}page-link`;\n                    a.addEventListener(\"click\", buttonClickHandler);\n                    li.appendChild(a);\n                    return li;\n                }\n                let a = document.createElement('span');\n                a.setAttribute('aria-hidden', 'true');\n                a.className = `${prefix}page-link`;\n                if (disabled) {\n                    li.className += ' disabled';\n                }\n                else {\n                    if (this.paginationOptions.useBootstrap) {\n                        a = document.createElement('a');\n                        a.setAttribute('href', 'javascript:void(0)');\n                        a.setAttribute(\"data-page\", `${pageIndex}`);\n                    }\n                    else {\n                        let newA = document.createElement('a');\n                        newA.setAttribute('href', 'javascript:void(0)');\n                        newA.setAttribute('data-page', `${pageIndex}`);\n                        a = newA;\n                    }\n                    a.className = `${prefix}page-link`;\n                    a.addEventListener(\"click\", buttonClickHandler);\n                }\n                a.innerHTML = content;\n                li.appendChild(a);\n                return li;\n            };\n            if (this.dataTable.elasticChunks) {\n                const pageIndex = this.pagination.page || 1;\n                let ul = document.createElement('ul');\n                ul.className = `${prefix}pagination`;\n                let cell = renderPageCell(pageIndex - 1, '&laquo;', pageIndex == 1, true, false);\n                ul.appendChild(cell);\n                cell = renderPageCell(pageIndex + 1, '&raquo;', this.isLastPage(), true, false);\n                ul.appendChild(cell);\n                paginateDiv.appendChild(ul);\n            }\n            else {\n                if (this.pagination.total > this.pagination.pageSize) {\n                    const pageIndex = this.pagination.page || 1;\n                    const pageCount = Math.ceil(this.pagination.total / this.pagination.pageSize) || 1;\n                    const maxButtonCount = this.paginationOptions.maxButtonCount || 10;\n                    const zeroBasedIndex = pageIndex - 1;\n                    let firstPageIndex = zeroBasedIndex - (zeroBasedIndex % maxButtonCount) + 1;\n                    let lastPageIndex = firstPageIndex + maxButtonCount - 1;\n                    if (lastPageIndex > pageCount) {\n                        lastPageIndex = pageCount;\n                    }\n                    let ul = document.createElement('ul');\n                    ul.className = `${prefix}pagination`;\n                    let cell = renderPageCell(firstPageIndex - 1, '&laquo;', firstPageIndex == 1, true, false);\n                    ul.appendChild(cell);\n                    for (let i = firstPageIndex; i <= lastPageIndex; i++) {\n                        cell = renderPageCell(i, i.toString(), false, false, i == pageIndex);\n                        ul.appendChild(cell);\n                    }\n                    cell = renderPageCell(lastPageIndex + 1, '&raquo;', lastPageIndex == pageCount, true, false);\n                    ul.appendChild(cell);\n                    paginateDiv.appendChild(ul);\n                }\n            }\n            if (this.options.paging.allowPageSizeChange) {\n                const selectChangeHandler = (ev) => {\n                    const newValue = parseInt(ev.target.value);\n                    this.pagination.pageSize = newValue;\n                    this.pagination.page = 1;\n                    this.refresh();\n                };\n                const pageSizes = document.createElement('div');\n                pageSizes.className = `${this.cssPrefix}-page-sizes`;\n                const selectSize = document.createElement('div');\n                selectSize.className = `kfrm-select ${this.cssPrefix}-page-sizes-select`;\n                pageSizes.appendChild(selectSize);\n                const sel = document.createElement('select');\n                const selOptions = this.options.paging.pageSizeItems || [];\n                const selSet = new Set(selOptions);\n                selSet.add(this.options.paging.pageSize || 20);\n                Array.from(selSet).forEach(el => {\n                    const option = document.createElement(\"option\");\n                    option.value = el.toString();\n                    option.text = el.toString();\n                    sel.appendChild(option);\n                });\n                sel.value = (this.pagination.pageSize || 20).toString();\n                selectSize.appendChild(sel);\n                sel.addEventListener('change', selectChangeHandler);\n                const labelDiv = document.createElement('div');\n                labelDiv.className = `${this.cssPrefix}-page-sizes-label`;\n                pageSizes.appendChild(labelDiv);\n                const label = document.createElement('span');\n                label.innerText = i18n.getText('GridItemsPerPage');\n                labelDiv.appendChild(label);\n                paginateDiv.appendChild(pageSizes);\n            }\n        }\n        return paginateDiv;\n    }\n    addEventListener(eventType, handler) {\n        return this.eventEmitter.subscribe(eventType, event => handler(event.data));\n    }\n    removeEventListener(eventType, handlerId) {\n        this.eventEmitter.unsubscribe(eventType, handlerId);\n    }\n    renderHeaderButtons() {\n        if (this.options.showPlusButton) {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-header-btn-plus`)\n                .title(this.options.plusButtonTitle || 'Add')\n                .addChild('a', builder => builder\n                .attr('href', 'javascript:void(0)')\n                .on('click', (e) => {\n                e.preventDefault();\n                this.fireEvent({\n                    type: 'plusButtonClick',\n                    sourceEvent: e\n                });\n            }))\n                .toDOM();\n        }\n        return domel('span')\n            .addText('#')\n            .toDOM();\n    }\n    showLandingSlot(pageX, pageY) {\n        const colElems = this.headerRowDiv.querySelectorAll(`[class*=${this.cssPrefix}-table-col]`);\n        const cols = [];\n        for (let i = 1; i < colElems.length; i++) {\n            const rowElem = colElems[i];\n            if (rowElem.style.display === 'none')\n                continue;\n            cols.push(rowElem);\n        }\n        if (cols.length === 0) {\n            this.landingIndex = 0;\n            this.headerRowDiv.appendChild(this.landingSlot);\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let col of cols) {\n            const colPos = getElementAbsolutePos(col);\n            const width = col.offsetWidth;\n            if (pageX > colPos.x && pageX < colPos.x + width) {\n                // -1 as we don't need to count add button here\n                newLandingIndex = parseInt(col.getAttribute('data-col-idx')) - 1;\n            }\n        }\n        if (newLandingIndex != this.landingIndex) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex < cols.length) {\n                this.headerRowDiv.insertBefore(this.landingSlot, cols[this.landingIndex]);\n            }\n            else {\n                this.headerRowDiv.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        setTimeout(() => {\n            if (this.landingSlot.parentElement) {\n                this.landingSlot.parentElement.removeChild(this.landingSlot);\n            }\n        }, 10);\n    }\n    get activeRowIndex() {\n        return this._activeRowIndex;\n    }\n    set activeRowIndex(value) {\n        if (value !== this._activeRowIndex) {\n            const oldValue = this._activeRowIndex;\n            this._activeRowIndex = value;\n            this.updateActiveRow();\n            this.fireEvent({\n                type: 'activeRowChanged',\n                oldValue,\n                newValue: this.activeRowIndex,\n                rowIndex: this.getGlobalIndexByLocal(this.activeRowIndex)\n            });\n        }\n    }\n    updateActiveRow() {\n        if (this.options.showActiveRow) {\n            const rows = this.bodyCellContainerDiv.querySelectorAll(`[class*=${this.cssPrefix}-row-active]`);\n            rows.forEach(el => { el.classList.remove(`${this.cssPrefix}-row-active`); });\n            const activeRow = this.getActiveRow();\n            if (activeRow) {\n                activeRow.classList.add(`${this.cssPrefix}-row-active`);\n                this.ensureRowVisibility(this.activeRowIndex);\n            }\n        }\n    }\n    getActiveRow() {\n        return this.getDataRow(this.activeRowIndex);\n    }\n    getDataRow(index) {\n        const rows = Array.from(this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row:not(.${this.cssPrefix}-row-totals)`));\n        if (index >= 0 && index < rows.length)\n            return rows[index];\n        return null;\n    }\n    /** Makes the grid focused for keyboard events */\n    focus() {\n        this.bodyViewportDiv.focus();\n    }\n    /** Resizes columns according to the data they represent */\n    resizeColumns() {\n        if (this.options.columnWidths.autoResize === AutoResizeColumns.Never)\n            return;\n        const containerWidth = this.bodyCellContainerDiv.style.width;\n        this.bodyCellContainerDiv.style.visibility = 'hidden';\n        this.bodyCellContainerDiv.style.width = '1px';\n        //this.headerRowDiv.style.visibility = 'hidden';\n        this.headerRowDiv.style.width = '1px';\n        let sumWidth = 0;\n        const columns = this.columns.getItems();\n        const headerCells = this.headerCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-header-cell`);\n        let headerIdx = 0;\n        for (let idx = 0; idx < this.columns.count; idx++) {\n            const column = columns[idx];\n            if (!column.isVisible)\n                continue;\n            const calculatedWidth = this.options.columnWidths.autoResize !== AutoResizeColumns.Always && column.dataColumn\n                ? column.dataColumn.calculatedWidth\n                : 0;\n            const cellValues = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-cell[data-col-idx=\"${idx}\"] > .${this.cssPrefix}-cell-value`);\n            let maxWidth = 0;\n            if (calculatedWidth > 0) {\n                sumWidth += calculatedWidth;\n                column.width = calculatedWidth;\n                cellValues.forEach(value => {\n                    value.parentElement.style.width = `${calculatedWidth}px`;\n                });\n                headerCells[headerIdx].style.width = `${calculatedWidth}px`;\n            }\n            else {\n                if (cellValues.length == 0) {\n                    headerCells[headerIdx].style.width = null;\n                    headerCells[headerIdx].style.whiteSpace = 'nowrap';\n                }\n                maxWidth = headerCells[headerIdx].offsetWidth;\n                if (cellValues.length > 0) {\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = null;\n                        const width = value.parentElement.offsetWidth;\n                        if (width > maxWidth) {\n                            maxWidth = width;\n                        }\n                    });\n                    maxWidth += 3;\n                    const maxOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.max || 500\n                        : this.options.columnWidths[column.dataColumn.type].max || 2000;\n                    const minOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.min || 0\n                        : this.options.columnWidths[column.dataColumn.type].min || 20;\n                    if (maxWidth > maxOption) {\n                        maxWidth = maxOption;\n                    }\n                    if (maxWidth < minOption) {\n                        maxWidth = minOption;\n                    }\n                    if (utils.isNumericType(column.type)) {\n                        //increase the calculated width in 1.3 times for numeric columns\n                        maxWidth = Math.round(maxWidth * 1.3);\n                    }\n                    sumWidth += maxWidth;\n                    column.width = maxWidth;\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = `${maxWidth}px`;\n                    });\n                    headerCells[headerIdx].style.width = `${maxWidth}px`;\n                    if (column.dataColumn) {\n                        column.dataColumn.calculatedWidth = maxWidth;\n                    }\n                }\n                else {\n                    sumWidth += maxWidth;\n                }\n            }\n            headerIdx++;\n        }\n        if (sumWidth > 0) {\n            this.bodyCellContainerDiv.style.width = `${sumWidth}px`;\n            this.headerCellContainerDiv.style.width = `${sumWidth}px`;\n        }\n        else {\n            this.bodyCellContainerDiv.style.width = containerWidth;\n            this.headerCellContainerDiv.style.width = containerWidth;\n        }\n        this.bodyCellContainerDiv.style.visibility = null;\n        this.headerRowDiv.removeAttribute('style');\n    }\n}\n\nclass Calendar {\n    get cssPrefix() {\n        return 'kdtp-cal';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n        if (!this.options.yearRange) {\n            this.options.yearRange = 'c-10:c+10';\n        }\n    }\n    setDate(date) {\n        this.currentDate = new Date(date);\n    }\n    getDate() {\n        return new Date(this.currentDate);\n    }\n    dateChanged(apply) {\n        if (this.options.onDateChanged) {\n            this.options.onDateChanged(this.currentDate, apply);\n        }\n    }\n}\n\nclass DateTimePicker {\n    get cssPrefix() {\n        return 'kdtp';\n    }\n    constructor(options) {\n        this.calendar = null;\n        this.timePicker = null;\n        this.options = options;\n        this.render();\n    }\n    setDateTime(dateTime) {\n        this.currentDateTime = new Date(dateTime);\n        if (this.calendar) {\n            this.calendar.setDate(this.currentDateTime);\n        }\n        if (this.timePicker) {\n            this.timePicker.setTime(this.currentDateTime);\n        }\n    }\n    getDateTime() {\n        return new Date(this.currentDateTime);\n    }\n    render() {\n        if (this.options.showCalendar) {\n            this.calendar = this.createCalendar({\n                yearRange: this.options.yearRange,\n                showDateTimeInput: this.options.showDateTimeInput,\n                timePickerIsUsed: this.options.showTimePicker,\n                oneClickDateSelection: this.options.oneClickDateSelection,\n                onDateChanged: (date, apply) => {\n                    this.currentDateTime = date;\n                    if (this.timePicker) {\n                        this.timePicker.setTime(this.currentDateTime);\n                    }\n                    if (this.options.showTimePicker) {\n                        this.dateTimeChanged();\n                    }\n                    if (apply) {\n                        this.apply(this.currentDateTime);\n                    }\n                }\n            });\n            if (this.calendar)\n                this.calendar.render();\n        }\n        if (this.options.showTimePicker) {\n            this.timePicker = this.createTimePicker({\n                onTimeChanged: (time) => {\n                    this.currentDateTime.setHours(time.getHours());\n                    this.currentDateTime.setMinutes(time.getMinutes());\n                    if (this.calendar) {\n                        this.calendar.setDate(this.currentDateTime);\n                    }\n                    this.dateTimeChanged();\n                }\n            });\n            if (this.timePicker)\n                this.timePicker.render();\n        }\n        this.setDateTime(new Date());\n    }\n    createCalendar(options) {\n        return null;\n    }\n    createTimePicker(options) {\n        return null;\n    }\n    show(anchor) {\n        if (this.options.beforeShow) {\n            this.options.beforeShow();\n        }\n        const pos = getElementAbsolutePos(anchor || document.body);\n        this.slot.style.top = pos.y + anchor.clientHeight + 'px';\n        this.slot.style.left = pos.x + 'px';\n    }\n    apply(date) {\n        if (this.options.onApply) {\n            this.options.onApply(date);\n        }\n        this.destroy();\n    }\n    cancel() {\n        if (this.options.onCancel) {\n            this.options.onCancel();\n        }\n        this.destroy();\n    }\n    destroy() {\n        if (this.slot && this.slot.parentElement) {\n            this.slot.parentElement.removeChild(this.slot);\n        }\n    }\n    dateTimeChanged() {\n        if (this.options.onDateTimeChanged) {\n            this.options.onDateTimeChanged(this.currentDateTime);\n        }\n    }\n}\n\nclass DefaultCalendar extends Calendar {\n    constructor(slot, options) {\n        super(slot, options);\n        this.daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        this.months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        this.calendarBody = null;\n        this.isManualInputChanging = false;\n        for (let i = 0; i < this.daysOfWeek.length; i++) {\n            this.daysOfWeek[i] = i18n.getShortWeekDayName(i + 1);\n        }\n        for (let i = 0; i < this.months.length; i++) {\n            this.months[i] = i18n.getLongMonthName(i + 1);\n        }\n    }\n    setDate(date) {\n        super.setDate(date);\n        this.selectedMonth = this.currentDate.getMonth();\n        this.selectedYear = this.currentDate.getFullYear();\n        this.rerenderMonth();\n    }\n    render() {\n        const header = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-header`);\n        if (this.options.showDateTimeInput) {\n            header\n                .addChildElement(this.renderManualDateInput());\n        }\n        else {\n            header\n                .addChild('span', builder => this.headerTextElem = builder.toDOM());\n        }\n        domel(this.slot)\n            .addChildElement(this.renderCalendarButtons());\n        this.calendarBody = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n    }\n    getInputDateFormat() {\n        const settings = i18n.getLocaleSettings();\n        return (this.options.timePickerIsUsed)\n            ? `${settings.editDateFormat} ${settings.editTimeFormat}`\n            : settings.editDateFormat;\n    }\n    renderManualDateInput() {\n        const format = this.getInputDateFormat();\n        const builder = domel('input')\n            .attr('placeholder', format)\n            .addClass(`${this.cssPrefix}-header-input`);\n        builder\n            .mask(format.replace('yyyy', '9999')\n            .replace('MM', '99')\n            .replace('dd', '99')\n            .replace('HH', '99')\n            .replace('mm', '99')\n            .replace('ss', '99'))\n            .on('input', ev => {\n            builder.removeClass('error');\n            try {\n                this.isManualInputChanging = true;\n                const newDate = utils.strToDateTime(this.manualInputElem.value, format);\n                this.currentDate = newDate;\n                this.jump(this.currentDate.getFullYear(), this.currentDate.getMonth());\n                this.dateChanged(false);\n            }\n            catch (e) {\n                builder.addClass('error');\n            }\n            finally {\n                this.isManualInputChanging = false;\n            }\n        })\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.manualInputElem.className.indexOf('error') < 0\n                    && !this.isManualInputChanging)\n                    this.dateChanged(true);\n            }\n        })\n            .on('focus', () => {\n            setTimeout(() => {\n                this.manualInputElem.selectionStart = 0;\n                this.manualInputElem.selectionEnd = 0;\n            }, 50);\n        });\n        this.manualInputElem = builder.toDOM();\n        return this.manualInputElem;\n    }\n    updateDisplayedDateValue() {\n        if (this.manualInputElem) {\n            if (!this.isManualInputChanging) {\n                const format = this.getInputDateFormat();\n                this.manualInputElem.value = i18n.dateTimeToStr(this.currentDate, format);\n                this.manualInputElem.focus();\n            }\n        }\n        else if (this.headerTextElem) {\n            const locale = i18n.getCurrentLocale();\n            this.headerTextElem.innerText = this.currentDate.toLocaleString(locale == 'en' ? undefined : locale, {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n            });\n        }\n    }\n    renderCalendarButtons() {\n        const builder = domel('nav')\n            .addClass(`${this.cssPrefix}-nav`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-prev`)\n            .on('click', () => {\n            this.prev();\n        })\n            .addChild('span', builder => builder.html('&lsaquo;')))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-selectors`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-month`)\n            .addChild('select', builder => {\n            builder\n                .on('change', () => {\n                this.jump(this.selectedYear, parseInt(this.selectMonthElem.value));\n            });\n            for (let i = 0; i < this.months.length; i++) {\n                builder.addChild('option', builder => builder\n                    .attr('value', i.toString())\n                    .text(this.months[i]));\n            }\n            this.selectMonthElem = builder.toDOM();\n        }))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-year`)\n            .addChild('select', builder => this.selectYearElem = builder\n            .on('change', () => {\n            this.jump(parseInt(this.selectYearElem.value), this.selectedMonth);\n        })\n            .toDOM())))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-next`)\n            .on('click', () => {\n            this.next();\n        })\n            .addChild('span', builder => builder.html('&rsaquo;')));\n        return builder.toDOM();\n    }\n    prev() {\n        this.selectedYear = (this.selectedMonth === 0) ? this.selectedYear - 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth === 0) ? 11 : this.selectedMonth - 1;\n        this.rerenderMonth();\n    }\n    next() {\n        this.selectedYear = (this.selectedMonth === 11) ? this.selectedYear + 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth + 1) % 12;\n        this.rerenderMonth();\n    }\n    rerenderSelectYear() {\n        const match = /c-(\\d*):c\\+(\\d*)/g.exec(this.options.yearRange);\n        let minusYear = 0;\n        let plusYear = 1;\n        if (match !== null) {\n            minusYear = parseInt(match[1]);\n            plusYear = parseInt(match[2]);\n        }\n        this.selectYearElem.innerHTML = '';\n        for (let i = 0; i <= minusYear + plusYear; i++) {\n            let op = document.createElement(\"option\");\n            let year = this.selectedYear - minusYear + i;\n            op.value = year.toString();\n            op.innerText = year.toString();\n            this.selectYearElem.appendChild(op);\n        }\n    }\n    jump(year, month) {\n        this.selectedYear = year;\n        this.selectedMonth = month;\n        this.rerenderMonth();\n    }\n    rerenderMonth() {\n        //header text\n        this.updateDisplayedDateValue();\n        this.rerenderSelectYear();\n        let firstDay = (new Date(this.selectedYear, this.selectedMonth)).getDay();\n        let daysInMonth = new Date(this.selectedYear, this.selectedMonth + 1, 0).getDate();\n        this.calendarBody.innerHTML = \"\";\n        this.selectYearElem.value = this.selectedYear.toString();\n        this.selectMonthElem.value = this.selectedMonth.toString();\n        this.daysOfWeek.forEach((day, idx) => {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-weekday`)\n                .addClass(idx == 0 || idx == 6 ? `${this.cssPrefix}-weekend` : '')\n                .text(day);\n        });\n        // Add empty cells before first day\n        for (let i = 0; i < firstDay; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n        // Add all month days\n        const today = new Date();\n        for (let day = 1; day <= daysInMonth; day++) {\n            const builder = domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day`)\n                .attr('data-date', day.toString())\n                .text(day.toString())\n                .on('click', (e) => {\n                this.currentDate.setFullYear(this.selectedYear);\n                this.currentDate.setMonth(this.selectedMonth);\n                this.currentDate.setDate(parseInt(e.target.getAttribute('data-date')));\n                this.dateChanged(this.options.oneClickDateSelection);\n            });\n            if (day === today.getDate() && this.selectedYear === today.getFullYear() && this.selectedMonth === today.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-current`);\n            }\n            if (day === this.currentDate.getDate() && this.selectedYear === this.currentDate.getFullYear() && this.selectedMonth === this.currentDate.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-selected`);\n            }\n            const dayOfWeek = (firstDay + day - 1) % 7;\n            if (dayOfWeek == 0 || dayOfWeek == 6) {\n                builder.addClass(`${this.cssPrefix}-weekend`);\n            }\n            if (typeof this.options.onDrawDay === \"function\") {\n                this.options.onDrawDay.apply(builder.toDOM(), [\n                    builder.toDOM(),\n                    new Date(this.selectedYear, this.selectedMonth, day)\n                ]);\n            }\n        }\n        // Add empty cells after last day\n        const cellsDrawnInLastRow = (firstDay + daysInMonth) % 7;\n        const cellsToDraw = cellsDrawnInLastRow == 0 ? 0 : 7 - cellsDrawnInLastRow;\n        for (let i = 0; i < cellsToDraw; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n    }\n    dateChanged(apply) {\n        super.dateChanged(apply);\n        this.rerenderMonth();\n    }\n}\n\nclass TimePicker {\n    get cssPrefix() {\n        return 'kdtp-tp';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n    }\n    setTime(time) {\n        this.currentTime = new Date(time);\n    }\n    getTime() {\n        return new Date(this.currentTime);\n    }\n    timeChanged() {\n        if (this.options.onTimeChanged) {\n            this.options.onTimeChanged(this.currentTime);\n        }\n    }\n}\n\nclass DefaultTimePicker extends TimePicker {\n    setTime(time) {\n        super.setTime(time);\n        this.updateDisplayedTime();\n        this.hoursInput.valueAsNumber = time.getHours();\n        this.minutesInput.valueAsNumber = time.getMinutes();\n    }\n    render() {\n        domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-time`)\n            .addChild('span', builder => this.timeText = builder.toDOM())\n            .toDOM();\n        const slidersBuilder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-sliders`);\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Hours')\n            .addChild('input', builder => this.hoursInput = builder\n            .addClass(`${this.cssPrefix}-input-hours`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '23')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setHours(this.hoursInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Minutes')\n            .addChild('input', builder => this.minutesInput = builder\n            .addClass(`${this.cssPrefix}-input-minutes`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '59')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setMinutes(this.minutesInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        return this.slot;\n    }\n    updateDisplayedTime() {\n        const locale = i18n.getCurrentLocale();\n        const timeToDraw = this.currentTime.toLocaleString(locale == 'en' ? undefined : locale, {\n            hour: \"numeric\",\n            minute: \"numeric\"\n        });\n        this.timeText.innerText = timeToDraw;\n    }\n}\n\nclass DefaultDateTimePicker extends DateTimePicker {\n    render() {\n        const sb = domel('div', document.body)\n            .addClass(`${this.cssPrefix}`)\n            .attr('tabIndex', '0')\n            .setStyle('position', 'absolute')\n            .setStyle('top', '-1000px')\n            .setStyle('left', '-1000px')\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 27) { // ESC is pressed\n                this.cancel();\n            }\n            else if (ev.keyCode === 13) { // Enter is pressed\n                this.apply(this.getDateTime());\n            }\n            return false;\n        });\n        if (this.options.zIndex) {\n            sb.setStyle('z-index', `${this.options.zIndex}`);\n        }\n        this.slot = sb.toDOM();\n        super.render();\n        this.renderButtons();\n        this.globalMouseDownHandler = (e) => {\n            let event = window.event || e;\n            event.srcElement || event.target;\n            let isOutside = !this.slot.contains(event.target);\n            if (isOutside) {\n                document.removeEventListener('mousedown', this.globalMouseDownHandler, true);\n                this.cancel();\n            }\n            return true;\n        };\n    }\n    renderButtons() {\n        const builder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-buttons`)\n            .addChild('button', b => this.nowButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-now`)\n            .text(i18n.getText('ButtonNow'))\n            .on('click', () => {\n            this.setDateTime(new Date());\n            this.dateTimeChanged();\n            return false;\n        })\n            .toDOM());\n        if (this.options.showTimePicker || !this.options.oneClickDateSelection) {\n            builder.addChild('button', b => this.submitButton = b\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-apply`)\n                .text(i18n.getText('ButtonApply'))\n                .on('click', () => {\n                this.apply(this.getDateTime());\n                return false;\n            })\n                .toDOM());\n        }\n        builder.addChild('button', b => this.submitButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-cancel`)\n            .text(i18n.getText('ButtonCancel'))\n            .on('click', () => {\n            this.cancel();\n            return false;\n        })\n            .toDOM());\n    }\n    createCalendar(options) {\n        this.calendarSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-cal`)\n                .toDOM();\n        return new DefaultCalendar(this.calendarSlot, options);\n    }\n    createTimePicker(options) {\n        this.timePickerSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-tp`)\n                .toDOM();\n        return new DefaultTimePicker(this.timePickerSlot, options);\n    }\n    show(anchor) {\n        if (this.options.showDateTimeInput) {\n            if (this.options.beforeShow) {\n                this.options.beforeShow();\n            }\n            const anchorPos = getElementAbsolutePos(anchor || document.body);\n            const parentPos = getElementAbsolutePos(anchor ? anchor.parentElement || anchor : document.body);\n            this.slot.style.top = parentPos.y + 'px';\n            this.slot.style.left = anchorPos.x + 'px';\n        }\n        else {\n            super.show(anchor);\n            this.slot.focus();\n        }\n        setTimeout(() => {\n            document.addEventListener('mousedown', this.globalMouseDownHandler, true);\n        }, 1);\n    }\n}\n\nvar DialogFooterAlignment;\n(function (DialogFooterAlignment) {\n    DialogFooterAlignment[DialogFooterAlignment[\"Left\"] = 1] = \"Left\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Center\"] = 2] = \"Center\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Right\"] = 3] = \"Right\";\n})(DialogFooterAlignment || (DialogFooterAlignment = {}));\n\nconst cssPrefix = \"kdlg\";\nclass DefaultDialogService {\n    openConfirm(title, content, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-confirm\">${content}</div>`;\n        const options = {\n            title: title,\n            closable: false,\n            submitable: true,\n            cancelable: true,\n            body: template\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                callback(true);\n            };\n            options.onCancel = () => {\n                callback(false);\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                resolve(true);\n            };\n            options.onCancel = () => {\n                resolve(false);\n            };\n            this.open(options);\n        });\n    }\n    openPrompt(title, content, defVal, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-content\">${content}</label>\r\n                <input type=\"text\" name=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-input\" />\r\n            </div>\r\n        </div>`;\n        const options = {\n            title: title,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            body: template,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n                if (defVal) {\n                    input.value = defVal;\n                }\n                input.focus();\n            }\n        };\n        const processInput = (callback) => {\n            const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n            const result = input.value;\n            if (result && result.replace(/\\s/g, '').length > 0) {\n                callback(result);\n                return true;\n            }\n            input.classList.add('eqjs-invalid');\n            return false;\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                return processInput(callback);\n            };\n            options.onCancel = () => {\n                callback(\"\");\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                return processInput(resolve);\n            };\n            options.onCancel = () => {\n                resolve(\"\");\n            };\n            this.open(options);\n        });\n    }\n    open(options, data) {\n        const dialog = new DefaultDialog(options, data);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    createSet(options) {\n        return new DefaultDialogSet(options, this);\n    }\n    untrack(dlg) {\n        const index = DefaultDialogService.openDialogs.indexOf(dlg);\n        if (index >= 0) {\n            DefaultDialogService.openDialogs.splice(index, 1);\n        }\n    }\n    track(dlg) {\n        DefaultDialogService.openDialogs.push(dlg);\n    }\n    openProgress(options) {\n        const dialog = new DefaultProgressDialog(options);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    getAllDialogs() {\n        return Array.from(DefaultDialogService.openDialogs);\n    }\n    closeAllDialogs() {\n        for (const dialog of Array.from(DefaultDialogService.openDialogs)) {\n            dialog.close();\n        }\n    }\n}\nDefaultDialogService.openDialogs = [];\nclass DefaultDialog {\n    constructor(options, data) {\n        this.options = options;\n        this.submitHandler = (token) => {\n            if (this.options.onSubmit && this.options.onSubmit(this, token) === false) {\n                return false;\n            }\n            this.destroy();\n            return true;\n        };\n        this.cancelHandler = () => {\n            if (this.options.onCancel) {\n                this.options.onCancel(this);\n            }\n            this.destroy();\n        };\n        this.keydownHandler = (ev) => {\n            if (ev.keyCode == 13 && this.isActiveDialog()) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.submitHandler()) {\n                    window.removeEventListener('keydown', this.keydownHandler, false);\n                    return false;\n                }\n            }\n            return true;\n        };\n        this.dialogId = utils.generateId('dlg');\n        this.data = data;\n        this.slot =\n            domel('div', document.body)\n                .attr('tab-index', '-1')\n                .data('dialog-id', this.dialogId)\n                .addClass(`${cssPrefix}-modal`, 'is-active')\n                .focus()\n                .addChild('div', b => b\n                .addClass('kdlg-modal-background'))\n                .addChild('div', b => this.windowElement = b\n                .addClass(`${cssPrefix}-modal-window`)\n                .addChild('header', b => {\n                this.headerElement = b\n                    .addClass(`${cssPrefix}-header`)\n                    .addChild('p', b => b\n                    .addClass(`${cssPrefix}-header-title`)\n                    .addText(options.title))\n                    .toDOM();\n                if (options.closable !== false)\n                    b.addChild('button', b => b\n                        .addClass(`${cssPrefix}-modal-close`)\n                        .on('click', () => {\n                        this.cancelHandler();\n                    })\n                        .focus());\n            })\n                .addChild('div', b => {\n                b.addClass(`${cssPrefix}-alert-container`);\n                this.alertElement = b.toDOM();\n            })\n                .addChild('section', b => {\n                this.bodyElement = b\n                    .addClass(`${cssPrefix}-body`)\n                    .toDOM();\n                if (typeof options.body === 'string') {\n                    const html = liquid.renderLiquidTemplate(options.body, data);\n                    b.addHtml(html);\n                }\n                else {\n                    b.addChildElement(options.body);\n                }\n            })\n                .addChild('footer', b => {\n                let alignClass = null;\n                if (options.footerAlignment && options.footerAlignment == DialogFooterAlignment.Center) {\n                    alignClass = 'align-center';\n                }\n                else {\n                    alignClass = 'align-right';\n                }\n                this.footerElement = b\n                    .addClass(`${cssPrefix}-footer`)\n                    .toDOM();\n                b.addClass(alignClass);\n                if (options.submitable === false)\n                    return;\n                b.addChild('button', bb => {\n                    bb.id(this.dialogId + '-btn-submit')\n                        .addClass('kfrm-button', 'is-info')\n                        .addText(options.submitButtonText || i18n.getText('ButtonOK'));\n                    if (options.recaptchaSiteKey) {\n                        bb.data('sitekey', options.recaptchaSiteKey);\n                        bb.addClass('g-recaptcha');\n                        bb.on('click', (e) => {\n                            if (grecaptcha) {\n                                grecaptcha.ready(() => {\n                                    grecaptcha.execute(options.recaptchaSiteKey, { action: 'submit' })\n                                        .then((token) => {\n                                        this.submitHandler(token);\n                                    });\n                                });\n                            }\n                            else {\n                                this.submitHandler();\n                            }\n                        });\n                    }\n                    else {\n                        bb.on('click', (e) => {\n                            this.submitHandler();\n                        });\n                    }\n                    bb.focus();\n                });\n                if (options.cancelable !== false)\n                    b.addChild('button', bb => bb\n                        .id(this.dialogId + '-btn-cancel')\n                        .addClass('kfrm-button')\n                        .addText(options.cancelButtonText || i18n.getText('ButtonCancel'))\n                        .on('click', (e) => {\n                        this.cancelHandler();\n                    }));\n            })\n                .toDOM())\n                .toDOM();\n    }\n    getData() {\n        return this.data;\n    }\n    getRootElement() {\n        return this.slot;\n    }\n    getSubmitButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-submit');\n    }\n    getCancelButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-cancel');\n    }\n    open() {\n        if (this.options.beforeOpen) {\n            this.options.beforeOpen(this);\n        }\n        domel(this.slot).show();\n        if (this.options.arrangeParents) {\n            this.arrangeParents(true);\n        }\n        const windowDiv = this.slot\n            .querySelector(`.${cssPrefix}-modal-window`);\n        if (this.options.height) {\n            windowDiv.style.height = typeof this.options.height === 'string'\n                ? this.options.height\n                : `${this.options.height}px`;\n        }\n        if (this.options.width) {\n            windowDiv.style.width = typeof this.options.width === 'string'\n                ? this.options.width\n                : `${this.options.width}px`;\n        }\n        if (this.options.submitOnEnter) {\n            window.addEventListener('keydown', this.keydownHandler, false);\n        }\n        //clear alert on change in any input element \n        this.slot.querySelectorAll('input')\n            .forEach(element => element.addEventListener('input', () => {\n            this.clearAlert();\n            if (this.options.onInput) {\n                this.options.onInput(this);\n            }\n        }));\n        if (this.options.onShow) {\n            this.options.onShow(this);\n        }\n    }\n    submit() {\n        this.submitHandler();\n    }\n    cancel() {\n        this.cancelHandler();\n    }\n    close() {\n        this.destroy();\n    }\n    disableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = true);\n    }\n    enableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = false);\n    }\n    showAlert(text, reason, replace) {\n        let alert = domel('div')\n            .addClass(`${cssPrefix}-alert ${reason || ''}`)\n            .addChild('span', b => b\n            .addClass(`${cssPrefix}-alert-closebtn`)\n            .text('×')\n            .on('click', (ev) => {\n            const alert = ev.target.parentElement;\n            alert.parentElement.removeChild(alert);\n        }))\n            .addText(text)\n            .toDOM();\n        if (replace === true) {\n            this.clearAlert();\n        }\n        this.alertElement.appendChild(alert);\n    }\n    clearAlert() {\n        this.alertElement.innerHTML = '';\n    }\n    destroy() {\n        const elem = document.querySelectorAll(`[data-dialog-id=\"${this.dialogId}\"]`);\n        if (elem.length <= 0)\n            return;\n        if (this.options.arrangeParents) {\n            this.arrangeParents(false);\n        }\n        document.body.removeChild(this.slot);\n        if (this.options.submitOnEnter) {\n            window.removeEventListener('keydown', this.keydownHandler, false);\n        }\n        if (this.options.onDestroy) {\n            this.options.onDestroy(this);\n        }\n    }\n    isActiveDialog() {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal');\n        return windowDivs[windowDivs.length - 1] === this.slot;\n    }\n    arrangeParents(turnOn) {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal-window');\n        for (let i = 0; i < windowDivs.length - 1; i++) {\n            if (turnOn) {\n                const offset = i == 0 ? 20 : i * 40 + 20;\n                domel(windowDivs[i])\n                    .setStyle('margin-top', `${offset}px`)\n                    .setStyle('margin-left', `${offset}px`);\n            }\n            else {\n                domel(windowDivs[i])\n                    .removeStyle('margin-top')\n                    .removeStyle('margin-left');\n            }\n        }\n    }\n}\nclass DefaultProgressDialog extends DefaultDialog {\n    constructor(options, data) {\n        let contentElement;\n        let progressElement;\n        const body = domel('div')\n            .addChild('div', b => contentElement = b\n            .text(options.content || '')\n            .toDOM())\n            .addChild('div', b => {\n            b\n                .addClass(`${cssPrefix}-progress-line`)\n                .addChild('div', b => {\n                progressElement = b\n                    .addClass('fill')\n                    .toDOM();\n                if (options.determinated) {\n                    b.setStyle('width', '0%');\n                }\n                else {\n                    b.addClass('indeterminate');\n                }\n            });\n        })\n            .toDOM();\n        super({\n            title: options.title,\n            body: body,\n            beforeOpen: options.beforeOpen,\n            onSubmit: options.onSubmit,\n            width: options.width,\n            height: options.height,\n            submitable: false,\n            cancelable: false,\n            closable: false,\n            onDestroy: options.onDestroy\n        }, data);\n        this.contentElement = contentElement;\n        this.progressElement = progressElement;\n    }\n    updateContent(content) {\n        this.contentElement.innerText = content;\n    }\n    updateProgress(progress) {\n        progress = this.in01(progress);\n        this.progressElement.style.width = `${progress * 100}%`;\n        if (progress === 1) {\n            // postpone for 0.5s for smooth closing\n            setTimeout(() => {\n                this.submit();\n            }, 500);\n        }\n    }\n    in01(num) {\n        if (num > 1)\n            return 1;\n        if (num < 0)\n            return 0;\n        return num;\n    }\n}\nclass DefaultDialogSet {\n    constructor(options, dialogService) {\n        this.options = options;\n        this.dialogService = dialogService;\n        this.currentDialog = null;\n        this.currentIndex = 0;\n        this.options = options;\n        this.dialogService = dialogService;\n    }\n    getCurrent() {\n        return this.currentDialog;\n    }\n    openNext(data) {\n        return this.open(this.currentIndex + 1, data);\n    }\n    openPrev(data) {\n        return this.open(this.currentIndex - 1, data);\n    }\n    open(page, data) {\n        if (page < 0) {\n            this.currentIndex = 0;\n        }\n        else if (page >= this.options.length) {\n            this.currentIndex = this.options.length - 1;\n        }\n        else {\n            this.currentIndex = page;\n        }\n        if (this.currentDialog) {\n            try {\n                this.currentDialog.close();\n            }\n            catch (e) { }\n        }\n        const dlgOptions = this.options[this.currentIndex];\n        this.currentDialog = this.dialogService.open(dlgOptions, data);\n        return this.currentDialog;\n    }\n    close() {\n        if (this.currentDialog) {\n            this.currentDialog.close();\n            this.currentDialog = null;\n        }\n    }\n}\n\nfunction addEasyDataUITexts() {\n    i18n.updateDefaultTexts({\n        GridPageInfo: '{FirstPageRecordNum} - {LastPageRecordNum} of {Total} records',\n        GridItemsPerPage: 'items per page',\n        ButtonOK: \"OK\",\n        ButtonCancel: \"Cancel\",\n        ButtonApply: 'Apply',\n        ButtonNow: 'Now',\n        LblTotal: 'Total'\n    });\n}\naddEasyDataUITexts();\n\nvar PRE_SELECT;\n(function (PRE_SELECT) {\n    PRE_SELECT[PRE_SELECT[\"THIS_WEEK\"] = 0] = \"THIS_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"LAST_WEEK\"] = 1] = \"LAST_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"THIS_MONTH\"] = 2] = \"THIS_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"FIRST_MONTH\"] = 3] = \"FIRST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"LAST_MONTH\"] = 4] = \"LAST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"THIS_YEAR\"] = 5] = \"THIS_YEAR\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_1\"] = 6] = \"QUARTER_1\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_2\"] = 7] = \"QUARTER_2\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_3\"] = 8] = \"QUARTER_3\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_4\"] = 9] = \"QUARTER_4\";\n})(PRE_SELECT || (PRE_SELECT = {}));\nvar JUMP_TO;\n(function (JUMP_TO) {\n    JUMP_TO[\"UNDEF\"] = \"-1\";\n    JUMP_TO[\"TODAY\"] = \"1\";\n    JUMP_TO[\"YESTERDAY\"] = \"2\";\n    JUMP_TO[\"TOMORROW\"] = \"3\";\n    JUMP_TO[\"WEEK_START\"] = \"4\";\n    JUMP_TO[\"WEEK_END\"] = \"5\";\n    JUMP_TO[\"MONTH_START\"] = \"6\";\n    JUMP_TO[\"MONTH_END\"] = \"7\";\n    JUMP_TO[\"YEAR_START\"] = \"8\";\n    JUMP_TO[\"YEAR_END\"] = \"9\";\n})(JUMP_TO || (JUMP_TO = {}));\nconst DEFAULT_WEEK_START = 0;\nclass TimeSpanPicker extends DefaultDialog {\n    constructor(options) {\n        super({\n            title: options.title || `Select a period`,\n            body: \"\",\n            submitButtonText: options.submitButtonText || `OK`,\n            cancelButtonText: options.cancelButtonText || `Cancel`,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            beforeOpen: (dlg) => {\n                this.setupDialog();\n            },\n            onSubmit: (dlg) => {\n                if (typeof options.onSubmit === \"function\") {\n                    options.onSubmit.apply(dlg, [this.result(this.from), this.result(this.to)]);\n                }\n            }\n        });\n        this.yearRange = options.yearRange;\n        this.weekStart = options.weekStart || DEFAULT_WEEK_START;\n        this.bodyElement.append(this.drawDialog());\n        this.calendar1.render();\n        this.calendar2.render();\n        this.from = this.alignDate(options.start ? options.start : new Date());\n        this.to = this.alignDate(options.finish && this.alignDate(options.finish) > this.from ? options.finish : new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 1));\n        this.represent();\n    }\n    alignDate(date) {\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n    }\n    drawDialog() {\n        const body = domel('div')\n            .addClass('tsp__container')\n            .addChild('div', b => {\n            b\n                .addClass('tsp__intervals')\n                .addChild('button', b => b.addClass('tsp__button').addText('This Week').on('click', () => { this.select(PRE_SELECT.THIS_WEEK); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Last Week').on('click', () => { this.select(PRE_SELECT.LAST_WEEK); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('This Month').on('click', () => { this.select(PRE_SELECT.THIS_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('First Month').on('click', () => { this.select(PRE_SELECT.FIRST_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Last Month').on('click', () => { this.select(PRE_SELECT.LAST_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('This Year').on('click', () => { this.select(PRE_SELECT.THIS_YEAR); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 1').on('click', () => { this.select(PRE_SELECT.QUARTER_1); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 2').on('click', () => { this.select(PRE_SELECT.QUARTER_2); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 3').on('click', () => { this.select(PRE_SELECT.QUARTER_3); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 4').on('click', () => { this.select(PRE_SELECT.QUARTER_4); }));\n        })\n            .addChild('div', b => {\n            b\n                .addClass('tsp__form')\n                .addChild('div', b => {\n                b\n                    .addClass('tsp__date')\n                    .addChild('div', b => {\n                    b\n                        .addClass('tsp__label')\n                        .addChild('label', b => {\n                        b.addText('Start');\n                    })\n                        .addChild('select', b => {\n                        b\n                            .addOption({ value: JUMP_TO.UNDEF, title: 'Jump To' })\n                            .addOption({ value: JUMP_TO.TODAY, title: 'Today' })\n                            .addOption({ value: JUMP_TO.YESTERDAY, title: 'Yesterday' })\n                            .addOption({ value: JUMP_TO.TOMORROW, title: 'Tomorrow' })\n                            .addOption({ value: JUMP_TO.WEEK_START, title: 'Week Start' })\n                            .addOption({ value: JUMP_TO.WEEK_END, title: 'Week End' })\n                            .addOption({ value: JUMP_TO.MONTH_START, title: 'Month Start' })\n                            .addOption({ value: JUMP_TO.MONTH_END, title: 'Month End' })\n                            .addOption({ value: JUMP_TO.YEAR_START, title: 'Year Start' })\n                            .addOption({ value: JUMP_TO.YEAR_END, title: 'Year End' });\n                        b.on('change', (event) => {\n                            // @ts-ignore\n                            this.jump(1, event.target.value, event.target);\n                        });\n                    });\n                })\n                    .addChild('div', b => {\n                    b.addClass('tsp__calendar');\n                    this.calendar1 = new DefaultCalendar(b.toDOM(), {\n                        yearRange: this.yearRange,\n                        showDateTimeInput: true,\n                        onDateChanged: (date) => {\n                            this.from = this.alignDate(date);\n                            this.calendar1.setDate(this.from);\n                            if (this.to < this.from) {\n                                this.to = this.from;\n                            }\n                            this.represent();\n                        },\n                        onDrawDay: (cell, date) => {\n                            if (this.alignDate(date) >= this.from && this.alignDate(date) <= this.to) {\n                                cell.classList.add(\"day-in-range\");\n                            }\n                            else {\n                                cell.classList.remove(\"day-in-range\");\n                            }\n                        }\n                    });\n                });\n            })\n                .addChild('div', b => {\n                b\n                    .addClass('tsp__date')\n                    .addChild('div', b => {\n                    b\n                        .addClass('tsp__label')\n                        .addChild('label', b => {\n                        b.addText('Finish');\n                    })\n                        .addChild('select', b => {\n                        b\n                            .addOption({ value: JUMP_TO.UNDEF, title: 'Jump To' })\n                            .addOption({ value: JUMP_TO.TODAY, title: 'Today' })\n                            .addOption({ value: JUMP_TO.YESTERDAY, title: 'Yesterday' })\n                            .addOption({ value: JUMP_TO.TOMORROW, title: 'Tomorrow' })\n                            .addOption({ value: JUMP_TO.WEEK_START, title: 'Week Start' })\n                            .addOption({ value: JUMP_TO.WEEK_END, title: 'Week End' })\n                            .addOption({ value: JUMP_TO.MONTH_START, title: 'Month Start' })\n                            .addOption({ value: JUMP_TO.MONTH_END, title: 'Month End' })\n                            .addOption({ value: JUMP_TO.YEAR_START, title: 'Year Start' })\n                            .addOption({ value: JUMP_TO.YEAR_END, title: 'Year End' });\n                        b.on('change', (event) => {\n                            // @ts-ignore\n                            this.jump(2, event.target.value, event.target);\n                        });\n                    });\n                })\n                    .addChild('div', b => {\n                    b.addClass('tsp__calendar');\n                    this.calendar2 = new DefaultCalendar(b.toDOM(), {\n                        yearRange: this.yearRange,\n                        showDateTimeInput: true,\n                        onDateChanged: (date) => {\n                            if (this.alignDate(date) >= this.from) {\n                                this.to = this.alignDate(date);\n                            }\n                            else {\n                                this.calendar2.setDate(this.to);\n                            }\n                            this.represent();\n                        },\n                        onDrawDay: (cell, date) => {\n                            if (this.alignDate(date) >= this.from && this.alignDate(date) <= this.to) {\n                                cell.classList.add(\"day-in-range\");\n                            }\n                            else {\n                                cell.classList.remove(\"day-in-range\");\n                            }\n                        }\n                    });\n                });\n            });\n        })\n            .toDOM();\n        return body;\n    }\n    setupDialog() {\n    }\n    jump(cal, to, select) {\n        let target = cal === 1 ? 'from' : 'to';\n        let jumpTo;\n        const curr = new Date();\n        switch (to) {\n            case JUMP_TO.TODAY: {\n                jumpTo = curr;\n                break;\n            }\n            case JUMP_TO.YESTERDAY: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - 1);\n                break;\n            }\n            case JUMP_TO.TOMORROW: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 1);\n                break;\n            }\n            case JUMP_TO.WEEK_START: {\n                jumpTo = new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart));\n                break;\n            }\n            case JUMP_TO.WEEK_END: {\n                jumpTo = new Date(curr.setDate(curr.getDate() - curr.getDay() + 6 + this.weekStart));\n                break;\n            }\n            case JUMP_TO.MONTH_START: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), 1);\n                break;\n            }\n            case JUMP_TO.MONTH_END: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\n                break;\n            }\n            case JUMP_TO.YEAR_START: {\n                jumpTo = new Date(curr.getFullYear(), 0, 1);\n                break;\n            }\n            case JUMP_TO.YEAR_END: {\n                jumpTo = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n        }\n        jumpTo = this.alignDate(jumpTo);\n        select.value = JUMP_TO.UNDEF;\n        if (target === \"from\") {\n            this.from = jumpTo;\n            if (this.to < this.from) {\n                this.to = this.from;\n            }\n        }\n        else {\n            if (jumpTo >= this.from) {\n                this[target] = jumpTo;\n            }\n        }\n        this.represent();\n    }\n    represent() {\n        this.calendar1.setDate(this.from);\n        this.calendar2.setDate(this.to);\n    }\n    select(interval) {\n        switch (interval) {\n            case PRE_SELECT.THIS_WEEK: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - curr.getDay());\n                this.to = new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 6);\n                break;\n            }\n            case PRE_SELECT.LAST_WEEK: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - curr.getDay() - 7);\n                this.to = new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 6);\n                break;\n            }\n            case PRE_SELECT.THIS_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), 1);\n                this.to = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\n                break;\n            }\n            case PRE_SELECT.FIRST_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 1, 0);\n                break;\n            }\n            case PRE_SELECT.LAST_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth() - 1, 1);\n                this.to = new Date(curr.getFullYear(), curr.getMonth(), 0);\n                break;\n            }\n            case PRE_SELECT.THIS_YEAR: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_1: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 3, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_2: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 3, 1);\n                this.to = new Date(curr.getFullYear(), 6, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_3: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 6, 1);\n                this.to = new Date(curr.getFullYear(), 9, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_4: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 9, 1);\n                this.to = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n        }\n        this.represent();\n    }\n    result(date) {\n        const curr = this.alignDate(new Date());\n        const constants = {\n            \"Today\": this.alignDate(new Date()),\n            \"Yesterday\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - 1)),\n            \"Tomorrow\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 1)),\n            \"FirstDayOfMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), 1)),\n            \"LastDayOfMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 0)),\n            \"FirstDayOfWeek\": this.alignDate(new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart))),\n            \"FirstDayOfYear\": this.alignDate(new Date(curr.getFullYear(), 0, 1)),\n            \"FirstDayOfNextWeek\": this.alignDate(new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart + 7))),\n            \"FirstDayOfNextMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 1)),\n            \"FirstDayOfNextYear\": this.alignDate(new Date(curr.getFullYear() + 1, 0, 1)),\n        };\n        for (let k in constants) {\n            console.log(constants[k], date);\n            if (constants[k].getTime() === date.getTime()) {\n                return `\\${{${k}}}`;\n            }\n        }\n        return i18n.dateTimeToStr(date, i18n.getLocaleSettings().editDateFormat);\n    }\n}\nconst showTimeSpanPicker = (options) => new TimeSpanPicker(options).open();\n\n// grid\n// export dialogs to use outside of context as global\nconst dialogs = new DefaultDialogService();\n\nexport { AutoResizeColumns, Calendar, CellRendererType, DFMT_REGEX, DateTimePicker, DefaultCalendar, DefaultDateTimePicker, DefaultDialog, DefaultDialogService, DefaultDialogSet, DefaultProgressDialog, DefaultTimePicker, DialogFooterAlignment, DomElementBuilder, DomInputElementBuilder, DomSelectElementBuilder, DomTextAreaElementBuilder, DragManager, DropEffect, EasyGrid, EqDragEvent, GridCellRendererStore, GridColumn, GridColumnAlign, GridColumnList, JUMP_TO, PRE_SELECT, TimePicker, TimeSpanPicker, addCssClass, addElement, browserUtils, createBrowserEvent, dialogs, domel, eqCssMobile, eqCssPrefix, eqDragManager, getDocSize, getElementAbsolutePos, getScrollPos, getViewportSize, getWinSize, hideElement, isVisible, mask, showElement, showTimeSpanPicker, slideDown, slideUp, toggleVisibility, wrapInner };\n//# sourceMappingURL=easydata.ui.es.js.map\n","\n/*!\n * EasyData.JS CRUD v1.4.20\n * Copyright 2023 Korzh.com\n * Licensed under MIT\n */\n\n/*!\n * EasyData.JS Core v1.4.20\n * Copyright 2023 Korzh.com\n * Licensed under MIT\n */\n\n/** Represents the common types of the data. */\nvar DataType$1;\n(function (DataType) {\n    /** Unknown type value*/\n    DataType[DataType[\"Unknown\"] = 0] = \"Unknown\";\n    /** String value*/\n    DataType[DataType[\"String\"] = 1] = \"String\";\n    /** 8-bit integer value */\n    DataType[DataType[\"Byte\"] = 2] = \"Byte\";\n    /** 16-bit integer value */\n    DataType[DataType[\"Word\"] = 3] = \"Word\";\n    /** 32-bit integer value */\n    DataType[DataType[\"Int32\"] = 4] = \"Int32\";\n    /** 64-bit integer value */\n    DataType[DataType[\"Int64\"] = 5] = \"Int64\";\n    /** Boolean value */\n    DataType[DataType[\"Bool\"] = 6] = \"Bool\";\n    /** Floating-point numeric value */\n    DataType[DataType[\"Float\"] = 7] = \"Float\";\n    /** Money value */\n    DataType[DataType[\"Currency\"] = 8] = \"Currency\";\n    /** Binary-coded decimal value */\n    DataType[DataType[\"BCD\"] = 9] = \"BCD\";\n    /** Date value */\n    DataType[DataType[\"Date\"] = 10] = \"Date\";\n    /** Time value */\n    DataType[DataType[\"Time\"] = 11] = \"Time\";\n    /** Date and time value */\n    DataType[DataType[\"DateTime\"] = 12] = \"DateTime\";\n    /** Autoincrement 32-bit integer value */\n    DataType[DataType[\"Autoinc\"] = 13] = \"Autoinc\";\n    /** MEMO value (text with unlimited length) */\n    DataType[DataType[\"Memo\"] = 14] = \"Memo\";\n    /** BLOB value (any data with unlimited length) */\n    DataType[DataType[\"Blob\"] = 15] = \"Blob\";\n    /** Fixed character value */\n    DataType[DataType[\"FixedChar\"] = 16] = \"FixedChar\";\n    /** The unique identifier */\n    DataType[DataType[\"Guid\"] = 17] = \"Guid\";\n    /*-------- Spatial data types ----------*/\n    /** Any geometry data */\n    DataType[DataType[\"Geometry\"] = 18] = \"Geometry\";\n    /** Any data that represents some geography objects</summary> */\n    DataType[DataType[\"Geography\"] = 19] = \"Geography\";\n})(DataType$1 || (DataType$1 = {}));\n\nvar EntityAttrKind$1;\n(function (EntityAttrKind) {\n    EntityAttrKind[EntityAttrKind[\"Data\"] = 0] = \"Data\";\n    EntityAttrKind[EntityAttrKind[\"Virtual\"] = 1] = \"Virtual\";\n    EntityAttrKind[EntityAttrKind[\"Lookup\"] = 2] = \"Lookup\";\n})(EntityAttrKind$1 || (EntityAttrKind$1 = {}));\n\nconst EditorTag = {\n    /** Unknown tag value */\n    Unknown: \"Unknown\",\n    /** Edit tag value */\n    Edit: \"EDIT\",\n    /** DateTime tag value  */\n    DateTime: \"DATETIME\",\n    /** List tag value */\n    List: \"LIST\",\n    /** CustomList tag value */\n    CustomList: \"CUSTOMLIST\",\n    /** File tag value */\n    File: \"FILE\"\n};\n\nvar HttpMethod$1;\n(function (HttpMethod) {\n    HttpMethod[\"Trace\"] = \"TRACE\";\n    HttpMethod[\"Options\"] = \"OPTIONS\";\n    HttpMethod[\"Get\"] = \"GET\";\n    HttpMethod[\"Put\"] = \"PUT\";\n    HttpMethod[\"Post\"] = \"POST\";\n    HttpMethod[\"Delete\"] = \"DELETE\";\n})(HttpMethod$1 || (HttpMethod$1 = {}));\n\nclass HttpRequest {\n    constructor(xhr, descriptor) {\n        this.xhr = xhr;\n        this.method = descriptor.method;\n        this.url = descriptor.url;\n        this.headers = descriptor.headers;\n        this.queryParams = descriptor.queryParams;\n        this.data = descriptor.data;\n    }\n    setHeader(name, value) {\n        this.headers[name] = value;\n    }\n    setQueryParam(name, value) {\n        this.queryParams[name] = value;\n    }\n    getXMLHttpRequest() {\n        return this.xhr;\n    }\n    getResponseHeaders() {\n        if (this.xhr.readyState == this.xhr.HEADERS_RECEIVED) {\n            const headers = this.xhr.getAllResponseHeaders();\n            const arr = headers.trim().split(/[\\r\\n]+/);\n            // Create a map of header names to values\n            const headerMap = {};\n            for (const line of arr) {\n                const parts = line.split(': ');\n                const header = parts.shift();\n                const value = parts.join(': ');\n                headerMap[header] = value;\n            }\n            return headerMap;\n        }\n        return {};\n    }\n    open() {\n        if (this.xhr.readyState !== this.xhr.UNSENT)\n            return;\n        let url = this.url;\n        if (this.queryParams && Object.keys(this.queryParams).length > 0) {\n            url += encodeURI('?' + Object.keys(this.queryParams)\n                .map(param => param + '=' + this.queryParams[param])\n                .join('&'));\n        }\n        this.xhr.open(this.method, url, true);\n        this.xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        for (const header in this.headers) {\n            this.xhr.setRequestHeader(header, this.headers[header]);\n        }\n    }\n    abort() {\n        this.xhr.abort();\n    }\n}\n\nvar utils$1;\n(function (utils) {\n    function getAllDataTypes() {\n        return Object.values(DataType$1).filter(item => typeof item === \"number\");\n    }\n    utils.getAllDataTypes = getAllDataTypes;\n    function getDateDataTypes() {\n        return [DataType$1.Time, DataType$1.Date, DataType$1.DateTime];\n    }\n    utils.getDateDataTypes = getDateDataTypes;\n    function getStringDataTypes() {\n        return [DataType$1.String, DataType$1.Memo, DataType$1.FixedChar];\n    }\n    utils.getStringDataTypes = getStringDataTypes;\n    const _numericTypes = [DataType$1.Byte, DataType$1.Word, DataType$1.Int32,\n        DataType$1.Int64, DataType$1.Float, DataType$1.Currency, DataType$1.Autoinc];\n    function getNumericDataTypes() {\n        return _numericTypes;\n    }\n    utils.getNumericDataTypes = getNumericDataTypes;\n    const _intTypes = [DataType$1.Byte, DataType$1.Word, DataType$1.Int32, DataType$1.Int64, DataType$1.Autoinc];\n    //-------------- object functions -------------------\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function copies only the first level properties.\n     * For a deep copy please use `assignDeep`\n     * @param target - the target object\n     * @param args  - an array of the source objects\n     */\n    function assign(target, ...args) {\n        for (let i = 0; i < args.length; i++) {\n            let source = args[i];\n            if (source) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    utils.assign = assign;\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function make a deep copy -\n     * so `assignDeep` will be called recursively for all object properties\n     * on the first level.\n     * @param target - the target object\n     * @param sources  - an array of the source objects\n     */\n    function assignDeep(target, ...sources) {\n        return assignDeepCore(new WeakMap(), target, sources);\n    }\n    utils.assignDeep = assignDeep;\n    function assignDeepCore(hashSet, target, sources) {\n        if (!target) {\n            target = {};\n        }\n        for (let source of sources) {\n            if (source) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        let sourceVal = source[key];\n                        if (sourceVal !== null && typeof sourceVal === 'object') {\n                            if (hashSet.has(sourceVal)) {\n                                target[key] = hashSet.get(sourceVal);\n                            }\n                            else {\n                                if (Array.isArray(sourceVal)) {\n                                    target[key] = createArrayFrom(sourceVal);\n                                    hashSet.set(sourceVal, target[key]);\n                                }\n                                else {\n                                    if (typeof target[key] == 'undefined' || target[key] == null) {\n                                        target[key] = Object.create(Object.getPrototypeOf(sourceVal));\n                                    }\n                                    hashSet.set(sourceVal, target[key]);\n                                    assignDeepCore(hashSet, target[key], [sourceVal]);\n                                }\n                            }\n                        }\n                        else {\n                            target[key] = sourceVal;\n                        }\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    function getIfDefined(value, defaultValue) {\n        return (typeof value !== 'undefined') ? value : defaultValue;\n    }\n    utils.getIfDefined = getIfDefined;\n    function IsDefinedAndNotNull(value) {\n        return typeof value !== 'undefined' && value !== null;\n    }\n    utils.IsDefinedAndNotNull = IsDefinedAndNotNull;\n    function copyArrayTo(collection1, collection2) {\n        const len1 = collection1.length;\n        const len2 = collection2.length;\n        for (let i = 0; i < len1 && i < len2; i++) {\n            collection2[i] = collection1[i];\n        }\n    }\n    utils.copyArrayTo = copyArrayTo;\n    function createArrayFrom(collection) {\n        let result = [];\n        for (let item of collection) {\n            result.push(item);\n        }\n        return result;\n    }\n    utils.createArrayFrom = createArrayFrom;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the found object or null.\n     * @param array\n     * @param id\n     */\n    function findItemById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return array[idx];\n        }\n        return null;\n    }\n    utils.findItemById = findItemById;\n    function findItemIndexById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return idx;\n        }\n        return -1;\n    }\n    utils.findItemIndexById = findItemIndexById;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the index of the found element, or -1 if nothing was found.\n     * @param array\n     * @param id\n     */\n    function indexOfArrayItem(arr, item) {\n        if (arr.indexOf) {\n            return arr.indexOf(item);\n        }\n        else {\n            let len = arr.length;\n            for (let i = 0; i < len; i++) {\n                if (item == arr[i]) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n    utils.indexOfArrayItem = indexOfArrayItem;\n    /**\n     * Moves an item in some array to a new position\n     * @param array\n     * @param index1\n     * @param index2\n     */\n    function moveArrayItem(array, index1, index2) {\n        if (index1 >= array.length) {\n            throw 'Index out of bounds: ' + index1;\n        }\n        if (index2 >= array.length) {\n            index2 = array.length - 1;\n        }\n        let item = array.splice(index1, 1)[0];\n        array.splice(index2, 0, item);\n    }\n    utils.moveArrayItem = moveArrayItem;\n    /**\n     * Searches for a particular item in the array are removes that item if found.\n     * @param arr\n     * @param value\n     */\n    function removeArrayItem(arr, value) {\n        let index = arr.indexOf(value);\n        if (index != -1) {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    utils.removeArrayItem = removeArrayItem;\n    function insertArrayItem(arr, index, value) {\n        arr.splice(index, 0, value);\n    }\n    utils.insertArrayItem = insertArrayItem;\n    function fillArray(arr, value, start = 0, end) {\n        let len = arr.length >>> 0;\n        var relativeStart = start >> 0;\n        var k = relativeStart < 0 ?\n            Math.max(len + relativeStart, 0) :\n            Math.min(relativeStart, len);\n        var relativeEnd = end === undefined ?\n            len : end >> 0;\n        let final = relativeEnd < 0 ?\n            Math.max(len + relativeEnd, 0) :\n            Math.min(relativeEnd, len);\n        while (k < final) {\n            arr[k] = value;\n            k++;\n        }\n        return arr;\n    }\n    utils.fillArray = fillArray;\n    //------------ DOM utils ------------\n    /**\n     * Calculates the shift on which we need to move our element horizontally\n     * to find current window\n     * @param absLeft\n     * @param width\n     */\n    function shiftToFitWindow(absLeft, width) {\n        let body = document.getElementsByTagName('body')[0];\n        let winWidth = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\n        var absRight = absLeft + width;\n        let shift = 0;\n        if (absRight > winWidth) {\n            shift = winWidth - absRight - 10;\n            if (absLeft + shift < 0) {\n                shift = 10 - absLeft;\n            }\n        }\n        return shift;\n    }\n    utils.shiftToFitWindow = shiftToFitWindow;\n    /**\n     * Returns `true` if the value passed in the parameter is an object\n     * @param val\n     */\n    function isObject(val) {\n        if (val === null) {\n            return false;\n        }\n        return ((typeof val === 'function') || (typeof val === 'object'));\n    }\n    utils.isObject = isObject;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isNumericType(dtype) {\n        const index = _numericTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isNumericType = isNumericType;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isIntType(dtype) {\n        const index = _intTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isIntType = isIntType;\n    /**\n     * Returns `true` if the value passed in the parameter is an a numeric value\n     * @param val\n     */\n    function isNumeric(val) {\n        return !isNaN(parseFloat(val)) && isFinite(val);\n    }\n    utils.isNumeric = isNumeric;\n    /**\n     * Returns `true` if two data types  passed in parameters\n     * are compatible - so it's safe to copy the values between\n     * two expressions with these two types\n     * @param type1\n     * @param type2\n     */\n    function areCompatibleDataTypes(type1, type2) {\n        return typeof type1 == \"undefined\" || typeof type2 == \"undefined\" || type1 == DataType$1.Unknown || type2 == DataType$1.Unknown\n            || (type1 == type2) || (type1 == DataType$1.Date && type2 == DataType$1.DateTime)\n            || (type1 == DataType$1.DateTime && type2 == DataType$1.Date);\n    }\n    utils.areCompatibleDataTypes = areCompatibleDataTypes;\n    /**\n     * Returns `true` if the property with named `propName`\n     * in the object `obj` has some value\n     * @param obj\n     * @param propName\n     */\n    function isPropSet(obj, propName) {\n        return obj[propName] || obj[propName.toLowerCase()] || obj[propName.toUpperCase()];\n    }\n    utils.isPropSet = isPropSet;\n    //-------------- ID generator -----------\n    const prefixIdLen = 4;\n    const symbols = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    const magicTicks = 636712160627685350;\n    /**\n     * Generates an unique ID\n     */\n    function generateId(prefix) {\n        if (!prefix) {\n            prefix = 'easy';\n        }\n        let prfx = (prefix.length > prefixIdLen) ? squeezeMoniker(prefix, prefixIdLen) : prefix;\n        if (prfx && prfx.length > 0) {\n            prfx += \"-\";\n        }\n        //adding 3 random symbols\n        var randCharPart = symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)];\n        var randInt = getRandomInt(0, 10000);\n        //generating main ID part \n        //it's a 36-base representation of some random number based on current value of ticks\n        let ticksNum36 = intToNumBase(getNowTicks() - magicTicks - randInt);\n        return prfx + randCharPart + ticksNum36;\n    }\n    utils.generateId = generateId;\n    function intToNumBase(value, targetBase = 36) {\n        var buffer = '';\n        var rest = value;\n        do {\n            buffer = symbols[rest % targetBase] + buffer;\n            rest = Math.floor(rest /= targetBase);\n        } while (rest > 0);\n        return buffer;\n    }\n    function squeezeMoniker(str, maxlen) {\n        let parts = str.split('-');\n        let pml = 1;\n        let ptt = maxlen;\n        if (parts.length < maxlen) {\n            pml = maxlen / parts.length;\n            ptt = parts.length;\n        }\n        let result = \"\";\n        for (let i = 0; i < ptt; i++) {\n            result += squeeze(parts[i], pml);\n        }\n        return result;\n    }\n    function squeeze(str, maxlen) {\n        const len = str.length;\n        if (len > maxlen) {\n            let step = len / maxlen;\n            let result = \"\";\n            result += str[0];\n            let nextIndex = step;\n            let ch;\n            for (let i = 1; i < len; i++) {\n                ch = str[i];\n                if (i + 1 > nextIndex) {\n                    result += ch;\n                    nextIndex += step;\n                }\n            }\n            return result;\n        }\n        else {\n            return str;\n        }\n    }\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n    function getNowTicks() {\n        return (621355968e9 + (new Date()).getTime() * 1e4);\n    }\n    function safeParseInt(str) {\n        const res = parseInt(str);\n        if (isNaN(res))\n            throw `\"${str}\" is not a valid number`;\n        return res;\n    }\n    function getDaysInMonth(month, year) {\n        return new Date(year, month + 1, 0).getDate();\n    }\n    // ------------- date/time functions -------------------\n    // TO DO: improve to process all datetime cases\n    function strToDateTime(value, format) {\n        if (!value || value.length == 0)\n            return new Date();\n        const normalizedValue = value.replace(/[^a-zA-Z0-9_]/g, '-');\n        const normalizedFormat = format.replace(/[^a-zA-Z0-9_]/g, '-');\n        const formatItems = normalizedFormat.split('-');\n        const dateItems = normalizedValue.split('-');\n        const monthIndex = formatItems.indexOf(\"MM\");\n        const dayIndex = formatItems.indexOf(\"dd\");\n        const yearIndex = formatItems.indexOf(\"yyyy\");\n        const hourIndex = formatItems.indexOf(\"HH\");\n        const minutesIndex = formatItems.indexOf(\"mm\");\n        const secondsIndex = formatItems.indexOf(\"ss\");\n        const today = new Date();\n        try {\n            const year = yearIndex > -1 && yearIndex < dateItems.length\n                ? safeParseInt(dateItems[yearIndex])\n                : today.getFullYear();\n            const month = monthIndex > -1 && monthIndex < dateItems.length\n                ? safeParseInt(dateItems[monthIndex]) - 1\n                : today.getMonth() - 1;\n            if (month > 11)\n                throw '';\n            const day = dayIndex > -1 && dayIndex < dateItems.length\n                ? safeParseInt(dateItems[dayIndex])\n                : today.getDate();\n            if (day > getDaysInMonth(month, year))\n                throw '';\n            const hour = hourIndex > -1 && hourIndex < dateItems.length\n                ? safeParseInt(dateItems[hourIndex])\n                : 0;\n            if (hour > 23)\n                throw '';\n            const minute = minutesIndex > -1 && minutesIndex < dateItems.length\n                ? safeParseInt(dateItems[minutesIndex])\n                : 0;\n            if (minute > 59)\n                throw '';\n            const second = secondsIndex > -1 && secondsIndex < dateItems.length\n                ? safeParseInt(dateItems[secondsIndex])\n                : 0;\n            if (second > 59)\n                throw '';\n            return new Date(year, month, day, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${value} is not a valid date.`;\n        }\n    }\n    utils.strToDateTime = strToDateTime;\n    function strToTime(str) {\n        const timeItems = str.split(':');\n        try {\n            const hour = timeItems.length > 0 ? safeParseInt(timeItems[0]) : 0;\n            if (hour > 23)\n                throw '';\n            const minute = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (minute > 59)\n                throw '';\n            const second = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (second > 59)\n                throw '';\n            return new Date(0, 0, 0, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${str} is not a valid time.`;\n        }\n    }\n    utils.strToTime = strToTime;\n})(utils$1 || (utils$1 = {}));\n\nclass HttpActionResult {\n    constructor(request, promise) {\n        this.request = request;\n        this.promise = promise;\n    }\n    getPromise() {\n        return this.promise;\n    }\n    getRequest() {\n        return this.request;\n    }\n    then(onfulfilled, onrejected) {\n        return this.promise.then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.promise.catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.promise.finally(onfinally);\n    }\n}\n\nclass HttpResponseError extends Error {\n    constructor(status, message) {\n        super(message);\n        this.status = status;\n    }\n}\nclass HttpClient {\n    /** Gets the response body for the latest request  */\n    get responseBody() {\n        return this._responseBody;\n    }\n    constructor() {\n        this.defaultHeaders = {};\n        this.customPayload = undefined;\n    }\n    get(url, options) {\n        return this.send(HttpMethod$1.Get, url, null, options);\n    }\n    post(url, data, options) {\n        return this.send(HttpMethod$1.Post, url, data, options);\n    }\n    put(url, data, options) {\n        return this.send(HttpMethod$1.Put, url, data, options);\n    }\n    delete(url, data, options) {\n        return this.send(HttpMethod$1.Delete, url, data, options);\n    }\n    send(method, url, data, options) {\n        options = options || {};\n        const dataType = options.dataType || 'json';\n        const contentType = options.contentType || (dataType !== 'form-data')\n            ? 'application/json'\n            : null;\n        if (data && dataType != 'form-data' && this.customPayload) {\n            data.data = utils$1.assignDeep(data.data || {}, this.customPayload);\n        }\n        const XHR = ('onload' in new XMLHttpRequest())\n            ? XMLHttpRequest\n            : window[\"XDomainRequest\"]; //IE support\n        const xhr = new XHR();\n        const desc = {\n            method: method,\n            url: url,\n            headers: Object.assign(Object.assign({}, this.defaultHeaders), options.headers || {}),\n            queryParams: options.queryParams || {},\n            data: data\n        };\n        if (contentType)\n            desc.headers['Content-Type'] = contentType;\n        const request = new HttpRequest(xhr, desc);\n        if (this.beforeEachRequest) {\n            console.warn(`HttpClient: 'beforeEachRequest' is deprecated and will be removed in future updates.\r\n            Use 'onRequest' instead`);\n            this.beforeEachRequest(request);\n        }\n        if (this.onRequest) {\n            this.onRequest(request);\n        }\n        const dataToSend = (request.data && typeof request.data !== 'string'\n            && dataType == 'json')\n            ? JSON.stringify(request.data)\n            : request.data;\n        request.open();\n        return new HttpActionResult(request, new Promise((resolve, reject) => {\n            if (options.responseType)\n                xhr.responseType = options.responseType;\n            xhr.onerror = (error) => {\n                reject(new HttpResponseError(xhr.status, xhr.responseText));\n            };\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState != 4)\n                    return; //we process only the state change to DONE(4)\n                const responseContentType = xhr.getResponseHeader('Content-Type') || '';\n                const status = xhr.status;\n                if (status === 0) {\n                    reject(new HttpResponseError(status, \"Network error or the request was aborted\"));\n                }\n                else if (status >= 200 && status < 400) {\n                    //Success\n                    const responseObj = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? xhr.response\n                        : (responseContentType.indexOf('application/json') == 0\n                            ? JSON.parse(xhr.responseText)\n                            : xhr.responseText);\n                    this._responseBody = responseObj;\n                    if (this.onResponse) {\n                        this.onResponse(xhr);\n                    }\n                    resolve(responseObj);\n                }\n                else {\n                    //Error\n                    const rtPromise = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? HttpClient.decodeArrayBuffer(xhr.response)\n                        : Promise.resolve(xhr.responseText);\n                    rtPromise.then(responseText => {\n                        const responseObj = (responseContentType.indexOf('application/json') == 0)\n                            ? JSON.parse(responseText)\n                            : responseText;\n                        this._responseBody = responseObj;\n                        const message = responseObj.message ||\n                            (status == 404\n                                ? `No such endpoint: ${url}`\n                                : responseObj);\n                        reject(new HttpResponseError(status, message));\n                    });\n                }\n            };\n            xhr.send(dataToSend);\n        }));\n    }\n    static decodeArrayBuffer(uintArray) {\n        var reader = new FileReader();\n        return new Promise((resolve) => {\n            reader.onloadend = function () {\n                if (reader.readyState == FileReader.DONE) {\n                    resolve(reader.result);\n                }\n            };\n            reader.readAsText(new Blob([uintArray]));\n        });\n    }\n}\n\n/**\n * Contains internatialization functionality.\n */\nvar i18n$1;\n(function (i18n) {\n    let englishUSLocaleSettings = {\n        shortDateFormat: 'MM/dd/yyyy',\n        longDateFormat: 'dd MMM, yyyy',\n        editDateFormat: 'MM/dd/yyyy',\n        shortTimeFormat: 'HH:mm',\n        editTimeFormat: 'HH:mm',\n        longTimeFormat: 'HH:mm:ss',\n        shortMonthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        longMonthNames: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        shortWeekDayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        longWeekDayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        decimalSeparator: '.',\n        currency: 'USD'\n    };\n    let defaultLocale = {\n        localeId: 'en-US',\n        englishName: 'English',\n        displayName: 'English',\n        texts: {\n            ButtonOK: 'OK',\n            ButtonCancel: 'Cancel',\n            Yes: 'Yes',\n            No: 'No',\n            True: 'True',\n            False: 'False'\n        },\n        settings: englishUSLocaleSettings\n    };\n    let allLocales = {\n        'en-US': defaultLocale\n    };\n    let currentLocale;\n    const mappers = [];\n    function mapInfo(info) {\n        for (const mapper of mappers) {\n            mapper(info);\n        }\n    }\n    function addMapper(mapper) {\n        mappers.push(mapper);\n    }\n    i18n.addMapper = addMapper;\n    /**\n     * Gets added locales with their names.\n     * @returns  The locales.\n     */\n    function getLocales() {\n        let result = [];\n        for (let locale in allLocales) {\n            result.push({\n                locale: locale,\n                englishName: allLocales[locale].englishName,\n                displayName: allLocales[locale].displayName\n            });\n        }\n        return result.sort((a, b) => {\n            if (a.englishName > b.englishName) {\n                return 1;\n            }\n            else if (a.englishName === b.englishName) {\n                return 0;\n            }\n            return -1;\n        });\n    }\n    i18n.getLocales = getLocales;\n    /**\n     * Gets the current locale ID.\n     * @returns The locale.\n     */\n    function getCurrentLocale() {\n        return currentLocale.localeId;\n    }\n    i18n.getCurrentLocale = getCurrentLocale;\n    /**\n    * Sets the curent locale.\n    * @deprecated Use setCurrentLocale instead\n    * @param l The locale.\n    */\n    function setLocale(l) {\n        console.warn('This method is deprecated. Use setCurrentLocale instead');\n        setCurrentLocale(l);\n    }\n    i18n.setLocale = setLocale;\n    /**\n     * Sets the curent locale.\n     * @param localeId The locale.\n     */\n    function setCurrentLocale(localeId) {\n        const newLocale = allLocales[localeId];\n        if (newLocale) {\n            utils$1.assignDeep(currentLocale, newLocale);\n        }\n        else {\n            currentLocale.englishName = localeId;\n            currentLocale.displayName = localeId;\n            currentLocale.texts = utils$1.assignDeep({}, defaultLocale.texts);\n        }\n        currentLocale.localeId = localeId;\n    }\n    i18n.setCurrentLocale = setCurrentLocale;\n    /**\n     * Returns localized text by the key defined in parameter.\n     * Here we get the text of the resource string assigned to CmdClickToAddCondition key:\n     *\n     ```\n       const text = i18n.getText('CmdClickToAddCondition')\n     ```\n     * @param args The keys of the resource string.\n     * @returns Text of the resource defined by key or null if the key is not found\n     *\n     */\n    function getText(...args) {\n        let textsObj = currentLocale.texts;\n        let resText = '';\n        if (args && args.length) {\n            const argLength = args.length;\n            for (let i = 0; i < argLength; i++) {\n                resText = textsObj[args[i]];\n                if (typeof resText === 'object') {\n                    textsObj = resText;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return resText;\n    }\n    i18n.getText = getText;\n    function getLocaleSettings() {\n        return currentLocale.settings;\n    }\n    i18n.getLocaleSettings = getLocaleSettings;\n    function getOneLocaleSetting(key) {\n        return currentLocale.settings[key];\n    }\n    i18n.getOneLocaleSetting = getOneLocaleSetting;\n    function getShortMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.shortMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getShortMonthName = getShortMonthName;\n    function getLongMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.longMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getLongMonthName = getLongMonthName;\n    function getShortWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.shortWeekDayNames.length >= dayNum\n                ? settings.shortWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getShortWeekDayName = getShortWeekDayName;\n    function getLongWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.longWeekDayNames.length >= dayNum\n                ? settings.longWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getLongWeekDayName = getLongWeekDayName;\n    /**\n     * Updates the locale settings (date/time formats, separators, etc) for the specified locale.\n     * @param settingsToUpdate a LocaleSettings object\n     */\n    function updateLocaleSettings(settingsToUpdate) {\n        if (!currentLocale.settings) {\n            currentLocale.settings = utils$1.assignDeep({}, englishUSLocaleSettings);\n        }\n        currentLocale.settings = utils$1.assignDeep(currentLocale.settings, settingsToUpdate);\n    }\n    i18n.updateLocaleSettings = updateLocaleSettings;\n    /**\n     * Updates the texts for the current locale\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateLocaleTexts(texts) {\n        if (typeof texts !== 'object') {\n            console.error('Wrong parameter type in updateLocaleTexts function call.' +\n                'The first parameter (localeId) is not necessary. Use updateLocaleTexts(texts) instead');\n            return;\n        }\n        mapInfo({ localeId: currentLocale.localeId, texts: texts });\n        utils$1.assignDeep(currentLocale.texts, texts);\n    }\n    i18n.updateLocaleTexts = updateLocaleTexts;\n    function updateDefaultTexts(texts) {\n        for (let localeId in allLocales) {\n            let locale = allLocales[localeId];\n            locale.texts = utils$1.assignDeep({}, texts, locale.texts);\n        }\n        currentLocale.texts = utils$1.assignDeep({}, texts, currentLocale.texts);\n    }\n    i18n.updateDefaultTexts = updateDefaultTexts;\n    /**\n     * Updates the information for the specified locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be added\n     * @param localeInfo  a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function updateLocaleInfo(localeId, localeData) {\n        mapInfo(localeData);\n        let localeInfoToUpdate = currentLocale;\n        if (localeId) {\n            if (!localeData.localeId) {\n                localeData.localeId = localeId;\n            }\n            localeInfoToUpdate = allLocales[localeId];\n            if (!localeInfoToUpdate) {\n                localeInfoToUpdate = utils$1.assignDeep({}, defaultLocale);\n                allLocales[localeId] = localeInfoToUpdate;\n            }\n        }\n        utils$1.assignDeep(localeInfoToUpdate, localeData);\n    }\n    i18n.updateLocaleInfo = updateLocaleInfo;\n    /**\n     * Adds the locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be created\n     * @param localeInfo - a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function addLocale(localeId, localeInfo) {\n        updateLocaleInfo(localeId, localeInfo);\n    }\n    i18n.addLocale = addLocale;\n    /**\n     * Overwrites some locale settings (date/time formats) with the formats used in browser's current language\n     */\n    function determineSettingsByLocale(localeId) {\n        const now = new Date(2020, 5, 7, 19, 34, 56, 88);\n        const dateOptions = { year: 'numeric', month: 'numeric', day: 'numeric' };\n        const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n        const dateStr = now.toLocaleDateString(localeId, dateOptions);\n        const timeStr = now.toLocaleTimeString(localeId, timeOptions);\n        let dateFormat = dateStr\n            .replace('07', 'dd')\n            .replace('7', 'd')\n            .replace('06', 'MM')\n            .replace('6', 'M')\n            .replace('2020', 'yyyy')\n            .replace('20', 'yy');\n        let timeFormat = timeStr\n            .replace('19', 'HH')\n            .replace('07', 'hh')\n            .replace('7', 'h')\n            .replace('34', 'mm')\n            .replace('56', 'ss')\n            .replace('PM', 'tt');\n        if (!currentLocale.settings) {\n            currentLocale.settings = {};\n        }\n        const localeSettings = {\n            shortDateFormat: dateFormat,\n            shortTimeFormat: timeFormat\n        };\n        updateLocaleSettings(localeSettings);\n    }\n    function loadBrowserLocaleSettings() {\n        const lang = typeof navigator === 'object' ? navigator.language : undefined;\n        determineSettingsByLocale(lang);\n    }\n    function resetLocales() {\n        if (!currentLocale) {\n            currentLocale = utils$1.assignDeep({}, defaultLocale);\n            loadBrowserLocaleSettings();\n        }\n    }\n    i18n.resetLocales = resetLocales;\n    const DT_FORMAT_RGEX = /\\[([^\\]]+)]|y{2,4}|M{1,4}|d{1,2}|H{1,2}|h{1,2}|m{2}|s{2}|t{2}/g;\n    /**\n     * Returns string representation of the date/time value according to the custom format (second parameter)\n     * The format is compatible with the one used in .NET: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\n     * @param date\n     * @param format\n     */\n    function dateTimeToStr(date, format) {\n        const year = date.getFullYear();\n        const yearStr = year.toString();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const minute = date.getMinutes();\n        const second = date.getSeconds();\n        const hour12 = hour % 12 || 12; //the remainder of the division by 12. Or 12 if it's 0\n        const isPm = hour > 11;\n        const matches = {\n            yyyy: yearStr,\n            yy: yearStr.substring(yearStr.length - 2),\n            MMMM: i18n.getLongMonthName(month),\n            MMM: i18n.getShortMonthName(month),\n            MM: (month < 10) ? '0' + month : month.toString(),\n            M: month.toString(),\n            dd: (day < 10) ? '0' + day : day.toString(),\n            d: day.toString(),\n            HH: (hour < 10) ? '0' + hour : hour.toString(),\n            H: hour.toString(),\n            hh: (hour12 < 10) ? '0' + hour12 : hour12.toString(),\n            h: hour12.toString(),\n            tt: isPm ? 'PM' : 'AM',\n            mm: (minute < 10) ? '0' + minute : minute.toString(),\n            ss: (second < 10) ? '0' + second : second.toString()\n        };\n        return format.replace(DT_FORMAT_RGEX, (match, $1) => {\n            return $1 || matches[match];\n        });\n    }\n    i18n.dateTimeToStr = dateTimeToStr;\n    function dateTimeToStrEx(dateTime, dataType, format) {\n        if (format) {\n            if (format == 'd') {\n                format = buildShortDateTimeFormat(DataType$1.Date);\n            }\n            else if (format == 'D') {\n                format = buildLongDateTimeFormat(DataType$1.Date);\n            }\n            else if (format == 'f') {\n                format = buildShortDateTimeFormat(DataType$1.DateTime);\n            }\n            else if (format == 'F') {\n                format = buildLongDateTimeFormat(DataType$1.DateTime);\n            }\n        }\n        else {\n            format = buildShortDateTimeFormat(dataType);\n        }\n        return dateTimeToStr(dateTime, format);\n    }\n    i18n.dateTimeToStrEx = dateTimeToStrEx;\n    function buildShortDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType$1.Date:\n                format = localeSettings.shortDateFormat;\n                break;\n            case DataType$1.Time:\n                format = localeSettings.shortTimeFormat;\n                break;\n            default:\n                format = localeSettings.shortDateFormat + ' ' + localeSettings.shortTimeFormat;\n                break;\n        }\n        return format;\n    }\n    function buildLongDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType$1.Date:\n                format = localeSettings.longDateFormat;\n                break;\n            case DataType$1.Time:\n                format = localeSettings.longTimeFormat;\n                break;\n            default:\n                format = localeSettings.longDateFormat + ' ' + localeSettings.longTimeFormat;\n                break;\n        }\n        return format;\n    }\n    /**\n    * Converts a numeric value to the string taking into the account the decimal separator\n    * @param value - the number to convert\n    * @param format - the format of the number representation (D - decimal, F - float, C - currency)\n    * @param decimalSeparator - the symbol that represents decimal separator. If not specified the function gets the one from the current locale settings.\n    */\n    function numberToStr(number, format, decimalSeparator) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                return formatWithSequence(number, format.slice(1));\n            }\n            else if (['D', 'F', 'C'].indexOf(type) >= 0) {\n                const locale = getCurrentLocale();\n                return number.toLocaleString(locale, getNumberFormatOptions(format));\n            }\n            else {\n                return convertWithMask(Math.trunc(number), format);\n            }\n        }\n        const localeSettings = getLocaleSettings();\n        decimalSeparator = decimalSeparator || localeSettings.decimalSeparator;\n        return number.toString().replace('.', decimalSeparator);\n    }\n    i18n.numberToStr = numberToStr;\n    function booleanToStr(bool, format) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                const values = format.slice(1).split('|');\n                if (values.length > 1) {\n                    const value = values[(bool) ? 1 : 0];\n                    return i18n.getText(value) || value;\n                }\n            }\n        }\n        return `${bool}`;\n    }\n    i18n.booleanToStr = booleanToStr;\n    const cachedSequenceFormats = {};\n    function formatWithSequence(number, format) {\n        if (!cachedSequenceFormats[format]) {\n            // parse and save in cache format values \n            const values = format.split('|')\n                .filter(v => v.length > 0)\n                .map(v => v.split('='));\n            cachedSequenceFormats[format] = {};\n            if (values.length > 0) {\n                if (values[0].length > 1) {\n                    for (const value of values) {\n                        cachedSequenceFormats[format][Number.parseInt(value[1])] = value[0];\n                    }\n                }\n                else {\n                    values.forEach((value, index) => {\n                        cachedSequenceFormats[format][index] = value[0];\n                    });\n                }\n            }\n        }\n        const values = cachedSequenceFormats[format];\n        if (values[number] !== undefined) {\n            const value = values[number];\n            return i18n.getText(value) || value;\n        }\n        return number.toString();\n    }\n    function convertWithMask(number, mask) {\n        let value = number.toString();\n        let result = '';\n        let index = value.length - 1;\n        for (let i = mask.length - 1; i >= 0; i--) {\n            const ch = mask.charAt(i);\n            if (ch === '#' || ch === '0') {\n                if (index >= 0) {\n                    result += value.charAt(index);\n                    index--;\n                }\n                else {\n                    if (ch === '0') {\n                        result += 0;\n                    }\n                }\n            }\n            else {\n                result += ch;\n            }\n        }\n        return result.split('').reverse().join('');\n    }\n    function getNumberFormatOptions(format) {\n        const localeSettings = getLocaleSettings();\n        const type = format[0].toUpperCase();\n        const digits = (format.length > 1)\n            ? Number.parseInt(format.slice(1))\n            : type == 'D' ? 1 : 2;\n        switch (type) {\n            case 'D':\n                return {\n                    style: 'decimal',\n                    useGrouping: false,\n                    minimumIntegerDigits: digits\n                };\n            case 'C':\n                return {\n                    style: 'currency',\n                    currency: localeSettings.currency,\n                    minimumFractionDigits: digits\n                };\n            default:\n                return {\n                    style: 'decimal',\n                    minimumFractionDigits: digits,\n                    maximumFractionDigits: digits\n                };\n        }\n    }\n})(i18n$1 || (i18n$1 = {}));\n\n/**\n * Represents one entity.\n */\nclass MetaEntity {\n    /** The default constructor. */\n    constructor(parent) {\n        /** Returns false if this entity is read-only */\n        this.isEditable = true;\n        this.name = \"\";\n        this.caption = \"\";\n        this.description = \"\";\n        this.parent = parent;\n        this.attributes = new Array();\n        this.subEntities = new Array();\n    }\n    /**\n    * Loads entity from its JSON representation object.\n    * @param model The Data Model.\n    * @param dto The JSON representation object.\n    */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.name = dto.name;\n            this.captionPlural = dto.namePlur;\n            this.caption = dto.name;\n            this.description = dto.desc;\n            if (typeof (dto.ied) !== 'undefined')\n                this.isEditable = dto.ied;\n            this.subEntities = new Array();\n            if (dto.ents) {\n                for (let i = 0; i < dto.ents.length; i++) {\n                    let newEntity = model.createEntity(this);\n                    newEntity.loadFromData(model, dto.ents[i]);\n                    this.subEntities.push(newEntity);\n                }\n            }\n            this.attributes = new Array();\n            if (dto.attrs) {\n                for (let i = 0; i < dto.attrs.length; i++) {\n                    let newAttr = model.createEntityAttr(this);\n                    newAttr.loadFromData(model, dto.attrs[i]);\n                    this.attributes.push(newAttr);\n                }\n            }\n        }\n    }\n    scan(processAttribute, processEntity) {\n        let opts = { stop: false };\n        let internalProcessEntity = (entity) => {\n            if (processEntity)\n                processEntity(entity, opts);\n            if (entity.attributes) {\n                let attrCount = entity.attributes.length;\n                for (let i = 0; (i < attrCount) && !opts.stop; i++) {\n                    let attr = entity.attributes[i];\n                    if (processAttribute) {\n                        processAttribute(attr, opts);\n                    }\n                    if (opts.stop)\n                        return;\n                }\n            }\n            if (entity.subEntities) {\n                let subEntityCount = entity.subEntities.length;\n                for (let i = 0; (i < subEntityCount) && !opts.stop; i++) {\n                    internalProcessEntity(entity.subEntities[i]);\n                }\n            }\n        };\n        internalProcessEntity(this);\n    }\n    getFirstPrimaryAttr() {\n        return this.getPrimaryAttrs()[0];\n    }\n    getPrimaryAttrs() {\n        return this.attributes.filter(attr => attr.isPrimaryKey);\n    }\n}\nclass MetaEntityAttr {\n    /** The default constructor. */\n    constructor(entity) {\n        this.id = \"\";\n        this.caption = \"{Unrecognized attribute}\";\n        this.dataType = DataType$1.String;\n        this.size = 0;\n        this.isPrimaryKey = false;\n        this.isForeignKey = false;\n        this.isNullable = true;\n        this.showOnView = true;\n        this.isEditable = true;\n        this.showOnCreate = true;\n        this.showOnEdit = true;\n        this.showInLookup = false;\n        this.lookupAttr = \"\";\n        this.expr = \"\";\n        this.entity = entity;\n        this.kind = EntityAttrKind$1.Data;\n    }\n    /**\n     * Loads entity attribute from JSON representation object.\n     * @param model The Data Model.\n     * @param dto The JSON representation object.\n     */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.description = dto.desc;\n            this.caption = dto.cptn;\n            this.dataType = dto.dtype;\n            this.isPrimaryKey = dto.ipk;\n            this.isForeignKey = dto.ifk;\n            this.size = dto.size;\n            this.lookupAttr = dto.lattr;\n            this.lookupEntity = dto.lent;\n            this.dataAttr = dto.dattr;\n            this.lookupDataAttr = dto.ldattr;\n            const isDataType = utils$1.getDateDataTypes().indexOf(this.dataType);\n            this.defaultValue = dto.defVal && isDataType ? new Date(dto.defVal) : dto.defVal;\n            this.isNullable = utils$1.getIfDefined(dto.nul, this.isNullable);\n            this.isEditable = utils$1.getIfDefined(dto.ied, this.isEditable);\n            this.showOnView = utils$1.getIfDefined(dto.ivis || dto.sov, this.showOnView);\n            this.showOnCreate = utils$1.getIfDefined(dto.soc, this.showOnCreate);\n            this.showOnEdit = utils$1.getIfDefined(dto.soe, this.showOnEdit);\n            this.showInLookup = utils$1.getIfDefined(dto.sil, this.showInLookup);\n            this.kind = dto.kind;\n            this.displayFormat = dto.dfmt;\n            if (dto.udata)\n                this.userData = dto.udata;\n            if (dto.edtr) {\n                this.defaultEditor = model.getEditorById(dto.edtr) || model.createValueEditor();\n            }\n        }\n    }\n}\n\n/**\n * Represents a value editor.\n */\nclass ValueEditor {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.tag = EditorTag.Unknown;\n        this.resType = DataType$1.Unknown;\n        this.defValue = \"\";\n    }\n    /**\n     * Loads value editor from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        if (data) {\n            this.id = data.id;\n            this.tag = data.tag;\n            this.defValue = data.defval;\n            this.resType = data.rtype;\n            this.accept = data.accept;\n            this.multiline = data.multiline;\n            if (data.subType) {\n                this.resType = data.subType;\n            }\n            if (data.name) {\n                this.name = data.name;\n            }\n            if (data.values) {\n                this.values = data.values;\n            }\n        }\n    }\n    getValueText(value) {\n        let result = \"\";\n        if (!this.values)\n            return result;\n        if (Array.isArray(value)) {\n            for (let item of this.values) {\n                if (value.indexOf(item.id) >= 0) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        else {\n            for (let item of this.values) {\n                if (item.id === value) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        if (result) {\n            result = result.substring(0, result.length - 1);\n        }\n        return result;\n    }\n}\n\n/**\n * Represents a data model\n */\nclass MetaData {\n    /** The default constructor. */\n    constructor() {\n        this.mainEntity = null;\n        this.id = '__none';\n        this.name = 'Empty model';\n        this.rootEntity = this.createEntity();\n        this.displayFormats = new Map();\n    }\n    /**\n     * Gets the main entity of model\n     * @return The main entity.\n     */\n    getMainEntity() {\n        return this.mainEntity;\n    }\n    createEntity(parent) {\n        return new MetaEntity(parent);\n    }\n    createEntityAttr(parent) {\n        return new MetaEntityAttr(parent);\n    }\n    createValueEditor() {\n        return new ValueEditor();\n    }\n    /**\n     * Loads data model from JSON.\n     * @param stringJson The JSON string.\n     */\n    loadFromJSON(stringJson) {\n        let model = JSON.parse(stringJson);\n        this.loadFromData(model);\n    }\n    /**\n     * Loads data model from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        this.id = data.id;\n        this.name = data.name;\n        this.version = data.vers;\n        //Editors\n        this.editors = new Array();\n        if (data.editors) {\n            for (let i = 0; i < data.editors.length; i++) {\n                let newEditor = this.createValueEditor();\n                newEditor.loadFromData(data.editors[i]);\n                this.editors.push(newEditor);\n            }\n        }\n        //rootEntity\n        this.rootEntity.loadFromData(this, data.entroot);\n        //DataFormats\n        this.displayFormats = new Map();\n        if (data.displayFormats) {\n            for (const dtypeStr in data.displayFormats) {\n                const dtype = DataType$1[dtypeStr];\n                const formats = data.displayFormats[dtypeStr] || new Array();\n                this.displayFormats.set(dtype, formats);\n            }\n        }\n    }\n    /**\n     * Gets the display formats.\n     * @returns The display formats.\n     */\n    getDisplayFormats() {\n        return this.displayFormats;\n    }\n    /**\n     * Gets the display formats for type\n     * @param type The type\n     * @returns An array of display formats\n     */\n    getDisplayFormatsForType(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type);\n        }\n        return [];\n    }\n    /**\n     * Gets the default display format for the provided type\n     * @param type The type\n     * @returns The default type format or null\n     */\n    getDefaultFormat(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type).filter(f => f.isdef)[0];\n        }\n        return null;\n    }\n    /**\n     * Sets data to data model.\n     * @param model Its JSON representation object or JSON string.\n     */\n    setData(model) {\n        if (typeof model === 'string') {\n            this.loadFromJSON(model);\n        }\n        else {\n            this.loadFromData(model);\n        }\n    }\n    /**\n     * Checks wether the data model is empty.\n     * @returns `true` if the data model is empty, otherwise `false`.\n     */\n    isEmpty() {\n        return this.rootEntity.subEntities.length === 0 && this.rootEntity.attributes.length === 0;\n    }\n    /**\n     * Gets ID of the data model.\n     * @returns The ID.\n     */\n    getId() {\n        return this.id;\n    }\n    /**\n     * Gets name of the data model.\n     * @returns The name.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Gets root entity of the data model.\n     * @returns The root entity.\n     */\n    getRootEntity() {\n        return this.rootEntity;\n    }\n    /**\n     * Finds editor by its ID.\n     * @param editorId The editor ID.\n     * @returns The value editor or `null`.\n     */\n    getEditorById(editorId) {\n        for (let editor of this.editors) {\n            if (editor.id === editorId) {\n                return editor;\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n     * @param attrId The attribute ID.\n     * @returns The attribute or `null`.\n     */\n    getAttributeById(attrId) {\n        let attr = this.getEntityAttrById(this.getRootEntity(), attrId);\n        if (!attr) {\n            return null;\n        }\n        return attr;\n    }\n    /**\n     * Checks wether attribute contains such property.\n     * @param attrId The attribute ID.\n     * @param propName The property name.\n     * @returns `true` if the attribute contains the property, otherwise `false`.\n     */\n    checkAttrProperty(attrId, propName) {\n        let attribute = this.getAttributeById(attrId);\n        if (attribute) {\n            if (typeof attribute[propName] === 'undefined') {\n                throw 'No such property: ' + propName;\n            }\n            if (attribute[propName]) {\n                return true;\n            }\n            else if (attribute.lookupAttr) {\n                attrId = attribute.lookupAttr;\n                attribute = this.getAttributeById(attrId);\n                return attribute && attribute[propName];\n            }\n            else {\n                return false;\n            }\n        }\n        else\n            return false;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified entity and all its sub-entities.\n     * @param entity\n     * @param attrId\n     * @returns The attribute or `null`.\n     */\n    getEntityAttrById(entity, attrId) {\n        let idx;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (idx = 0; idx < attrCount; idx++) {\n                if (entity.attributes[idx].id == attrId) {\n                    return entity.attributes[idx];\n                }\n            }\n        }\n        let res;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (idx = 0; idx < subEntityCount; idx++) {\n                res = this.getEntityAttrById(entity.subEntities[idx], attrId);\n                if (res)\n                    return res;\n            }\n        }\n        return null;\n    }\n    listByEntityWithFilter(entity, filterFunc) {\n        let result = new Array();\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n$1.getText('Entities', ent.name);\n                    if (!caption) {\n                        caption = ent.caption;\n                    }\n                    let newEnt = utils$1.assign(this.createEntity(), { id: ent.name, text: caption, items: [], isEntity: true });\n                    newEnt.items = this.listByEntityWithFilter(ent, filterFunc);\n                    if (newEnt.items.length > 0)\n                        result.push(newEnt);\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n$1.getText('Attributes', attr.id);\n                    if (!caption)\n                        caption = attr.caption;\n                    let newEnt = utils$1.assign(this.createEntity(), { id: attr.id, text: caption, dataType: attr.dataType });\n                    result.push(newEnt);\n                }\n            }\n        }\n        return result;\n    }\n    listByEntity(entity, opts, filterFunc) {\n        opts = opts || {};\n        let resultEntities = [];\n        let resultAttributes = [];\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n$1.getText('Entities', ent.name) || ent.caption;\n                    let newEnt = utils$1.assign(this.createEntity(), {\n                        id: ent.name,\n                        text: caption,\n                        items: [],\n                        isEntity: true,\n                        description: ent.description\n                    });\n                    let newOpts = utils$1.assign({}, opts);\n                    newOpts.includeRootData = false;\n                    newEnt.items = this.listByEntity(ent, newOpts, filterFunc);\n                    if (newEnt.items.length > 0) {\n                        resultEntities.push(newEnt);\n                    }\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n$1.getText('Attributes', attr.id) || attr.caption;\n                    resultAttributes.push(utils$1.assign(this.createEntityAttr(entity), {\n                        id: attr.id, text: caption,\n                        dataType: attr.dataType, lookupAttr: attr.lookupAttr,\n                        description: attr.description\n                    }));\n                }\n            }\n        }\n        let sortCheck = (a, b) => {\n            if (a.text.toLowerCase() == b.text.toLowerCase()) {\n                return 0;\n            }\n            if (a.text.toLowerCase() > b.text.toLowerCase()) {\n                return 1;\n            }\n            return -1;\n        };\n        if (opts.sortEntities) {\n            resultEntities.sort(sortCheck);\n            resultAttributes.sort(sortCheck);\n        }\n        let result;\n        if (!opts.attrPlacement || opts.attrPlacement == 0) {\n            result = resultEntities.concat(resultAttributes);\n        }\n        else {\n            result = resultAttributes.concat(resultEntities);\n        }\n        if (opts.attrPlacement == 2) {\n            result.sort(sortCheck);\n        }\n        if (opts.includeRootData) {\n            caption = i18n$1.getText('Entities', entity.name);\n            if (!caption)\n                caption = entity.caption;\n            return { id: entity.name, text: caption, items: result };\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * Clears data model.\n     */\n    clear() {\n        this.rootEntity = this.createEntity();\n        this.editors = [];\n        this.version = '';\n    }\n    /**\n     * Add default value editors.\n     */\n    addDefaultValueEditors() {\n        let ve;\n        ve = this.addOrUpdateValueEditor('_DTE', EditorTag.Edit, DataType$1.String);\n        ve.defValue = '';\n        this.addOrUpdateValueEditor('_DPDE', EditorTag.DateTime, DataType$1.DateTime);\n        this.addOrUpdateValueEditor('_DPTE', EditorTag.DateTime, DataType$1.DateTime);\n    }\n    /**\n    * Add or update a value editor.\n    * @param id The id.\n    * @param tag The tag.\n    * @param resType The result type.\n    * @returns The value editor.\n    */\n    addOrUpdateValueEditor(id, tag, resType) {\n        let ve = utils$1.findItemById(this.editors, id);\n        if (!ve) {\n            ve = this.createValueEditor();\n            ve.id = id;\n            this.editors.push(ve);\n        }\n        ve.tag = tag;\n        ve.resType = resType;\n        return ve;\n    }\n    /**\n     * Gets entities tree.\n     * @param opts The options.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to options and the filter function\n     */\n    getEntitiesTree(opts, filterFunc) {\n        return this.listByEntity(this.getRootEntity(), opts, filterFunc);\n    }\n    /**\n     * Gets entities tree due to filter.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to the filter function\n     */\n    getEntitiesTreeWithFilter(filterFunc) {\n        return this.listByEntityWithFilter(this.getRootEntity(), filterFunc);\n    }\n    /**\n     * Finds full entity path by attribute\n     * @param attrId The attribute id.\n     * @param sep The separator.\n     * @returns The path.\n     */\n    getFullEntityPathByAttr(attrId, sep) {\n        sep = sep || ' ';\n        return this.getEntityPathByAttr(this.getRootEntity(), attrId, sep, true);\n    }\n    /**\n    * Finds entity path by attribute\n    * @param entity The entity.\n    * @param attrId The attribute id.\n    * @param sep The separator.\n    * @param root The root option.\n    * @returns The path.\n    */\n    getEntityPathByAttr(entity, attrId, sep, root) {\n        if (!entity)\n            return '';\n        sep = sep || ' ';\n        let entityCaption = '';\n        if (entity.caption && !root) {\n            let entityText = i18n$1.getText('Entities', entity.caption);\n            entityCaption = entityText ? entityText : entity.caption;\n        }\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let i = 0; i < attrCount; i++) {\n                if (entity.attributes[i].id == attrId) {\n                    return entityCaption;\n                }\n            }\n        }\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let i = 0; i < subEntityCount; i++) {\n                let ent = entity.subEntities[i];\n                let res = this.getEntityPathByAttr(ent, attrId, sep, false);\n                if (res !== '') {\n                    if (entityCaption !== '')\n                        res = entityCaption + sep + res;\n                    return res;\n                }\n            }\n        }\n        return '';\n    }\n    /**\n     * Gets the attribute text.\n     * @param attr The attribute.\n     * @param format The format.\n     * @returns Formatted text.\n     */\n    getAttributeText(attr, format) {\n        let attrText = i18n$1.getText('Attributes', attr.id);\n        if (!attrText) {\n            attrText = attr.caption;\n        }\n        if (!format) {\n            return attrText;\n        }\n        let result = '';\n        let entityPath = this.getFullEntityPathByAttr(attr.id, ' ');\n        if (entityPath) {\n            result = format.replace(new RegExp('{attr}', 'g'), attrText);\n            result = result.replace(new RegExp('{entity}', 'g'), entityPath);\n        }\n        else {\n            result = attrText;\n        }\n        return result.trim();\n    }\n    /**\n     * Scans model's entity tree and calls the callback functions for each attribute and entity.\n     * @param processAttribute The callback function which is called for each attribute in model's entity tree.\n     * The processed attribute is passed in the first function parameter.\n     * @param processEntity The callback function which is called for each entity in tree.\n     * The processed entity is passed in the first function parameter.\n     */\n    runThroughEntities(processAttribute, processEntity) {\n        this.getRootEntity().scan(processAttribute, processEntity);\n    }\n    /**\n     * Finds first attribute by filter.\n     * @param filterFunc The filter function. Takes EntityAttr object in parameter and returns boolean\n     */\n    getFirstAttributeByFilter(filterFunc) {\n        let res = null;\n        this.runThroughEntities(function (attr, opts) {\n            if (filterFunc(attr)) {\n                opts.stop = true;\n                res = attr;\n            }\n        }, null);\n        return res;\n    }\n}\n\nvar ColumnAlignment$1;\n(function (ColumnAlignment) {\n    ColumnAlignment[ColumnAlignment[\"None\"] = 0] = \"None\";\n    ColumnAlignment[ColumnAlignment[\"Left\"] = 1] = \"Left\";\n    ColumnAlignment[ColumnAlignment[\"Center\"] = 2] = \"Center\";\n    ColumnAlignment[ColumnAlignment[\"Right\"] = 3] = \"Right\";\n})(ColumnAlignment$1 || (ColumnAlignment$1 = {}));\nclass DataColumn {\n    constructor(desc) {\n        if (!desc)\n            throw Error(\"Options are required\");\n        if (!desc.id)\n            throw Error(\"Field Id is required\");\n        if (!desc.label)\n            throw Error(\"Label is required\");\n        this.id = desc.id;\n        this.type = utils$1.getIfDefined(desc.type, DataType$1.String);\n        this.label = desc.label;\n        this.originAttrId = desc.originAttrId;\n        this.isAggr = desc.isAggr || false;\n        this.displayFormat = desc.dfmt;\n        this.groupFooterColumnTemplate = desc.gfct;\n        this.style = desc.style || {};\n        this.description = desc.description;\n        this.calculatedWidth = 0;\n    }\n}\nclass DataColumnList {\n    constructor() {\n        this.items = [];\n        this.mapper = {};\n        this._dateColumnIdx = [];\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(colOrDesc) {\n        let col;\n        if (colOrDesc instanceof DataColumn) {\n            col = colOrDesc;\n        }\n        else {\n            col = new DataColumn(colOrDesc);\n        }\n        const index = this.items.length;\n        this.items.push(col);\n        this.mapper[col.id] = index;\n        if ([DataType$1.Date, DataType$1.DateTime, DataType$1.Time].indexOf(col.type) >= 0) {\n            this._dateColumnIdx.push(index);\n        }\n        return index;\n    }\n    updateDateColumnIdx() {\n        this._dateColumnIdx = this.getItems()\n            .filter(col => [DataType$1.Date, DataType$1.DateTime, DataType$1.Time].indexOf(col.type) >= 0)\n            .map((col, index) => index);\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.count) {\n            this.items[index] = col;\n            this.updateDateColumnIdx();\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex) {\n            utils$1.moveArrayItem(this.items, oldIndex, newIndex);\n            this.updateDateColumnIdx();\n        }\n    }\n    get(index) {\n        if (index >= 0 && index < this.count) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    getIndex(id) {\n        return this.mapper[id];\n    }\n    getItems() {\n        return this.items;\n    }\n    getDateColumnIndexes() {\n        return this._dateColumnIdx;\n    }\n    removeAt(index) {\n        const col = this.get(index);\n        this.items.splice(index, 1);\n        const removeDate = this._dateColumnIdx.indexOf(index);\n        if (removeDate >= 0) {\n            this._dateColumnIdx.splice(removeDate, 1);\n        }\n        delete this.mapper[col.id];\n    }\n    clear() {\n        this.items = [];\n        this._dateColumnIdx = [];\n        this.mapper = {};\n    }\n}\n\nlet DataRow$1 = class DataRow {\n    constructor(columns, values) {\n        this.columns = columns;\n        this.values = values;\n    }\n    toArray() {\n        return Array.from(this.values);\n    }\n    size() {\n        return this.values.length;\n    }\n    getValue(colIdOrIndex) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        return this.values[index];\n    }\n    setValue(colIdOrIndex, value) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        this.values[index] = value;\n    }\n};\n\nclass EasyDataTable {\n    constructor(options) {\n        this._chunkSize = 1000;\n        this._elasticChunks = false;\n        this.cachedRows = [];\n        this.total = 0;\n        this.loader = null;\n        this.needTotal = true;\n        this.isInMemory = false;\n        options = options || {};\n        this._chunkSize = options.chunkSize || this._chunkSize;\n        this._elasticChunks = options.elasticChunks || this._elasticChunks;\n        this.loader = options.loader;\n        if (typeof options.inMemory !== 'undefined') {\n            this.isInMemory = options.inMemory;\n        }\n        if (this.isInMemory) {\n            this.needTotal = false;\n        }\n        this._columns = new DataColumnList();\n        this.onUpdate = options.onUpdate;\n        if (options.columns) {\n            for (const colDesc of options.columns) {\n                this._columns.add(colDesc);\n            }\n        }\n        if (options.rows) {\n            for (const rowData of options.rows) {\n                const row = this.createRow(rowData);\n                this.addRow(row);\n            }\n        }\n        this.needTotal = !this._elasticChunks;\n    }\n    get columns() {\n        return this._columns;\n    }\n    get chunkSize() {\n        return this._chunkSize;\n    }\n    set chunkSize(value) {\n        this._chunkSize = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    get elasticChunks() {\n        return this._elasticChunks;\n    }\n    set elasticChunks(value) {\n        this._elasticChunks = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    getRows(params) {\n        let fromIndex = 0, count = this._chunkSize;\n        if (params) {\n            if ('page' in params) {\n                fromIndex = params.pageSize * (params.page - 1);\n                count = params.pageSize;\n            }\n            else {\n                fromIndex = params.offset;\n                count = params.limit;\n            }\n        }\n        let endIndex = fromIndex + count; //the first index of the next page\n        //if we don't calculate total on this request\n        if (!this.needTotal && !this.elasticChunks) {\n            if (fromIndex >= this.total) {\n                return Promise.resolve([]);\n            }\n            if (endIndex > this.total) {\n                endIndex = this.total;\n            }\n        }\n        if (this.isInMemory && endIndex > this.cachedRows.length) {\n            endIndex = this.cachedRows.length;\n        }\n        let allChunksCached = endIndex <= this.cachedRows.length;\n        if (allChunksCached) {\n            return Promise.resolve(this.cachedRows.slice(fromIndex, endIndex));\n        }\n        //if loader is not defined\n        if (!this.loader) {\n            throw `Loader is not defined. Can't get the rows from ${fromIndex} to ${endIndex}`;\n        }\n        // we need total only for the first request\n        const needTotal = this.needTotal;\n        if (this.needTotal) {\n            this.needTotal = false;\n        }\n        let offset = this.cachedRows.length;\n        let limit = endIndex - offset;\n        if (limit < this._chunkSize) {\n            limit = this._chunkSize;\n        }\n        const resultPromise = this.loader.loadChunk({\n            offset: offset,\n            limit: limit,\n            needTotal: needTotal\n        })\n            .then(result => {\n            if (needTotal) {\n                this.total = result.total;\n            }\n            Array.prototype.push.apply(this.cachedRows, result.table.getCachedRows());\n            if (endIndex > this.cachedRows.length) {\n                endIndex = this.cachedRows.length;\n            }\n            if (this.elasticChunks) {\n                const count = result.table.getCachedCount();\n                if (count < limit) {\n                    this.total = this.cachedRows.length;\n                }\n            }\n            this.fireUpdated();\n            return this.cachedRows.slice(fromIndex, endIndex);\n        });\n        return resultPromise;\n    }\n    getRow(index) {\n        return this.getRows({ offset: index, limit: 1 })\n            .then(rows => rows.length > 0 ? rows[0] : null);\n    }\n    getTotal() {\n        return this.total;\n    }\n    setTotal(total) {\n        this.total = total;\n        this.needTotal = false;\n    }\n    getCachedCount() {\n        return this.cachedRows.length;\n    }\n    clear() {\n        this.columns.clear();\n        this.cachedRows = [];\n        this.total = 0;\n        this.needTotal = !this._elasticChunks;\n        this.fireUpdated();\n    }\n    createRow(dataOrRow) {\n        const dateIdx = this._columns.getDateColumnIndexes();\n        const values = new Array(this._columns.count);\n        const getValue = dataOrRow instanceof DataRow$1\n            ? (colId) => dataOrRow.getValue(colId)\n            : (colId) => dataOrRow[colId];\n        if (dataOrRow) {\n            this.columns.getItems().forEach((column) => {\n                const value = getValue(column.id);\n                const index = this.columns.getIndex(column.id);\n                values[index] = (dateIdx.indexOf(index) >= 0)\n                    ? this.mapDate(value, column.type)\n                    : value;\n            });\n        }\n        return new DataRow$1(this._columns, values);\n    }\n    mapDate(value, dtype) {\n        if (value) {\n            let result = new Date(value);\n            if (isNaN(result.getTime())\n                && dtype == DataType$1.Time) {\n                result = utils$1.strToTime(value);\n            }\n            return result;\n        }\n        return null;\n    }\n    addRow(rowOrValues) {\n        let newRow;\n        if (Array.isArray(rowOrValues)) {\n            let values = rowOrValues;\n            const dateIdx = this._columns.getDateColumnIndexes();\n            if (dateIdx.length > 0) {\n                for (const idx of dateIdx) {\n                    if (values[idx]) {\n                        values[idx] = this.mapDate(values[idx], this._columns.get(idx).type);\n                    }\n                }\n            }\n            newRow = new DataRow$1(this._columns, values);\n        }\n        else {\n            newRow = this.createRow(rowOrValues);\n        }\n        this.cachedRows.push(newRow);\n        const cachedTotal = this.getCachedCount();\n        if (cachedTotal > this.total) {\n            this.total = cachedTotal;\n        }\n        return newRow;\n    }\n    getCachedRows() {\n        return this.cachedRows;\n    }\n    totalIsKnown() {\n        if (this.elasticChunks) {\n            const count = this.getCachedCount();\n            return count === this.total;\n        }\n        return !this.needTotal;\n    }\n    fireUpdated() {\n        if (this.onUpdate) {\n            this.onUpdate(this);\n        }\n    }\n}\n/**\n * Adds two paths and returns the result\n * Correctly processes leading and trailing slashes\n * @param path1\n * @param path2\n */\nfunction combinePath(path1, path2) {\n    let result = path1;\n    if (result != null && result.length > 0) {\n        if (result.charAt(result.length - 1) != '/')\n            result += \"/\";\n        result += path2;\n    }\n    else {\n        result = path2;\n    }\n    return result;\n}\n\nvar liquid$1;\n(function (liquid) {\n    function renderLiquidTemplate(template, vars) {\n        let result = template;\n        if (vars) {\n            for (let v in vars) {\n                const liquidVarRegexp = new RegExp('\\{\\{' + v + '\\}\\}', 'g');\n                result = result.replace(liquidVarRegexp, vars[v]);\n            }\n        }\n        return result;\n    }\n    liquid.renderLiquidTemplate = renderLiquidTemplate;\n})(liquid$1 || (liquid$1 = {}));\n\ni18n$1.resetLocales();\n\n//types\nif (typeof Object.values !== 'function') {\n    Object.values = function (obj) {\n        return Object.keys(obj).map(key => obj[key]);\n    };\n}\nif (typeof Math.trunc !== 'function') {\n    Math.trunc = function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n}\n\nclass TextDataFilter {\n    constructor(loader, sourceTable, sourceId, isLookup = false) {\n        this.loader = loader;\n        this.sourceTable = sourceTable;\n        this.sourceId = sourceId;\n        this.isLookup = isLookup;\n        this.filterValue = '';\n        //turns off client-side search\n        //for test purposes\n        this.justServerSide = false;\n    }\n    getValue() {\n        return this.filterValue;\n    }\n    apply(value) {\n        this.filterValue = value;\n        if (this.filterValue) {\n            return this.applyCore();\n        }\n        else {\n            return this.clear();\n        }\n    }\n    clear() {\n        this.filterValue = '';\n        return Promise.resolve(this.sourceTable);\n    }\n    applyCore() {\n        if (this.sourceTable.getTotal() == this.sourceTable.getCachedCount() && !this.justServerSide) {\n            return this.applyInMemoryFilter();\n        }\n        else {\n            const filters = [\n                { class: \"__substring\", value: this.filterValue }\n            ];\n            return this.loader.loadChunk({\n                offset: 0,\n                limit: this.sourceTable.chunkSize,\n                needTotal: true,\n                filters: filters,\n                sourceId: this.sourceId,\n                lookup: this.isLookup\n            })\n                .then(data => {\n                const filteredTable = new EasyDataTable({\n                    chunkSize: this.sourceTable.chunkSize,\n                    loader: {\n                        loadChunk: (params) => this.loader\n                            .loadChunk(Object.assign(Object.assign({}, params), { filters: filters, sourceId: this.sourceId, lookup: this.isLookup }))\n                    }\n                });\n                for (const col of this.sourceTable.columns.getItems()) {\n                    filteredTable.columns.add(col);\n                }\n                filteredTable.setTotal(data.total);\n                for (const row of data.table.getCachedRows()) {\n                    filteredTable.addRow(row);\n                }\n                return filteredTable;\n            });\n        }\n    }\n    applyInMemoryFilter() {\n        return new Promise((resolve, reject) => {\n            const filteredTable = new EasyDataTable({\n                chunkSize: this.sourceTable.chunkSize,\n                inMemory: true\n            });\n            for (const col of this.sourceTable.columns.getItems()) {\n                filteredTable.columns.add(col);\n            }\n            const words = this.filterValue.split('||').map(w => w.trim().toLowerCase());\n            const suitableColumns = this.sourceTable.columns.getItems()\n                .filter(col => utils$1.isNumericType(col.type)\n                || utils$1.getStringDataTypes().indexOf(col.type) >= 0);\n            const hasEnterance = (row) => {\n                for (const col of suitableColumns) {\n                    const value = row.getValue(col.id);\n                    if (value) {\n                        const normalized = value.toString().toLowerCase();\n                        for (const word of words) {\n                            if (normalized.indexOf(word) >= 0) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            };\n            for (const row of this.sourceTable.getCachedRows()) {\n                if (hasEnterance(row)) {\n                    filteredTable.addRow(row);\n                }\n            }\n            filteredTable.setTotal(filteredTable.getCachedCount());\n            resolve(filteredTable);\n        });\n    }\n}\n\n/*!\n * EasyData.JS UI v1.4.20\n * Copyright 2023 Korzh.com\n * Licensed under MIT\n */\n\n/*!\n * EasyData.JS Core v1.4.20\n * Copyright 2023 Korzh.com\n * Licensed under MIT\n */\n\n/** Represents the common types of the data. */\nvar DataType;\n(function (DataType) {\n    /** Unknown type value*/\n    DataType[DataType[\"Unknown\"] = 0] = \"Unknown\";\n    /** String value*/\n    DataType[DataType[\"String\"] = 1] = \"String\";\n    /** 8-bit integer value */\n    DataType[DataType[\"Byte\"] = 2] = \"Byte\";\n    /** 16-bit integer value */\n    DataType[DataType[\"Word\"] = 3] = \"Word\";\n    /** 32-bit integer value */\n    DataType[DataType[\"Int32\"] = 4] = \"Int32\";\n    /** 64-bit integer value */\n    DataType[DataType[\"Int64\"] = 5] = \"Int64\";\n    /** Boolean value */\n    DataType[DataType[\"Bool\"] = 6] = \"Bool\";\n    /** Floating-point numeric value */\n    DataType[DataType[\"Float\"] = 7] = \"Float\";\n    /** Money value */\n    DataType[DataType[\"Currency\"] = 8] = \"Currency\";\n    /** Binary-coded decimal value */\n    DataType[DataType[\"BCD\"] = 9] = \"BCD\";\n    /** Date value */\n    DataType[DataType[\"Date\"] = 10] = \"Date\";\n    /** Time value */\n    DataType[DataType[\"Time\"] = 11] = \"Time\";\n    /** Date and time value */\n    DataType[DataType[\"DateTime\"] = 12] = \"DateTime\";\n    /** Autoincrement 32-bit integer value */\n    DataType[DataType[\"Autoinc\"] = 13] = \"Autoinc\";\n    /** MEMO value (text with unlimited length) */\n    DataType[DataType[\"Memo\"] = 14] = \"Memo\";\n    /** BLOB value (any data with unlimited length) */\n    DataType[DataType[\"Blob\"] = 15] = \"Blob\";\n    /** Fixed character value */\n    DataType[DataType[\"FixedChar\"] = 16] = \"FixedChar\";\n    /** The unique identifier */\n    DataType[DataType[\"Guid\"] = 17] = \"Guid\";\n    /*-------- Spatial data types ----------*/\n    /** Any geometry data */\n    DataType[DataType[\"Geometry\"] = 18] = \"Geometry\";\n    /** Any data that represents some geography objects</summary> */\n    DataType[DataType[\"Geography\"] = 19] = \"Geography\";\n})(DataType || (DataType = {}));\n\nvar EntityAttrKind;\n(function (EntityAttrKind) {\n    EntityAttrKind[EntityAttrKind[\"Data\"] = 0] = \"Data\";\n    EntityAttrKind[EntityAttrKind[\"Virtual\"] = 1] = \"Virtual\";\n    EntityAttrKind[EntityAttrKind[\"Lookup\"] = 2] = \"Lookup\";\n})(EntityAttrKind || (EntityAttrKind = {}));\n\nvar HttpMethod;\n(function (HttpMethod) {\n    HttpMethod[\"Trace\"] = \"TRACE\";\n    HttpMethod[\"Options\"] = \"OPTIONS\";\n    HttpMethod[\"Get\"] = \"GET\";\n    HttpMethod[\"Put\"] = \"PUT\";\n    HttpMethod[\"Post\"] = \"POST\";\n    HttpMethod[\"Delete\"] = \"DELETE\";\n})(HttpMethod || (HttpMethod = {}));\n\nvar utils;\n(function (utils) {\n    function getAllDataTypes() {\n        return Object.values(DataType).filter(item => typeof item === \"number\");\n    }\n    utils.getAllDataTypes = getAllDataTypes;\n    function getDateDataTypes() {\n        return [DataType.Time, DataType.Date, DataType.DateTime];\n    }\n    utils.getDateDataTypes = getDateDataTypes;\n    function getStringDataTypes() {\n        return [DataType.String, DataType.Memo, DataType.FixedChar];\n    }\n    utils.getStringDataTypes = getStringDataTypes;\n    const _numericTypes = [DataType.Byte, DataType.Word, DataType.Int32,\n        DataType.Int64, DataType.Float, DataType.Currency, DataType.Autoinc];\n    function getNumericDataTypes() {\n        return _numericTypes;\n    }\n    utils.getNumericDataTypes = getNumericDataTypes;\n    const _intTypes = [DataType.Byte, DataType.Word, DataType.Int32, DataType.Int64, DataType.Autoinc];\n    //-------------- object functions -------------------\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function copies only the first level properties.\n     * For a deep copy please use `assignDeep`\n     * @param target - the target object\n     * @param args  - an array of the source objects\n     */\n    function assign(target, ...args) {\n        for (let i = 0; i < args.length; i++) {\n            let source = args[i];\n            if (source) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    utils.assign = assign;\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function make a deep copy -\n     * so `assignDeep` will be called recursively for all object properties\n     * on the first level.\n     * @param target - the target object\n     * @param sources  - an array of the source objects\n     */\n    function assignDeep(target, ...sources) {\n        return assignDeepCore(new WeakMap(), target, sources);\n    }\n    utils.assignDeep = assignDeep;\n    function assignDeepCore(hashSet, target, sources) {\n        if (!target) {\n            target = {};\n        }\n        for (let source of sources) {\n            if (source) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        let sourceVal = source[key];\n                        if (sourceVal !== null && typeof sourceVal === 'object') {\n                            if (hashSet.has(sourceVal)) {\n                                target[key] = hashSet.get(sourceVal);\n                            }\n                            else {\n                                if (Array.isArray(sourceVal)) {\n                                    target[key] = createArrayFrom(sourceVal);\n                                    hashSet.set(sourceVal, target[key]);\n                                }\n                                else {\n                                    if (typeof target[key] == 'undefined' || target[key] == null) {\n                                        target[key] = Object.create(Object.getPrototypeOf(sourceVal));\n                                    }\n                                    hashSet.set(sourceVal, target[key]);\n                                    assignDeepCore(hashSet, target[key], [sourceVal]);\n                                }\n                            }\n                        }\n                        else {\n                            target[key] = sourceVal;\n                        }\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    function getIfDefined(value, defaultValue) {\n        return (typeof value !== 'undefined') ? value : defaultValue;\n    }\n    utils.getIfDefined = getIfDefined;\n    function IsDefinedAndNotNull(value) {\n        return typeof value !== 'undefined' && value !== null;\n    }\n    utils.IsDefinedAndNotNull = IsDefinedAndNotNull;\n    function copyArrayTo(collection1, collection2) {\n        const len1 = collection1.length;\n        const len2 = collection2.length;\n        for (let i = 0; i < len1 && i < len2; i++) {\n            collection2[i] = collection1[i];\n        }\n    }\n    utils.copyArrayTo = copyArrayTo;\n    function createArrayFrom(collection) {\n        let result = [];\n        for (let item of collection) {\n            result.push(item);\n        }\n        return result;\n    }\n    utils.createArrayFrom = createArrayFrom;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the found object or null.\n     * @param array\n     * @param id\n     */\n    function findItemById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return array[idx];\n        }\n        return null;\n    }\n    utils.findItemById = findItemById;\n    function findItemIndexById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return idx;\n        }\n        return -1;\n    }\n    utils.findItemIndexById = findItemIndexById;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the index of the found element, or -1 if nothing was found.\n     * @param array\n     * @param id\n     */\n    function indexOfArrayItem(arr, item) {\n        if (arr.indexOf) {\n            return arr.indexOf(item);\n        }\n        else {\n            let len = arr.length;\n            for (let i = 0; i < len; i++) {\n                if (item == arr[i]) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n    utils.indexOfArrayItem = indexOfArrayItem;\n    /**\n     * Moves an item in some array to a new position\n     * @param array\n     * @param index1\n     * @param index2\n     */\n    function moveArrayItem(array, index1, index2) {\n        if (index1 >= array.length) {\n            throw 'Index out of bounds: ' + index1;\n        }\n        if (index2 >= array.length) {\n            index2 = array.length - 1;\n        }\n        let item = array.splice(index1, 1)[0];\n        array.splice(index2, 0, item);\n    }\n    utils.moveArrayItem = moveArrayItem;\n    /**\n     * Searches for a particular item in the array are removes that item if found.\n     * @param arr\n     * @param value\n     */\n    function removeArrayItem(arr, value) {\n        let index = arr.indexOf(value);\n        if (index != -1) {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    utils.removeArrayItem = removeArrayItem;\n    function insertArrayItem(arr, index, value) {\n        arr.splice(index, 0, value);\n    }\n    utils.insertArrayItem = insertArrayItem;\n    function fillArray(arr, value, start = 0, end) {\n        let len = arr.length >>> 0;\n        var relativeStart = start >> 0;\n        var k = relativeStart < 0 ?\n            Math.max(len + relativeStart, 0) :\n            Math.min(relativeStart, len);\n        var relativeEnd = end === undefined ?\n            len : end >> 0;\n        let final = relativeEnd < 0 ?\n            Math.max(len + relativeEnd, 0) :\n            Math.min(relativeEnd, len);\n        while (k < final) {\n            arr[k] = value;\n            k++;\n        }\n        return arr;\n    }\n    utils.fillArray = fillArray;\n    //------------ DOM utils ------------\n    /**\n     * Calculates the shift on which we need to move our element horizontally\n     * to find current window\n     * @param absLeft\n     * @param width\n     */\n    function shiftToFitWindow(absLeft, width) {\n        let body = document.getElementsByTagName('body')[0];\n        let winWidth = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\n        var absRight = absLeft + width;\n        let shift = 0;\n        if (absRight > winWidth) {\n            shift = winWidth - absRight - 10;\n            if (absLeft + shift < 0) {\n                shift = 10 - absLeft;\n            }\n        }\n        return shift;\n    }\n    utils.shiftToFitWindow = shiftToFitWindow;\n    /**\n     * Returns `true` if the value passed in the parameter is an object\n     * @param val\n     */\n    function isObject(val) {\n        if (val === null) {\n            return false;\n        }\n        return ((typeof val === 'function') || (typeof val === 'object'));\n    }\n    utils.isObject = isObject;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isNumericType(dtype) {\n        const index = _numericTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isNumericType = isNumericType;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isIntType(dtype) {\n        const index = _intTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isIntType = isIntType;\n    /**\n     * Returns `true` if the value passed in the parameter is an a numeric value\n     * @param val\n     */\n    function isNumeric(val) {\n        return !isNaN(parseFloat(val)) && isFinite(val);\n    }\n    utils.isNumeric = isNumeric;\n    /**\n     * Returns `true` if two data types  passed in parameters\n     * are compatible - so it's safe to copy the values between\n     * two expressions with these two types\n     * @param type1\n     * @param type2\n     */\n    function areCompatibleDataTypes(type1, type2) {\n        return typeof type1 == \"undefined\" || typeof type2 == \"undefined\" || type1 == DataType.Unknown || type2 == DataType.Unknown\n            || (type1 == type2) || (type1 == DataType.Date && type2 == DataType.DateTime)\n            || (type1 == DataType.DateTime && type2 == DataType.Date);\n    }\n    utils.areCompatibleDataTypes = areCompatibleDataTypes;\n    /**\n     * Returns `true` if the property with named `propName`\n     * in the object `obj` has some value\n     * @param obj\n     * @param propName\n     */\n    function isPropSet(obj, propName) {\n        return obj[propName] || obj[propName.toLowerCase()] || obj[propName.toUpperCase()];\n    }\n    utils.isPropSet = isPropSet;\n    //-------------- ID generator -----------\n    const prefixIdLen = 4;\n    const symbols = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    const magicTicks = 636712160627685350;\n    /**\n     * Generates an unique ID\n     */\n    function generateId(prefix) {\n        if (!prefix) {\n            prefix = 'easy';\n        }\n        let prfx = (prefix.length > prefixIdLen) ? squeezeMoniker(prefix, prefixIdLen) : prefix;\n        if (prfx && prfx.length > 0) {\n            prfx += \"-\";\n        }\n        //adding 3 random symbols\n        var randCharPart = symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)];\n        var randInt = getRandomInt(0, 10000);\n        //generating main ID part \n        //it's a 36-base representation of some random number based on current value of ticks\n        let ticksNum36 = intToNumBase(getNowTicks() - magicTicks - randInt);\n        return prfx + randCharPart + ticksNum36;\n    }\n    utils.generateId = generateId;\n    function intToNumBase(value, targetBase = 36) {\n        var buffer = '';\n        var rest = value;\n        do {\n            buffer = symbols[rest % targetBase] + buffer;\n            rest = Math.floor(rest /= targetBase);\n        } while (rest > 0);\n        return buffer;\n    }\n    function squeezeMoniker(str, maxlen) {\n        let parts = str.split('-');\n        let pml = 1;\n        let ptt = maxlen;\n        if (parts.length < maxlen) {\n            pml = maxlen / parts.length;\n            ptt = parts.length;\n        }\n        let result = \"\";\n        for (let i = 0; i < ptt; i++) {\n            result += squeeze(parts[i], pml);\n        }\n        return result;\n    }\n    function squeeze(str, maxlen) {\n        const len = str.length;\n        if (len > maxlen) {\n            let step = len / maxlen;\n            let result = \"\";\n            result += str[0];\n            let nextIndex = step;\n            let ch;\n            for (let i = 1; i < len; i++) {\n                ch = str[i];\n                if (i + 1 > nextIndex) {\n                    result += ch;\n                    nextIndex += step;\n                }\n            }\n            return result;\n        }\n        else {\n            return str;\n        }\n    }\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n    function getNowTicks() {\n        return (621355968e9 + (new Date()).getTime() * 1e4);\n    }\n    function safeParseInt(str) {\n        const res = parseInt(str);\n        if (isNaN(res))\n            throw `\"${str}\" is not a valid number`;\n        return res;\n    }\n    function getDaysInMonth(month, year) {\n        return new Date(year, month + 1, 0).getDate();\n    }\n    // ------------- date/time functions -------------------\n    // TO DO: improve to process all datetime cases\n    function strToDateTime(value, format) {\n        if (!value || value.length == 0)\n            return new Date();\n        const normalizedValue = value.replace(/[^a-zA-Z0-9_]/g, '-');\n        const normalizedFormat = format.replace(/[^a-zA-Z0-9_]/g, '-');\n        const formatItems = normalizedFormat.split('-');\n        const dateItems = normalizedValue.split('-');\n        const monthIndex = formatItems.indexOf(\"MM\");\n        const dayIndex = formatItems.indexOf(\"dd\");\n        const yearIndex = formatItems.indexOf(\"yyyy\");\n        const hourIndex = formatItems.indexOf(\"HH\");\n        const minutesIndex = formatItems.indexOf(\"mm\");\n        const secondsIndex = formatItems.indexOf(\"ss\");\n        const today = new Date();\n        try {\n            const year = yearIndex > -1 && yearIndex < dateItems.length\n                ? safeParseInt(dateItems[yearIndex])\n                : today.getFullYear();\n            const month = monthIndex > -1 && monthIndex < dateItems.length\n                ? safeParseInt(dateItems[monthIndex]) - 1\n                : today.getMonth() - 1;\n            if (month > 11)\n                throw '';\n            const day = dayIndex > -1 && dayIndex < dateItems.length\n                ? safeParseInt(dateItems[dayIndex])\n                : today.getDate();\n            if (day > getDaysInMonth(month, year))\n                throw '';\n            const hour = hourIndex > -1 && hourIndex < dateItems.length\n                ? safeParseInt(dateItems[hourIndex])\n                : 0;\n            if (hour > 23)\n                throw '';\n            const minute = minutesIndex > -1 && minutesIndex < dateItems.length\n                ? safeParseInt(dateItems[minutesIndex])\n                : 0;\n            if (minute > 59)\n                throw '';\n            const second = secondsIndex > -1 && secondsIndex < dateItems.length\n                ? safeParseInt(dateItems[secondsIndex])\n                : 0;\n            if (second > 59)\n                throw '';\n            return new Date(year, month, day, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${value} is not a valid date.`;\n        }\n    }\n    utils.strToDateTime = strToDateTime;\n    function strToTime(str) {\n        const timeItems = str.split(':');\n        try {\n            const hour = timeItems.length > 0 ? safeParseInt(timeItems[0]) : 0;\n            if (hour > 23)\n                throw '';\n            const minute = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (minute > 59)\n                throw '';\n            const second = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (second > 59)\n                throw '';\n            return new Date(0, 0, 0, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${str} is not a valid time.`;\n        }\n    }\n    utils.strToTime = strToTime;\n})(utils || (utils = {}));\n\n/**\n * Contains internatialization functionality.\n */\nvar i18n;\n(function (i18n) {\n    let englishUSLocaleSettings = {\n        shortDateFormat: 'MM/dd/yyyy',\n        longDateFormat: 'dd MMM, yyyy',\n        editDateFormat: 'MM/dd/yyyy',\n        shortTimeFormat: 'HH:mm',\n        editTimeFormat: 'HH:mm',\n        longTimeFormat: 'HH:mm:ss',\n        shortMonthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        longMonthNames: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        shortWeekDayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        longWeekDayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        decimalSeparator: '.',\n        currency: 'USD'\n    };\n    let defaultLocale = {\n        localeId: 'en-US',\n        englishName: 'English',\n        displayName: 'English',\n        texts: {\n            ButtonOK: 'OK',\n            ButtonCancel: 'Cancel',\n            Yes: 'Yes',\n            No: 'No',\n            True: 'True',\n            False: 'False'\n        },\n        settings: englishUSLocaleSettings\n    };\n    let allLocales = {\n        'en-US': defaultLocale\n    };\n    let currentLocale;\n    const mappers = [];\n    function mapInfo(info) {\n        for (const mapper of mappers) {\n            mapper(info);\n        }\n    }\n    function addMapper(mapper) {\n        mappers.push(mapper);\n    }\n    i18n.addMapper = addMapper;\n    /**\n     * Gets added locales with their names.\n     * @returns  The locales.\n     */\n    function getLocales() {\n        let result = [];\n        for (let locale in allLocales) {\n            result.push({\n                locale: locale,\n                englishName: allLocales[locale].englishName,\n                displayName: allLocales[locale].displayName\n            });\n        }\n        return result.sort((a, b) => {\n            if (a.englishName > b.englishName) {\n                return 1;\n            }\n            else if (a.englishName === b.englishName) {\n                return 0;\n            }\n            return -1;\n        });\n    }\n    i18n.getLocales = getLocales;\n    /**\n     * Gets the current locale ID.\n     * @returns The locale.\n     */\n    function getCurrentLocale() {\n        return currentLocale.localeId;\n    }\n    i18n.getCurrentLocale = getCurrentLocale;\n    /**\n    * Sets the curent locale.\n    * @deprecated Use setCurrentLocale instead\n    * @param l The locale.\n    */\n    function setLocale(l) {\n        console.warn('This method is deprecated. Use setCurrentLocale instead');\n        setCurrentLocale(l);\n    }\n    i18n.setLocale = setLocale;\n    /**\n     * Sets the curent locale.\n     * @param localeId The locale.\n     */\n    function setCurrentLocale(localeId) {\n        const newLocale = allLocales[localeId];\n        if (newLocale) {\n            utils.assignDeep(currentLocale, newLocale);\n        }\n        else {\n            currentLocale.englishName = localeId;\n            currentLocale.displayName = localeId;\n            currentLocale.texts = utils.assignDeep({}, defaultLocale.texts);\n        }\n        currentLocale.localeId = localeId;\n    }\n    i18n.setCurrentLocale = setCurrentLocale;\n    /**\n     * Returns localized text by the key defined in parameter.\n     * Here we get the text of the resource string assigned to CmdClickToAddCondition key:\n     *\n     ```\n       const text = i18n.getText('CmdClickToAddCondition')\n     ```\n     * @param args The keys of the resource string.\n     * @returns Text of the resource defined by key or null if the key is not found\n     *\n     */\n    function getText(...args) {\n        let textsObj = currentLocale.texts;\n        let resText = '';\n        if (args && args.length) {\n            const argLength = args.length;\n            for (let i = 0; i < argLength; i++) {\n                resText = textsObj[args[i]];\n                if (typeof resText === 'object') {\n                    textsObj = resText;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return resText;\n    }\n    i18n.getText = getText;\n    function getLocaleSettings() {\n        return currentLocale.settings;\n    }\n    i18n.getLocaleSettings = getLocaleSettings;\n    function getOneLocaleSetting(key) {\n        return currentLocale.settings[key];\n    }\n    i18n.getOneLocaleSetting = getOneLocaleSetting;\n    function getShortMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.shortMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getShortMonthName = getShortMonthName;\n    function getLongMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.longMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getLongMonthName = getLongMonthName;\n    function getShortWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.shortWeekDayNames.length >= dayNum\n                ? settings.shortWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getShortWeekDayName = getShortWeekDayName;\n    function getLongWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.longWeekDayNames.length >= dayNum\n                ? settings.longWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getLongWeekDayName = getLongWeekDayName;\n    /**\n     * Updates the locale settings (date/time formats, separators, etc) for the specified locale.\n     * @param settingsToUpdate a LocaleSettings object\n     */\n    function updateLocaleSettings(settingsToUpdate) {\n        if (!currentLocale.settings) {\n            currentLocale.settings = utils.assignDeep({}, englishUSLocaleSettings);\n        }\n        currentLocale.settings = utils.assignDeep(currentLocale.settings, settingsToUpdate);\n    }\n    i18n.updateLocaleSettings = updateLocaleSettings;\n    /**\n     * Updates the texts for the current locale\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateLocaleTexts(texts) {\n        if (typeof texts !== 'object') {\n            console.error('Wrong parameter type in updateLocaleTexts function call.' +\n                'The first parameter (localeId) is not necessary. Use updateLocaleTexts(texts) instead');\n            return;\n        }\n        mapInfo({ localeId: currentLocale.localeId, texts: texts });\n        utils.assignDeep(currentLocale.texts, texts);\n    }\n    i18n.updateLocaleTexts = updateLocaleTexts;\n    function updateDefaultTexts(texts) {\n        for (let localeId in allLocales) {\n            let locale = allLocales[localeId];\n            locale.texts = utils.assignDeep({}, texts, locale.texts);\n        }\n        currentLocale.texts = utils.assignDeep({}, texts, currentLocale.texts);\n    }\n    i18n.updateDefaultTexts = updateDefaultTexts;\n    /**\n     * Updates the information for the specified locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be added\n     * @param localeInfo  a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function updateLocaleInfo(localeId, localeData) {\n        mapInfo(localeData);\n        let localeInfoToUpdate = currentLocale;\n        if (localeId) {\n            if (!localeData.localeId) {\n                localeData.localeId = localeId;\n            }\n            localeInfoToUpdate = allLocales[localeId];\n            if (!localeInfoToUpdate) {\n                localeInfoToUpdate = utils.assignDeep({}, defaultLocale);\n                allLocales[localeId] = localeInfoToUpdate;\n            }\n        }\n        utils.assignDeep(localeInfoToUpdate, localeData);\n    }\n    i18n.updateLocaleInfo = updateLocaleInfo;\n    /**\n     * Adds the locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be created\n     * @param localeInfo - a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function addLocale(localeId, localeInfo) {\n        updateLocaleInfo(localeId, localeInfo);\n    }\n    i18n.addLocale = addLocale;\n    /**\n     * Overwrites some locale settings (date/time formats) with the formats used in browser's current language\n     */\n    function determineSettingsByLocale(localeId) {\n        const now = new Date(2020, 5, 7, 19, 34, 56, 88);\n        const dateOptions = { year: 'numeric', month: 'numeric', day: 'numeric' };\n        const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n        const dateStr = now.toLocaleDateString(localeId, dateOptions);\n        const timeStr = now.toLocaleTimeString(localeId, timeOptions);\n        let dateFormat = dateStr\n            .replace('07', 'dd')\n            .replace('7', 'd')\n            .replace('06', 'MM')\n            .replace('6', 'M')\n            .replace('2020', 'yyyy')\n            .replace('20', 'yy');\n        let timeFormat = timeStr\n            .replace('19', 'HH')\n            .replace('07', 'hh')\n            .replace('7', 'h')\n            .replace('34', 'mm')\n            .replace('56', 'ss')\n            .replace('PM', 'tt');\n        if (!currentLocale.settings) {\n            currentLocale.settings = {};\n        }\n        const localeSettings = {\n            shortDateFormat: dateFormat,\n            shortTimeFormat: timeFormat\n        };\n        updateLocaleSettings(localeSettings);\n    }\n    function loadBrowserLocaleSettings() {\n        const lang = typeof navigator === 'object' ? navigator.language : undefined;\n        determineSettingsByLocale(lang);\n    }\n    function resetLocales() {\n        if (!currentLocale) {\n            currentLocale = utils.assignDeep({}, defaultLocale);\n            loadBrowserLocaleSettings();\n        }\n    }\n    i18n.resetLocales = resetLocales;\n    const DT_FORMAT_RGEX = /\\[([^\\]]+)]|y{2,4}|M{1,4}|d{1,2}|H{1,2}|h{1,2}|m{2}|s{2}|t{2}/g;\n    /**\n     * Returns string representation of the date/time value according to the custom format (second parameter)\n     * The format is compatible with the one used in .NET: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\n     * @param date\n     * @param format\n     */\n    function dateTimeToStr(date, format) {\n        const year = date.getFullYear();\n        const yearStr = year.toString();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const minute = date.getMinutes();\n        const second = date.getSeconds();\n        const hour12 = hour % 12 || 12; //the remainder of the division by 12. Or 12 if it's 0\n        const isPm = hour > 11;\n        const matches = {\n            yyyy: yearStr,\n            yy: yearStr.substring(yearStr.length - 2),\n            MMMM: i18n.getLongMonthName(month),\n            MMM: i18n.getShortMonthName(month),\n            MM: (month < 10) ? '0' + month : month.toString(),\n            M: month.toString(),\n            dd: (day < 10) ? '0' + day : day.toString(),\n            d: day.toString(),\n            HH: (hour < 10) ? '0' + hour : hour.toString(),\n            H: hour.toString(),\n            hh: (hour12 < 10) ? '0' + hour12 : hour12.toString(),\n            h: hour12.toString(),\n            tt: isPm ? 'PM' : 'AM',\n            mm: (minute < 10) ? '0' + minute : minute.toString(),\n            ss: (second < 10) ? '0' + second : second.toString()\n        };\n        return format.replace(DT_FORMAT_RGEX, (match, $1) => {\n            return $1 || matches[match];\n        });\n    }\n    i18n.dateTimeToStr = dateTimeToStr;\n    function dateTimeToStrEx(dateTime, dataType, format) {\n        if (format) {\n            if (format == 'd') {\n                format = buildShortDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'D') {\n                format = buildLongDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'f') {\n                format = buildShortDateTimeFormat(DataType.DateTime);\n            }\n            else if (format == 'F') {\n                format = buildLongDateTimeFormat(DataType.DateTime);\n            }\n        }\n        else {\n            format = buildShortDateTimeFormat(dataType);\n        }\n        return dateTimeToStr(dateTime, format);\n    }\n    i18n.dateTimeToStrEx = dateTimeToStrEx;\n    function buildShortDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.shortDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.shortTimeFormat;\n                break;\n            default:\n                format = localeSettings.shortDateFormat + ' ' + localeSettings.shortTimeFormat;\n                break;\n        }\n        return format;\n    }\n    function buildLongDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.longDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.longTimeFormat;\n                break;\n            default:\n                format = localeSettings.longDateFormat + ' ' + localeSettings.longTimeFormat;\n                break;\n        }\n        return format;\n    }\n    /**\n    * Converts a numeric value to the string taking into the account the decimal separator\n    * @param value - the number to convert\n    * @param format - the format of the number representation (D - decimal, F - float, C - currency)\n    * @param decimalSeparator - the symbol that represents decimal separator. If not specified the function gets the one from the current locale settings.\n    */\n    function numberToStr(number, format, decimalSeparator) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                return formatWithSequence(number, format.slice(1));\n            }\n            else if (['D', 'F', 'C'].indexOf(type) >= 0) {\n                const locale = getCurrentLocale();\n                return number.toLocaleString(locale, getNumberFormatOptions(format));\n            }\n            else {\n                return convertWithMask(Math.trunc(number), format);\n            }\n        }\n        const localeSettings = getLocaleSettings();\n        decimalSeparator = decimalSeparator || localeSettings.decimalSeparator;\n        return number.toString().replace('.', decimalSeparator);\n    }\n    i18n.numberToStr = numberToStr;\n    function booleanToStr(bool, format) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                const values = format.slice(1).split('|');\n                if (values.length > 1) {\n                    const value = values[(bool) ? 1 : 0];\n                    return i18n.getText(value) || value;\n                }\n            }\n        }\n        return `${bool}`;\n    }\n    i18n.booleanToStr = booleanToStr;\n    const cachedSequenceFormats = {};\n    function formatWithSequence(number, format) {\n        if (!cachedSequenceFormats[format]) {\n            // parse and save in cache format values \n            const values = format.split('|')\n                .filter(v => v.length > 0)\n                .map(v => v.split('='));\n            cachedSequenceFormats[format] = {};\n            if (values.length > 0) {\n                if (values[0].length > 1) {\n                    for (const value of values) {\n                        cachedSequenceFormats[format][Number.parseInt(value[1])] = value[0];\n                    }\n                }\n                else {\n                    values.forEach((value, index) => {\n                        cachedSequenceFormats[format][index] = value[0];\n                    });\n                }\n            }\n        }\n        const values = cachedSequenceFormats[format];\n        if (values[number] !== undefined) {\n            const value = values[number];\n            return i18n.getText(value) || value;\n        }\n        return number.toString();\n    }\n    function convertWithMask(number, mask) {\n        let value = number.toString();\n        let result = '';\n        let index = value.length - 1;\n        for (let i = mask.length - 1; i >= 0; i--) {\n            const ch = mask.charAt(i);\n            if (ch === '#' || ch === '0') {\n                if (index >= 0) {\n                    result += value.charAt(index);\n                    index--;\n                }\n                else {\n                    if (ch === '0') {\n                        result += 0;\n                    }\n                }\n            }\n            else {\n                result += ch;\n            }\n        }\n        return result.split('').reverse().join('');\n    }\n    function getNumberFormatOptions(format) {\n        const localeSettings = getLocaleSettings();\n        const type = format[0].toUpperCase();\n        const digits = (format.length > 1)\n            ? Number.parseInt(format.slice(1))\n            : type == 'D' ? 1 : 2;\n        switch (type) {\n            case 'D':\n                return {\n                    style: 'decimal',\n                    useGrouping: false,\n                    minimumIntegerDigits: digits\n                };\n            case 'C':\n                return {\n                    style: 'currency',\n                    currency: localeSettings.currency,\n                    minimumFractionDigits: digits\n                };\n            default:\n                return {\n                    style: 'decimal',\n                    minimumFractionDigits: digits,\n                    maximumFractionDigits: digits\n                };\n        }\n    }\n})(i18n || (i18n = {}));\n\nvar ColumnAlignment;\n(function (ColumnAlignment) {\n    ColumnAlignment[ColumnAlignment[\"None\"] = 0] = \"None\";\n    ColumnAlignment[ColumnAlignment[\"Left\"] = 1] = \"Left\";\n    ColumnAlignment[ColumnAlignment[\"Center\"] = 2] = \"Center\";\n    ColumnAlignment[ColumnAlignment[\"Right\"] = 3] = \"Right\";\n})(ColumnAlignment || (ColumnAlignment = {}));\n\nclass DataRow {\n    constructor(columns, values) {\n        this.columns = columns;\n        this.values = values;\n    }\n    toArray() {\n        return Array.from(this.values);\n    }\n    size() {\n        return this.values.length;\n    }\n    getValue(colIdOrIndex) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        return this.values[index];\n    }\n    setValue(colIdOrIndex, value) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        this.values[index] = value;\n    }\n}\n\n/**\n * EasyData representation of GUID.\n */\nclass EasyGuid {\n    /**\n     * Generates new GUID.\n     * @returns The string representation of GUID.\n     */\n    static newGuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * The representation of event emitter.\n */\nclass EventEmitter {\n    /**\n     * The default constructor.\n     * @param source The source.\n     */\n    constructor(source) {\n        this.silentMode = 0;\n        this.events = new Array();\n        this.source = source;\n    }\n    /**\n     * Subscries to the event.\n     * @param eventType The event type.\n     * @param callback The callback.\n     * @returns The subscribtion ID.\n     */\n    subscribe(eventType, callback) {\n        let event = this.getEventRecByType(eventType);\n        const eventCallback = {\n            id: EasyGuid.newGuid(),\n            callback: callback\n        };\n        if (event) {\n            event.eventCallbacks.push(eventCallback);\n        }\n        else {\n            event = {\n                type: eventType,\n                eventCallbacks: new Array(eventCallback)\n            };\n            this.events.push(event);\n        }\n        return eventCallback.id;\n    }\n    /**\n     * Unsubsribes from the event.\n     * @param eventType The event type.\n     * @param callbackId The subscribtion ID.\n     */\n    unsubscribe(eventType, callbackId) {\n        let event = this.getEventRecByType(eventType);\n        if (event) {\n            let index = -1;\n            for (index = 0; index < event.eventCallbacks.length; index++) {\n                if (event.eventCallbacks[index].id === callbackId) {\n                    break;\n                }\n            }\n            if (index >= 0) {\n                event.eventCallbacks.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Fires the event.\n     * @param eventType The event type.\n     * @param data The event data.\n     * @param postpone  The postpone.\n     * @param force To fire force. If value is `true`, ignores silent mode.\n     */\n    fire(eventType, data, postpone = 0, force = false) {\n        if (this.silentMode && !force) {\n            return;\n        }\n        let eventRec = this.getEventRecByType(eventType);\n        if (eventRec) {\n            const eqevent = {\n                type: eventType,\n                source: this.source,\n                data: data\n            };\n            let emitAllFunc = () => {\n                for (let callback of eventRec.eventCallbacks) {\n                    callback.callback(eqevent);\n                }\n            };\n            if (postpone > 0) {\n                setTimeout(emitAllFunc, postpone);\n            }\n            else {\n                emitAllFunc();\n            }\n        }\n    }\n    /**\n     * Enters to silent mode.\n     */\n    enterSilentMode() {\n        this.silentMode++;\n    }\n    /**\n     * Exits from silent mode.\n     */\n    exitSilentMode() {\n        if (this.silentMode) {\n            this.silentMode--;\n        }\n    }\n    /**\n     * Checks if emitter is in silent mode.\n     * @return `true`, if silent mode is enable.\n     */\n    isSilent() {\n        return this.silentMode > 0;\n    }\n    getEventRecByType(eventType) {\n        for (let event of this.events) {\n            if (event.type == eventType) {\n                return event;\n            }\n        }\n        return null;\n    }\n}\n\nvar liquid;\n(function (liquid) {\n    function renderLiquidTemplate(template, vars) {\n        let result = template;\n        if (vars) {\n            for (let v in vars) {\n                const liquidVarRegexp = new RegExp('\\{\\{' + v + '\\}\\}', 'g');\n                result = result.replace(liquidVarRegexp, vars[v]);\n            }\n        }\n        return result;\n    }\n    liquid.renderLiquidTemplate = renderLiquidTemplate;\n})(liquid || (liquid = {}));\n\ni18n.resetLocales();\n\n//types\nif (typeof Object.values !== 'function') {\n    Object.values = function (obj) {\n        return Object.keys(obj).map(key => obj[key]);\n    };\n}\nif (typeof Math.trunc !== 'function') {\n    Math.trunc = function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n}\n\nvar browserUtils;\n(function (browserUtils) {\n    let _isFirefox = null;\n    let _isIE = null;\n    function IsIE() {\n        if (_isIE === null) {\n            const ua = navigator.userAgent;\n            /* MSIE used to detect old browsers and Trident used to newer ones*/\n            _isIE = ua.indexOf(\"MSIE \") > -1 || ua.indexOf(\"Trident/\") > -1;\n        }\n        return _isIE;\n    }\n    browserUtils.IsIE = IsIE;\n    function IsEdge() {\n        const ua = window.navigator.userAgent;\n        return !IsIE() && ua.includes('Edge/');\n    }\n    browserUtils.IsEdge = IsEdge;\n    function IsFirefox() {\n        if (_isFirefox === null) {\n            const ua = navigator.userAgent;\n            _isFirefox = ua.toLowerCase().indexOf('firefox') > -1;\n        }\n        return _isFirefox;\n    }\n    browserUtils.IsFirefox = IsFirefox;\n    let _detectedIsMobileMode = false;\n    let _isMobileMode = undefined;\n    let detectIsMobileMode = () => {\n        const oldValue = isMobileMode();\n        _detectedIsMobileMode = window.matchMedia('only screen and (max-width: 840px)').matches\n            || window.matchMedia('only screen and (max-height: 420px)').matches;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    };\n    detectIsMobileMode();\n    window.addEventListener('resize', () => detectIsMobileMode());\n    function isMobileMode() {\n        if (_isMobileMode !== undefined) {\n            return _isMobileMode;\n        }\n        else {\n            return _detectedIsMobileMode;\n        }\n    }\n    browserUtils.isMobileMode = isMobileMode;\n    function setIsMobileMode(value) {\n        const oldValue = isMobileMode();\n        _isMobileMode = value;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    }\n    browserUtils.setIsMobileMode = setIsMobileMode;\n    let mobileModeChangeHandler;\n    function onMobileModeChanged(callback) {\n        mobileModeChangeHandler = callback;\n    }\n    browserUtils.onMobileModeChanged = onMobileModeChanged;\n    function getMobileCssClass() {\n        return isMobileMode() ? 'k-mobile' : null;\n    }\n    browserUtils.getMobileCssClass = getMobileCssClass;\n})(browserUtils || (browserUtils = {}));\nfunction getScrollPos() {\n    const body = document.body;\n    const docElem = document.documentElement;\n    return {\n        top: window.pageYOffset || docElem.scrollTop || body.scrollTop,\n        left: window.pageXOffset || docElem.scrollLeft || body.scrollLeft\n    };\n}\nfunction getElementAbsolutePos(element) {\n    let res = { x: 0, y: 0 };\n    if (element !== null) {\n        const position = offset(element);\n        res = { x: position.left, y: position.top };\n    }\n    return res;\n}\nfunction offset(element) {\n    const defaultBoundingClientRect = { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 };\n    let box;\n    try {\n        box = element.getBoundingClientRect();\n    }\n    catch (_a) {\n        box = defaultBoundingClientRect;\n    }\n    const body = document.body;\n    const docElem = document.documentElement;\n    const scollPos = getScrollPos();\n    const scrollTop = scollPos.top;\n    const scrollLeft = scollPos.left;\n    const clientTop = docElem.clientTop || body.clientTop || 0;\n    const clientLeft = docElem.clientLeft || body.clientLeft || 0;\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n    return { top: Math.round(top), left: Math.round(left) };\n}\nconst eqCssPrefix = 'eqjs';\n\nfunction mask(input, maskPattern) {\n    const d = { 9: '[0-9]', a: '[a-z]' };\n    const mask = maskPattern.split('');\n    const keyDownHandler = (e) => {\n        // backspace key or delete key\n        if (e.keyCode === 8 || e.keyCode === 46) {\n            e.preventDefault();\n            let mskd = [];\n            let startSelection = input.selectionStart;\n            if (startSelection == 0)\n                return;\n            let selection = startSelection;\n            let onlyLodash = true;\n            for (let index = mask.length - 1; index >= 0; index--) {\n                const el = mask[index];\n                if (d[el]) {\n                    let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                    if (t && index != startSelection - 1) {\n                        onlyLodash = false;\n                    }\n                    if (index === startSelection - 1)\n                        selection--;\n                    mskd.push(t && index != startSelection - 1\n                        ? input.value.charAt(index)\n                        : '_');\n                }\n                else {\n                    if (index === selection - 1)\n                        selection--;\n                    if (startSelection - 1 === index)\n                        startSelection--;\n                    mskd.push(el);\n                }\n            }\n            input.value = !onlyLodash ? mskd.reverse().join('') : '';\n            input.selectionStart = input.selectionEnd = selection < 0 ? 0 : selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const keyPressHandler = (e) => {\n        const char = String.fromCharCode(e.charCode);\n        if (char) {\n            e.preventDefault();\n            let mskd = [];\n            let selectionStart = input.selectionStart;\n            let selection = selectionStart;\n            mask.forEach((el, index) => {\n                if (d[el]) {\n                    const ch = (index != selectionStart)\n                        ? input.value.charAt(index)\n                        : char;\n                    let t = new RegExp(d[el], 'i').test(ch);\n                    mskd.push(t ? ch : '_');\n                    if (t && selectionStart === index)\n                        selection++;\n                }\n                else {\n                    mskd.push(el);\n                    if (selection === index)\n                        selection++;\n                    if (selectionStart === index)\n                        selectionStart++;\n                }\n            });\n            input.value = mskd.join('');\n            input.selectionStart = input.selectionEnd = selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const inputHandler = (e) => {\n        if (e.type === 'focus' && input.value !== '')\n            return;\n        let mskd = [];\n        let startSelection = input.selectionStart;\n        mask.forEach((el, index) => {\n            if (d[el]) {\n                let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                mskd.push(t ? input.value.charAt(index) : '_');\n            }\n            else {\n                mskd.push(el);\n            }\n        });\n        input.value = mskd.join('');\n        input.selectionStart = input.selectionEnd = startSelection;\n    };\n    input.addEventListener('keydown', keyDownHandler);\n    input.addEventListener('keypress', keyPressHandler);\n    input.addEventListener('input', inputHandler);\n    input.addEventListener('focus', inputHandler);\n}\n\nclass DomElementBuilder {\n    constructor(tag, parent) {\n        if (typeof tag === \"string\") {\n            this.element = document.createElement(tag);\n        }\n        else {\n            this.element = tag;\n        }\n        if (parent && this.element.parentElement !== parent) {\n            parent.appendChild(this.element);\n        }\n    }\n    addChild(tag, childBuilder) {\n        const builder = domel(tag, this.element);\n        if (childBuilder) {\n            childBuilder(builder);\n        }\n        return this;\n    }\n    addChildElement(element) {\n        if (element) {\n            this.element.appendChild(element);\n        }\n        return this;\n    }\n    attr(attrId, attrValue) {\n        this.element.setAttribute(attrId, attrValue);\n        return this;\n    }\n    id(value) {\n        return this.attr(\"id\", value);\n    }\n    focus() {\n        this.element.focus();\n        return this;\n    }\n    title(value) {\n        return this.attr('title', value);\n    }\n    data(dataId, dataValue = null) {\n        if (dataValue === null) {\n            this.element.removeAttribute('data-' + dataId);\n            return this;\n        }\n        else {\n            return this.attr('data-' + dataId, dataValue);\n        }\n    }\n    show() {\n        return this.removeStyle('display');\n    }\n    hide(toHide = true) {\n        return (toHide) ? this.setStyle('display', 'none') : this;\n    }\n    visible(isVisible = true) {\n        return isVisible ? this.setStyle('visibility', 'visible') : this.setStyle('visibility', 'hidden');\n    }\n    isVisible() {\n        return !!(this.element.offsetWidth || this.element.offsetHeight || this.element.getClientRects().length);\n    }\n    addClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.add(fullList[i]);\n        }\n        return this;\n    }\n    removeClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.remove(fullList[i]);\n        }\n        return this;\n    }\n    toggleClass(className, force = undefined) {\n        if (className) {\n            this.element.classList.toggle(className, force);\n        }\n        return this;\n    }\n    on(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.addEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    off(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.removeEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    setStyle(styleId, styleValue) {\n        this.element.style.setProperty(styleId, styleValue);\n        return this;\n    }\n    removeStyle(styleId) {\n        this.element.style.removeProperty(styleId);\n        return this;\n    }\n    text(text) {\n        this.element.innerText = text;\n        return this;\n    }\n    html(html) {\n        this.element.innerHTML = html;\n        return this;\n    }\n    clear() {\n        const oldElem = this.element;\n        this.element = document.createElement(this.element.tagName);\n        oldElem.replaceWith(this.element);\n    }\n    addText(text) {\n        const textEl = document.createTextNode(text);\n        this.element.appendChild(textEl);\n        return this;\n    }\n    addHtml(html) {\n        this.element.innerHTML += html;\n        return this;\n    }\n    toDOM() {\n        return this.element;\n    }\n    appendTo(parent) {\n        if (parent) {\n            parent.appendChild(this.element);\n        }\n        return this;\n    }\n}\nclass DomTextAreaElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"textarea\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    rows(rows) {\n        this.element.rows = rows;\n        return this;\n    }\n    cols(cols) {\n        this.element.cols = cols;\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nclass DomInputElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"input\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    type(value) {\n        this.element.type = value;\n        return this;\n    }\n    size(value) {\n        this.element.size = value;\n        return this;\n    }\n    value(value) {\n        if (value instanceof Date) {\n            this.element.valueAsDate = value;\n        }\n        else if (typeof value === \"number\") {\n            this.element.valueAsNumber = value;\n        }\n        else {\n            this.element.value = value;\n        }\n        return this;\n    }\n    mask(maskPattern) {\n        mask(this.element, maskPattern);\n        return this;\n    }\n}\nclass DomSelectElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"select\", parent);\n        }\n    }\n    addOption(value) {\n        const option = document.createElement('option');\n        if (typeof value === \"string\") {\n            option.value = value;\n            option.innerHTML = value;\n        }\n        else {\n            option.value = value.value;\n            option.innerHTML = value.title || value.value;\n            option.selected = value.selected || false;\n        }\n        this.element.appendChild(option);\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nfunction domel(tag, parent) {\n    if (tag === \"div\" || tag instanceof HTMLDivElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    if (tag === \"span\" || tag instanceof HTMLSpanElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"a\" || tag instanceof HTMLAnchorElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"button\" || tag instanceof HTMLButtonElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"img\" || tag instanceof HTMLImageElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"input\" || tag instanceof HTMLInputElement) {\n        return new DomInputElementBuilder(tag instanceof HTMLInputElement ? tag : null, parent);\n    }\n    else if (tag === \"textarea\" || tag instanceof HTMLTextAreaElement) {\n        return new DomTextAreaElementBuilder(tag instanceof HTMLTextAreaElement ? tag : null, parent);\n    }\n    else if (tag === \"select\" || tag instanceof HTMLSelectElement) {\n        return new DomSelectElementBuilder(tag instanceof HTMLSelectElement ? tag : null, parent);\n    }\n    return new DomElementBuilder(tag, parent);\n}\n\nconst touchEventIsDefined = typeof TouchEvent !== 'undefined';\nvar DropEffect;\n(function (DropEffect) {\n    DropEffect[\"None\"] = \"none\";\n    DropEffect[\"Allow\"] = \"allow\";\n    DropEffect[\"Forbid\"] = \"forbid\";\n})(DropEffect || (DropEffect = {}));\nclass EqDragEvent {\n    constructor(item, dragImage, sourceEvent) {\n        this.dropEffect = DropEffect.Allow;\n        this.pageX = 0;\n        this.pageY = 0;\n        this.item = item;\n        this.dragImage = dragImage;\n        this.data = item.data;\n        this.sourceEvent = sourceEvent;\n        if (sourceEvent && sourceEvent instanceof MouseEvent) {\n            this.pageX = sourceEvent.pageX,\n                this.pageY = sourceEvent.pageY;\n        }\n        if (sourceEvent && touchEventIsDefined && sourceEvent instanceof TouchEvent\n            && sourceEvent.touches[0]) {\n            this.pageX = sourceEvent.touches[0].pageX,\n                this.pageY = sourceEvent.touches[0].pageY;\n        }\n    }\n}\nclass Position {\n    constructor(ev) {\n        if (ev && ev instanceof MouseEvent) {\n            this.x = ev.pageX,\n                this.y = ev.pageY;\n        }\n        if (ev && touchEventIsDefined && ev instanceof TouchEvent && ev.touches[0]) {\n            this.x = ev.touches[0].pageX,\n                this.y = ev.touches[0].pageY;\n        }\n    }\n}\nclass DragManager {\n    constructor() {\n        this.delta = 5;\n        this.draggableItem = null;\n        this.dragImage = null;\n        this.finishedSuccessfully = false;\n        this.mouseDownPosition = null;\n        this.containerDescriptors = [];\n        this.containerDescriptorIndex = -1;\n        this.dropEffect = DropEffect.None;\n        this.classPrefix = 'eqjs-drop';\n        this.DRAG_DISABLED_ATTR = 'drag-disabled';\n    }\n    registerDraggableItem(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in draggle item is null or undefined\");\n        }\n        element.ondragstart = function () {\n            return false;\n        };\n        const detectDragging = (ev) => {\n            if (element.hasAttribute(this.DRAG_DISABLED_ATTR)) {\n                return;\n            }\n            ev.preventDefault();\n            if (ev instanceof MouseEvent) {\n                ev.stopPropagation();\n            }\n            const cursorPosition = new Position(ev);\n            if (Math.abs(cursorPosition.x - this.mouseDownPosition.x) > this.delta\n                || Math.abs(cursorPosition.y - this.mouseDownPosition.y) > this.delta) {\n                startDragging(ev);\n            }\n        };\n        const mouseMoveEventListener = (ev) => {\n            this.mouseMoveDragListener(ev);\n        };\n        const startDragging = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            this.finishedSuccessfully = false;\n            if (descriptor.beforeDragStart)\n                descriptor.beforeDragStart();\n            this.dragImage = domel('div')\n                .setStyle('position', 'absolute')\n                .setStyle('z-index', '65530')\n                .toDOM();\n            document.body.appendChild(this.dragImage);\n            this.dragImage.appendChild(element.cloneNode(true));\n            if (descriptor.renderer) {\n                descriptor.renderer(this.dragImage);\n            }\n            this.dropEffect = DropEffect.None;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n            this.draggableItem = {\n                element: element,\n                scope: descriptor.scope,\n                data: descriptor.data\n            };\n            this.updateDragItemPosition(ev);\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = this.dropEffect;\n            if (descriptor.onDragStart) {\n                descriptor.onDragStart(event);\n            }\n            if (this.dropEffect !== event.dropEffect) {\n                this.dropEffect = event.dropEffect;\n                this.updateImageClass(this.dropEffect);\n            }\n            document.addEventListener('mousemove', mouseMoveEventListener, true);\n            document.addEventListener('touchmove', mouseMoveEventListener, true);\n        };\n        const mouseDownListener = (ev) => {\n            if (touchEventIsDefined && ev instanceof TouchEvent) {\n                ev.preventDefault();\n            }\n            this.mouseDownPosition = new Position(ev);\n            element.addEventListener('mousemove', detectDragging);\n            element.addEventListener('touchmove', detectDragging);\n            document.addEventListener('mouseup', mouseUpListener);\n            document.addEventListener('touchend', mouseUpListener);\n        };\n        element.addEventListener('mousedown', mouseDownListener);\n        element.addEventListener('touchstart', mouseDownListener);\n        const mouseUpListener = (ev) => {\n            this.mouseDownPosition = null;\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            document.removeEventListener('mousemove', mouseMoveEventListener, true);\n            document.removeEventListener('touchmove', mouseMoveEventListener, true);\n            if (this.draggableItem) {\n                endDraggind(ev);\n            }\n        };\n        const endDraggind = (ev) => {\n            try {\n                if (this.containerDescriptorIndex >= 0) {\n                    const dropContDesc = this.containerDescriptors[this.containerDescriptorIndex];\n                    const container = {\n                        element: dropContDesc.element,\n                        scopes: dropContDesc.scopes,\n                        data: dropContDesc.data\n                    };\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    try {\n                        if (container.scopes.indexOf(this.draggableItem.scope) >= 0\n                            && this.dropEffect === DropEffect.Allow) {\n                            this.finishedSuccessfully = true;\n                            if (dropContDesc.onDrop) {\n                                dropContDesc.onDrop(container, event);\n                            }\n                        }\n                    }\n                    finally {\n                        if (dropContDesc.onDragLeave) {\n                            dropContDesc.onDragLeave(container, event);\n                        }\n                    }\n                }\n            }\n            finally {\n                try {\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    event.data.finishedSuccessfully = this.finishedSuccessfully;\n                    if (descriptor.onDragEnd) {\n                        descriptor.onDragEnd(event);\n                    }\n                }\n                finally {\n                    this.draggableItem = null;\n                    if (this.dragImage && this.dragImage.parentElement) {\n                        this.dragImage.parentElement.removeChild(this.dragImage);\n                    }\n                    this.dragImage = null;\n                    this.finishedSuccessfully = false;\n                    document.removeEventListener('mouseup', mouseUpListener);\n                    document.removeEventListener('touchend', mouseUpListener);\n                }\n            }\n        };\n    }\n    registerDropContainer(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in drop container is null or undefined\");\n        }\n        this.containerDescriptors.push(descriptor);\n    }\n    removeDropContainer(descriptorOrSlot) {\n        const descs = this.containerDescriptors\n            .filter(desc => desc === descriptorOrSlot\n            || desc.element == descriptorOrSlot);\n        if (descs) {\n            for (const desc of descs) {\n                utils.removeArrayItem(this.containerDescriptors, desc);\n            }\n        }\n    }\n    mouseMoveDragListener(ev) {\n        if (ev instanceof MouseEvent) {\n            ev.preventDefault();\n        }\n        ev.stopPropagation();\n        this.updateDragItemPosition(ev);\n        if (this.containerDescriptorIndex == -1) {\n            for (let i = 0; i < this.containerDescriptors.length; i++) {\n                const descriptor = this.containerDescriptors[i];\n                if (this.detectDragEnterEvent(descriptor.element, ev)) {\n                    this.containerDescriptorIndex = i;\n                    break;\n                }\n            }\n            if (this.containerDescriptorIndex >= 0) {\n                this.dragEnterEvent(ev);\n            }\n        }\n        else {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            if (this.detectDragLeaveEvent(descriptor.element, ev)) {\n                this.dragLeaveEvent(ev);\n                this.containerDescriptorIndex = -1;\n            }\n        }\n        if (this.containerDescriptorIndex >= 0) {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            const container = {\n                element: descriptor.element,\n                scopes: descriptor.scopes,\n                data: descriptor.data\n            };\n            if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n                const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                event.dropEffect = this.dropEffect;\n                if (descriptor.onDragOver) {\n                    descriptor.onDragOver(container, event);\n                }\n            }\n        }\n    }\n    updateCusror(dropEffect) {\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n            case DropEffect.Forbid:\n                this.setCursorStyle(this.dragImage, 'no-drop');\n                break;\n            default:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n        }\n    }\n    updateImageClass(dropEffect) {\n        this.dragImage.classList.remove(`${this.classPrefix}-allow`);\n        this.dragImage.classList.remove(`${this.classPrefix}-forbid`);\n        this.dragImage.classList.remove(`${this.classPrefix}-none`);\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.dragImage.classList.add(`${this.classPrefix}-allow`);\n                break;\n            case DropEffect.None:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n            case DropEffect.Forbid:\n                this.dragImage.classList.add(`${this.classPrefix}-forbid`);\n                break;\n            default:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n        }\n    }\n    setCursorStyle(element, cursor) {\n        if (element) {\n            element.style.cursor = cursor;\n            for (let i = 0; i < element.children.length; i++) {\n                this.setCursorStyle(element.children[i], cursor);\n            }\n        }\n    }\n    updateDragItemPosition(ev) {\n        if (this.dragImage) {\n            const pos = new Position(ev);\n            this.dragImage.style.top = (pos.y - this.dragImage.offsetHeight / 2) + 'px';\n            this.dragImage.style.left = (pos.x - this.dragImage.offsetWidth / 2) + 'px';\n        }\n    }\n    dragEnterEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.Allow;\n            if (descriptor.onDragEnter) {\n                descriptor.onDragEnter(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n        else {\n            if (this.dropEffect !== DropEffect.Forbid) {\n                this.dropEffect = DropEffect.None;\n                this.updateCusror(this.dropEffect);\n                this.updateImageClass(this.dropEffect);\n            }\n        }\n    }\n    dragLeaveEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.None;\n            if (descriptor.onDragLeave) {\n                descriptor.onDragLeave(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n    }\n    detectDragEnterEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y < containerPos.y || pos.y > containerPos.y + container.offsetHeight) {\n            return false;\n        }\n        if (pos.x < containerPos.x || pos.x > containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n    detectDragLeaveEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y > containerPos.y && pos.y < containerPos.y + container.offsetHeight\n            && pos.x > containerPos.x && pos.x < containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n}\n//global variable\nconst eqDragManager = new DragManager();\n\nvar AutoResizeColumns;\n(function (AutoResizeColumns) {\n    AutoResizeColumns[AutoResizeColumns[\"Always\"] = 0] = \"Always\";\n    AutoResizeColumns[AutoResizeColumns[\"Once\"] = 1] = \"Once\";\n    AutoResizeColumns[AutoResizeColumns[\"Never\"] = 2] = \"Never\";\n})(AutoResizeColumns || (AutoResizeColumns = {}));\n\n//import { CellRendererType } from \"./easy_grid_cell_renderer\";\n//import { GridCellRenderer } from './easy_grid_cell_renderer';\nconst DEFAULT_WIDTH_STRING = 250;\nconst ROW_NUM_WIDTH = 60;\nvar GridColumnAlign;\n(function (GridColumnAlign) {\n    GridColumnAlign[GridColumnAlign[\"NONE\"] = 1] = \"NONE\";\n    GridColumnAlign[GridColumnAlign[\"LEFT\"] = 2] = \"LEFT\";\n    GridColumnAlign[GridColumnAlign[\"CENTER\"] = 3] = \"CENTER\";\n    GridColumnAlign[GridColumnAlign[\"RIGHT\"] = 4] = \"RIGHT\";\n})(GridColumnAlign || (GridColumnAlign = {}));\nfunction MapAlignment(alignment) {\n    switch (alignment) {\n        case ColumnAlignment.Left:\n            return GridColumnAlign.LEFT;\n        case ColumnAlignment.Center:\n            return GridColumnAlign.CENTER;\n        case ColumnAlignment.Right:\n            return GridColumnAlign.RIGHT;\n        default:\n            return GridColumnAlign.NONE;\n    }\n}\nclass GridColumn {\n    constructor(column, grid, isRowNum = false) {\n        this._label = null;\n        this._description = null;\n        //public left: number;\n        this.align = GridColumnAlign.NONE;\n        this.isVisible = true;\n        this.isRowNum = false;\n        this.dataColumn = column;\n        this.grid = grid;\n        const widthOptions = grid.options.columnWidths || {};\n        if (column) {\n            if (column.style.alignment) {\n                this.align = MapAlignment(column.style.alignment);\n            }\n            this.width = (widthOptions && widthOptions[this.type]) ? widthOptions[this.type].default : DEFAULT_WIDTH_STRING;\n            this._description = column.description;\n        }\n        else if (isRowNum) {\n            this.isRowNum = true;\n            this.width = (widthOptions && widthOptions.rowNumColumn) ? widthOptions.rowNumColumn.default : ROW_NUM_WIDTH;\n            this._label = '';\n        }\n    }\n    get label() {\n        return this._label ? this._label : this.isRowNum ? '' : this.dataColumn.label;\n    }\n    ;\n    set label(value) {\n        this._label = this.label;\n    }\n    /** Get column description. */\n    get description() {\n        return this._description;\n    }\n    get type() {\n        return this.dataColumn ? this.dataColumn.type : null;\n    }\n}\nclass GridColumnList {\n    constructor(columnList, grid) {\n        this.items = [];\n        this.grid = grid;\n        this.sync(columnList);\n    }\n    sync(columnList, hasRowNumCol = true) {\n        this.clear();\n        const rowNumCol = new GridColumn(null, this.grid, true);\n        this.add(rowNumCol);\n        if (!hasRowNumCol) {\n            rowNumCol.isVisible = false;\n        }\n        if (columnList) {\n            for (let column of columnList.getItems()) {\n                const col = new GridColumn(column, this.grid);\n                if (this.grid.options.onSyncGridColumn) {\n                    this.grid.options.onSyncGridColumn(col);\n                }\n                this.add(col);\n            }\n        }\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(col) {\n        const index = this.items.length;\n        this.items.push(col);\n        return index;\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.items.length) {\n            this.items[index] = col;\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex)\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n    }\n    get(index) {\n        if (index >= 0 && index < this.items.length) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    //    public getIndex(name: string) : number {\n    //        return this.mapper[name];\n    //    }\n    getItems() {\n        return this.items;\n    }\n    removeAt(index) {\n        this.get(index);\n        this.items.splice(index, 1);\n        //delete this.mapper[col.name];\n    }\n    clear() {\n        this.items = [];\n        //this.mapper = {};\n    }\n}\n\nconst cssPrefix$1 = \"keg\";\nconst DFMT_REGEX = /{0:(.*?)}/g;\nvar CellRendererType;\n(function (CellRendererType) {\n    CellRendererType[CellRendererType[\"STRING\"] = 1] = \"STRING\";\n    CellRendererType[CellRendererType[\"NUMBER\"] = 2] = \"NUMBER\";\n    CellRendererType[CellRendererType[\"DATETIME\"] = 3] = \"DATETIME\";\n    CellRendererType[CellRendererType[\"BOOL\"] = 4] = \"BOOL\";\n})(CellRendererType || (CellRendererType = {}));\nconst StringCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const text = value ? value.toString().replace(/\\n/g, '\\u21B5 ') : '';\n    cellValueElement.innerText = text;\n    cellValueElement.title = text;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-left`);\n    }\n};\nconst NumberCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    let strValue = (value || '').toString();\n    if (typeof value == 'number') {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.numberToStr(value, $1);\n            });\n        }\n        else {\n            strValue = value.toLocaleString();\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst DateTimeCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const isDate = Object.prototype.toString.call(value) === '[object Date]';\n    let strValue = (value || '').toString();\n    if (isDate) {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.dateTimeToStrEx(value, column.type, $1);\n            });\n        }\n        else {\n            const locale = i18n.getCurrentLocale();\n            const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n            switch (column.type) {\n                case DataType.Date:\n                    strValue = value.toLocaleDateString(locale);\n                    break;\n                case DataType.Time:\n                    strValue = value.toLocaleTimeString(locale, timeOptions);\n                    break;\n                case DataType.DateTime:\n                    strValue = `${value.toLocaleDateString(locale)} ${value.toLocaleTimeString(locale, timeOptions)}`;\n                    break;\n            }\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst BoolCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    if (column.dataColumn && column.dataColumn.displayFormat\n        && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n        const strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n            return i18n.booleanToStr(value, $1);\n        });\n        return StringCellRendererDefault(strValue, column, cellValueElement);\n    }\n    else {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-bool`);\n        cellValueElement.classList.add(`${cssPrefix$1}-${value ? 'cell-value-true' : 'cell-value-false'}`);\n    }\n};\nclass GridCellRendererStore {\n    constructor(options) {\n        this.renderers = {};\n        this.defaultRenderers = {};\n        this.registerRenderer('StringDefault', StringCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.STRING, StringCellRendererDefault);\n        this.registerRenderer('NumberDefault', NumberCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.NUMBER, NumberCellRendererDefault);\n        this.registerRenderer('DateTimeDefault', DateTimeCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.DATETIME, DateTimeCellRendererDefault);\n        this.registerRenderer('BoolDefault', BoolCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.BOOL, BoolCellRendererDefault);\n    }\n    getDefaultRenderer(columnType) {\n        const cellType = this.getCellType(columnType);\n        return this.defaultRenderers[CellRendererType[cellType]];\n    }\n    getDefaultRendererByType(rendererType) {\n        return this.defaultRenderers[CellRendererType[rendererType]];\n    }\n    setDefaultRenderer(cellType, renderer) {\n        if (renderer) {\n            this.defaultRenderers[CellRendererType[cellType]] = renderer;\n        }\n    }\n    getRenderer(name) {\n        return this.renderers[name];\n    }\n    registerRenderer(name, renderer) {\n        this.renderers[name] = renderer;\n    }\n    getCellType(dataType) {\n        switch (dataType) {\n            case DataType.Autoinc:\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Currency:\n            case DataType.Float:\n            case DataType.Int32:\n            case DataType.Int64:\n                return CellRendererType.NUMBER;\n            case DataType.Date:\n            case DataType.DateTime:\n            case DataType.Time:\n                return CellRendererType.DATETIME;\n            case DataType.Bool:\n                return CellRendererType.BOOL;\n            default:\n                return CellRendererType.STRING;\n        }\n    }\n}\n\nconst DEFAULT_ROW_HEIGHT = 36;\n/** Represents a grid widget with columns rows, paging, custom rendering and more */\nclass EasyGrid {\n    /** Creates and initializes all internal properties of the grid object */\n    constructor(options) {\n        this.cssPrefix = \"keg\";\n        this.pagination = { page: 1, pageSize: 30, total: 0 };\n        this.paginationOptions = {\n            maxButtonCount: 10,\n            useBootstrap: false //true\n        };\n        this.defaultDataGridOptions = {\n            slot: null,\n            dataTable: null,\n            fixHeightOnFirstRender: false,\n            syncGridColumns: true,\n            useRowNumeration: true,\n            allowDragDrop: false,\n            aggregates: {\n                settings: null,\n                calculator: null\n            },\n            paging: {\n                enabled: true,\n                pageSize: 30,\n                pageSizeItems: [20, 30, 50, 100, 200]\n            },\n            columnWidths: {\n                autoResize: AutoResizeColumns.Always,\n                stringColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                numberColumns: {\n                    min: 60,\n                    default: 120\n                },\n                boolColumns: {\n                    min: 50,\n                    default: 80\n                },\n                dateColumns: {\n                    min: 80,\n                    default: 200\n                },\n                otherColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                rowNumColumn: {\n                    min: 40,\n                    default: 60\n                }\n            },\n            showPlusButton: false,\n            viewportRowsCount: null,\n            showActiveRow: true\n        };\n        this.rowsOnPagePromise = null;\n        this.containerInitialHeight = 0;\n        this.firstRender = true;\n        this.prevRowTotals = null;\n        this.landingIndex = -1;\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-col-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        this._activeRowIndex = -1;\n        if (options && options.paging) {\n            options.paging = utils.assign(this.defaultDataGridOptions.paging, options.paging);\n        }\n        this.options = this.mergeOptions(options);\n        this.processColumnWidthsOptions();\n        if (!this.options.slot)\n            throw Error('\"slot\" parameter is required to initialize EasyDataGrid');\n        if (!this.options.dataTable)\n            throw Error('\"dataTable\" parameter is required to initialize EasyDataGrid');\n        this.dataTable = options.dataTable;\n        this.eventEmitter = new EventEmitter(this);\n        this.cellRendererStore = new GridCellRendererStore(options);\n        this.columns = new GridColumnList(this.dataTable.columns, this);\n        this.setSlot(this.options.slot);\n        this.init(this.options);\n    }\n    mergeOptions(options) {\n        const colWidthOptions = utils.assignDeep({}, this.defaultDataGridOptions.columnWidths, options.columnWidths);\n        const pagingOptions = utils.assignDeep({}, this.defaultDataGridOptions.paging, options.paging);\n        const result = utils.assign({}, this.defaultDataGridOptions, options);\n        result.columnWidths = colWidthOptions;\n        result.paging = pagingOptions;\n        return result;\n    }\n    processColumnWidthsOptions() {\n        const widthOptions = this.options.columnWidths;\n        if (!widthOptions)\n            return;\n        //string columns\n        utils.getStringDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.stringColumns), widthOptions[dataType]);\n        });\n        //numeric columns\n        utils.getNumericDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.numberColumns), widthOptions[dataType]);\n        });\n        //bool columns\n        widthOptions[DataType.Bool] = Object.assign(Object.assign({}, widthOptions.boolColumns), widthOptions[DataType.Bool]);\n        //date columns\n        utils.getDateDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.dateColumns), widthOptions[dataType]);\n        });\n        //other columns\n        const knownTypes = [\n            ...utils.getStringDataTypes(),\n            ...utils.getNumericDataTypes(),\n            ...utils.getDateDataTypes(),\n            DataType.Bool\n        ];\n        utils.getAllDataTypes().forEach(dataType => {\n            if (!(dataType in knownTypes)) {\n                widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.otherColumns), widthOptions[dataType]);\n            }\n        });\n        widthOptions[DataType.Unknown] = widthOptions.otherColumns;\n    }\n    setSlot(slot) {\n        if (typeof slot === 'string') {\n            if (slot.length) {\n                if (slot[0] === '#') {\n                    this.slot = document.getElementById(slot.substring(1));\n                }\n                else if (slot[0] === '.') {\n                    const result = document.getElementsByClassName(slot.substring(1));\n                    if (result.length)\n                        this.slot = result[0];\n                }\n                else {\n                    throw Error('Unrecognized slot parameter ' +\n                        '(Must be id, class or HTMLElement): ' + slot);\n                }\n            }\n        }\n        else {\n            this.slot = slot;\n        }\n    }\n    /** Initializes grid widget according to the options passed in the parameter */\n    init(options) {\n        if (options.onInit) {\n            this.addEventListener('init', options.onInit);\n        }\n        if (options.onRowClick) {\n            this.addEventListener('rowClick', options.onRowClick);\n        }\n        if (options.onRowDbClick) {\n            this.addEventListener('rowDbClick', options.onRowDbClick);\n        }\n        if (options.onPlusButtonClick) {\n            this.addEventListener('plusButtonClick', options.onPlusButtonClick);\n        }\n        if (options.onColumnChanged) {\n            this.addEventListener('columnChanged', options.onColumnChanged);\n        }\n        if (options.onColumnDeleted) {\n            this.addEventListener('columnDeleted', options.onColumnDeleted);\n        }\n        if (options.onColumnMoved) {\n            this.addEventListener('columnMoved', options.onColumnMoved);\n        }\n        if (options.onPageChanged) {\n            this.addEventListener('pageChanged', options.onPageChanged);\n        }\n        if (options.onActiveRowChanged) {\n            this.addEventListener('activeRowChanged', options.onActiveRowChanged);\n        }\n        this.addEventListener('pageChanged', ev => this.activeRowIndex = -1);\n        utils.assignDeep(this.paginationOptions, options.pagination);\n        this.pagination.pageSize = this.options.paging.pageSize\n            || this.pagination.pageSize;\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"gridColumnMove\"],\n                onDragEnter: (_, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (_, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (_, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLandingSlot();\n                },\n                onDrop: (_, ev) => {\n                    this.dataTable.columns.move(ev.data.column, this.landingIndex);\n                    this.refresh();\n                    this.fireEvent({\n                        type: 'columnMoved',\n                        columnId: ev.data.column.id,\n                        newIndex: this.landingIndex\n                    });\n                }\n            });\n        }\n        this.refresh();\n        this.fireEvent('init');\n    }\n    /** Fires a grid event. You can pass either an event type\n     * (like 'init', 'rowClick', 'pageChanged', etc )\n     * or a ready-to-use grid event object\n     * */\n    fireEvent(event) {\n        if (typeof event === \"string\") {\n            this.eventEmitter.fire(event);\n        }\n        else {\n            this.eventEmitter.fire(event.type, event);\n        }\n    }\n    /** Allows to set the data (represented by a EasyDataTable object)\n     *  or to replace the existing one associated with the grid */\n    setData(data) {\n        this.dataTable = data;\n        this.clear();\n        this.refresh();\n    }\n    /** Returns the EasyDataTable object associated with the grid via `setData()` call */\n    getData() {\n        return this.dataTable;\n    }\n    /** Gets the list of grid columns */\n    getColumns() {\n        return this.columns;\n    }\n    /** This function is called when the grid is destroyed */\n    destroy() {\n        this.slot.innerHTML = \"\";\n    }\n    /** Clears the current DOM object and re-renders everything from the scratch */\n    refresh() {\n        this.clearDOM();\n        this.render();\n    }\n    clearDOM() {\n        this.slot.innerHTML = '';\n    }\n    /** Clears all DOM object in the grid and return it to its initial state */\n    clear() {\n        this.pagination.page = 1;\n        this.clearDOM();\n    }\n    /** Renders the grid */\n    render() {\n        if (!this.hasData() && !this.options.showPlusButton)\n            return;\n        this.containerInitialHeight = this.slot.clientHeight;\n        this.rootDiv = document.createElement('div');\n        this.rootDiv.style.width = '100%';\n        this.rootDiv.classList.add(`${this.cssPrefix}-root`);\n        this.columns.sync(this.dataTable.columns, this.options.useRowNumeration);\n        this.renderHeader();\n        this.rootDiv.appendChild(this.headerDiv);\n        this.renderBody();\n        this.rootDiv.appendChild(this.bodyDiv);\n        this.renderFooter();\n        this.rootDiv.appendChild(this.footerDiv);\n        let gridContainer = document.createElement('div');\n        gridContainer.classList.add(`${this.cssPrefix}-container`);\n        gridContainer.appendChild(this.rootDiv);\n        this.slot.appendChild(gridContainer);\n        const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise\n                .then(() => this.updateHeight())\n                .then(() => {\n                this.firstRender = false;\n                this.rowsOnPagePromise = null;\n            });\n        }\n        else {\n            setTimeout(() => {\n                this.updateHeight()\n                    .then(() => {\n                    this.firstRender = false;\n                    if (needAutoResize) {\n                        this.resizeColumns();\n                    }\n                });\n            }, 100);\n        }\n    }\n    updateHeight() {\n        return new Promise((resolve) => {\n            if (this.options.viewportRowsCount) {\n                const firstRow = this.bodyCellContainerDiv.firstElementChild;\n                const rowHeight = firstRow ? firstRow.offsetHeight : DEFAULT_ROW_HEIGHT;\n                const rowCount = this.options.viewportRowsCount; // || DEFAULT_ROW_COUNT;\n                let viewportHeight = rowHeight * rowCount;\n                domel(this.bodyViewportDiv)\n                    .setStyle('height', `${viewportHeight}px`);\n                setTimeout(() => {\n                    const sbHeight = this.bodyViewportDiv.offsetHeight - this.bodyViewportDiv.clientHeight;\n                    viewportHeight = viewportHeight + sbHeight;\n                    domel(this.bodyViewportDiv)\n                        .setStyle('height', `${viewportHeight}px`);\n                    resolve();\n                }, 100);\n                return;\n            }\n            else if (this.containerInitialHeight > 0) ;\n            resolve();\n        })\n            .then(() => {\n            if (this.options.fixHeightOnFirstRender && this.firstRender) {\n                this.slot.style.height = `${this.slot.offsetHeight}px`;\n            }\n        });\n    }\n    getContainerWidth() {\n        return this.columns.getItems()\n            .filter(col => col.isVisible)\n            .map(col => col.width)\n            .reduce((sum, current) => { return sum + current; });\n    }\n    renderHeader() {\n        this.headerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-header`)\n            .toDOM();\n        this.headerViewportDiv = domel('div', this.headerDiv)\n            .addClass(`${this.cssPrefix}-header-viewport`)\n            .toDOM();\n        this.headerCellContainerDiv = domel('div', this.headerViewportDiv)\n            .addClass(`${this.cssPrefix}-header-cell-container`)\n            .toDOM();\n        this.headerRowDiv = domel('div', this.headerCellContainerDiv)\n            .addClass(`${this.cssPrefix}-header-row`)\n            .toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let hd = this.renderColumnHeader(column, index);\n            this.headerRowDiv.appendChild(hd);\n            if (column.isRowNum) {\n                domel(hd)\n                    .addChildElement(this.renderHeaderButtons());\n            }\n        });\n        const containerWidth = this.getContainerWidth();\n        domel(this.headerCellContainerDiv)\n            .setStyle('width', `${containerWidth}px`);\n    }\n    hasData() {\n        return this.dataTable.columns.count > 0;\n    }\n    renderColumnHeader(column, index) {\n        let colBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-header-cell`)\n            .data('col-idx', `${index}`)\n            .setStyle('width', `${column.width}px`);\n        if (column.dataColumn) {\n            colBuilder\n                .data('col-id', `${column.dataColumn.id}`);\n        }\n        let colDiv = colBuilder.toDOM();\n        domel('div', colDiv)\n            .addClass(`${this.cssPrefix}-header-cell-resize`);\n        if (!column.isRowNum) {\n            domel('div', colDiv)\n                .addClass(`${this.cssPrefix}-header-cell-label`)\n                .text(column.label);\n        }\n        if (column.description) {\n            domel('div', colDiv)\n                .addClass('question-mark')\n                .title(column.description);\n        }\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: colDiv,\n                scope: \"gridColumnMove\",\n                data: { column: column },\n                renderer: (dragImage) => {\n                    dragImage.innerHTML = '';\n                    const attrLabel = document.createElement('div');\n                    attrLabel.innerText = column.label;\n                    dragImage.classList.add(`${this.cssPrefix}-sortable-helper`);\n                    dragImage.appendChild(attrLabel);\n                },\n                onDragStart: (ev) => {\n                    ev.dropEffect = DropEffect.Allow;\n                }\n            });\n        }\n        return colDiv;\n    }\n    renderBody() {\n        this.bodyDiv = domel('div')\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n        this.bodyViewportDiv = domel('div', this.bodyDiv)\n            .addClass(`${this.cssPrefix}-body-viewport`)\n            .attr('tabIndex', '0')\n            .toDOM();\n        this.bodyCellContainerDiv = domel('div', this.bodyViewportDiv)\n            .addClass(`${this.cssPrefix}-cell-container`)\n            .toDOM();\n        const showAggrs = this.canShowAggregates();\n        if (this.dataTable) {\n            this.showProgress();\n            this.rowsOnPagePromise = this.getRowsToRender()\n                .then((rows) => {\n                this.pagination.total = this.dataTable.getTotal();\n                this.hideProgress();\n                //prevent double rendering (bad solution, we have to figure out how to avoid this behavior properly)\n                this.bodyCellContainerDiv.innerHTML = '';\n                this.prevRowTotals = null;\n                let rowsToRender = 0;\n                if (rows.length) {\n                    const groups = showAggrs\n                        ? this.options.aggregates.settings.getGroups()\n                        : [];\n                    rowsToRender = (rows.length < this.pagination.pageSize)\n                        ? rows.length\n                        : this.pagination.pageSize;\n                    rows.forEach((row, index) => {\n                        if (showAggrs)\n                            this.updateTotalsState(groups, row);\n                        //we don't actually render the last row\n                        if (index < rowsToRender) {\n                            const tr = this.renderRow(row, index);\n                            this.bodyCellContainerDiv.appendChild(tr);\n                        }\n                    });\n                    const showGrandTotalsOnEachPage = this.options.aggregates && this.options.aggregates.showGrandTotalsOnEachPage;\n                    if (showAggrs && (this.isLastPage() || showGrandTotalsOnEachPage)) {\n                        const row = new DataRow(this.dataTable.columns, new Array(this.dataTable.columns.count));\n                        this.updateTotalsState(groups, row, true);\n                    }\n                }\n                const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n                if (needAutoResize) {\n                    this.resizeColumns();\n                }\n                else {\n                    const containerWidth = this.getContainerWidth();\n                    domel(this.bodyCellContainerDiv)\n                        .setStyle('width', `${containerWidth}px`);\n                }\n                return rowsToRender;\n            })\n                .catch(error => { console.error(error); return 0; });\n        }\n        this.bodyViewportDiv.addEventListener('scroll', ev => {\n            domel(this.headerViewportDiv)\n                .setStyle('margin-left', `-${this.bodyViewportDiv.scrollLeft}px`);\n        });\n        this.bodyViewportDiv.addEventListener('keydown', this.onViewportKeydown.bind(this));\n    }\n    isLastPage() {\n        if (this.dataTable.elasticChunks) {\n            return this.dataTable.totalIsKnown()\n                && (this.pagination.page * this.pagination.pageSize) >= this.pagination.total;\n        }\n        return this.pagination.page * this.pagination.pageSize >= this.pagination.total;\n    }\n    canShowAggregates() {\n        if (!this.options || !this.options.aggregates || !this.options.aggregates.settings)\n            return false;\n        const aggrSettings = this.options.aggregates.settings;\n        const result = (aggrSettings.hasAggregates() || aggrSettings.hasRecordCount())\n            && (aggrSettings.hasGroups() || aggrSettings.hasGrandTotals());\n        return result;\n    }\n    updateTotalsState(groups, newRow, isLast = false) {\n        const aggrSettings = this.options.aggregates.settings;\n        if (this.prevRowTotals && aggrSettings.hasGroups()) {\n            let changeLevel = -1;\n            for (let level = 1; level <= groups.length; level++) {\n                const group = groups[level - 1];\n                for (const col of group.columns) {\n                    if (!aggrSettings.compareValues(this.prevRowTotals.getValue(col), newRow.getValue(col))) {\n                        changeLevel = level;\n                        break;\n                    }\n                }\n                if (changeLevel !== -1)\n                    break;\n            }\n            if (changeLevel !== -1) {\n                for (let level = groups.length; level >= changeLevel; level--) {\n                    const row = new DataRow(this.dataTable.columns, this.prevRowTotals.toArray());\n                    const tr = this.renderTotalsRow(level, row);\n                    this.bodyCellContainerDiv.appendChild(tr);\n                }\n            }\n        }\n        if (isLast && aggrSettings.hasGrandTotals() && aggrSettings.hasAggregates()) {\n            const tr = this.renderTotalsRow(0, newRow);\n            this.bodyCellContainerDiv.appendChild(tr);\n        }\n        this.prevRowTotals = newRow;\n    }\n    applyGroupColumnTemplate(template, value, count) {\n        let result = template.replace(/{{\\s*GroupValue\\s*}}/g, value ? `${value}` : '-');\n        result = result.replace(/{{\\s*GroupCount\\s*}}/g, count ? `${count}` : '-');\n        return result;\n    }\n    renderTotalsRow(level, row) {\n        const aggrSettings = this.options.aggregates.settings;\n        const group = (level > 0)\n            ? aggrSettings.getGroups()[level - 1]\n            : { columns: [], aggregates: aggrSettings.getAggregates() };\n        const rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-totals`)\n            .addClass(`${this.cssPrefix}-totals-lv${level}`)\n            .data('totals-level', `${level}`)\n            .attr('tabindex', '-1');\n        const rowElement = rowBuilder.toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let val = '';\n            const colIndex = !column.isRowNum\n                ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                : -1;\n            if (!column.isRowNum && column.dataColumn) {\n                if (group.columns.indexOf(column.dataColumn.id) >= 0) {\n                    val = row.getValue(colIndex);\n                }\n            }\n            if (colIndex == this.dataTable.columns.count - 1) {\n                val = '.  .  .  .  .  .';\n            }\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        const aggrContainer = this.options.aggregates.calculator.getAggrContainer();\n        const aggrCols = aggrSettings.getAggregates().map(c => c.colId);\n        const key = aggrSettings.buildGroupKey(group, row);\n        aggrContainer.getAggregateData(level, key)\n            .then((values) => {\n            for (const aggrColId of aggrCols) {\n                row.setValue(aggrColId, values[aggrColId]);\n            }\n            rowElement.innerHTML = '';\n            this.columns.getItems().forEach((column, index) => {\n                if (!column.isVisible) {\n                    return;\n                }\n                let val = '';\n                const colIndex = !column.isRowNum\n                    ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                    : -1;\n                if (!column.isRowNum) {\n                    let isLastGroupColumn = false;\n                    if (column.dataColumn) {\n                        const groupColIndex = group.columns.indexOf(column.dataColumn.id);\n                        const aggrColIndex = aggrCols.indexOf(column.dataColumn.id);\n                        if (level > 0) {\n                            isLastGroupColumn = groupColIndex == group.columns.length - 1;\n                        }\n                        else {\n                            //if it's a grand total row consider first column as the last group column\n                            isLastGroupColumn = colIndex == 0;\n                        }\n                        if (groupColIndex >= 0 || aggrColIndex >= 0) {\n                            val = row.getValue(colIndex);\n                        }\n                    }\n                    let groupFooterTemplate = '';\n                    if (level > 0) {\n                        groupFooterTemplate = column.dataColumn.groupFooterColumnTemplate;\n                        //set the default template for the last grouping column\n                        if (!groupFooterTemplate && aggrSettings.hasRecordCount() && isLastGroupColumn) {\n                            groupFooterTemplate = '{{GroupValue}} ({{GroupCount}})';\n                        }\n                    }\n                    if (groupFooterTemplate) {\n                        const cellDiv = this.renderCell(column, index, val, rowElement);\n                        const innerCell = cellDiv.firstChild;\n                        val = innerCell.innerHTML;\n                        val = this.applyGroupColumnTemplate(groupFooterTemplate, val, values[aggrSettings.COUNT_FIELD_NAME]);\n                    }\n                }\n                const cellDiv = this.renderCell(column, index, val, rowElement);\n                rowElement.appendChild(cellDiv);\n            });\n        })\n            .catch((error) => console.error(error));\n        return rowElement;\n    }\n    onViewportKeydown(ev) {\n        if (this.options.showActiveRow) {\n            const rowCount = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row`).length;\n            let newValue;\n            switch (ev.key) {\n                case 'ArrowLeft':\n                    break;\n                case 'ArrowRight':\n                    break;\n                case 'ArrowUp':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? rowCount - 1 : this.activeRowIndex - 1;\n                    this.activeRowIndex = newValue >= 0 ? newValue : 0;\n                    break;\n                case 'ArrowDown':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? 0 : this.activeRowIndex + 1;\n                    this.activeRowIndex = newValue < rowCount ? newValue : rowCount - 1;\n                    break;\n            }\n        }\n    }\n    ensureRowVisibility(rowOrIndex) {\n        const row = typeof rowOrIndex === 'number'\n            ? this.getDataRow(rowOrIndex)\n            : rowOrIndex;\n        if (row) {\n            let rowRect = row.getBoundingClientRect();\n            const viewportRect = this.bodyViewportDiv.getBoundingClientRect();\n            const rowTop = rowRect.top - viewportRect.top;\n            const rowBottom = rowRect.bottom - viewportRect.top;\n            const viewportHeight = this.bodyViewportDiv.clientHeight;\n            const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n            if (rowTop > 0 &&\n                rowBottom <= viewportHeight &&\n                rowRect.top > 0 &&\n                rowRect.bottom < windowHeight) {\n                return;\n            }\n            if (rowTop < 0) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowTop;\n            }\n            else if (rowBottom > viewportHeight) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowBottom - viewportHeight;\n            }\n            rowRect = row.getBoundingClientRect();\n            if (rowRect.top < 0) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.top;\n            }\n            else if (rowRect.bottom > windowHeight) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.bottom - windowHeight;\n            }\n        }\n    }\n    /** Returns a promise with the list of the rows to render on one page.\n     * The list contains pageSize+1 row to make it possible\n     * to render the totals row (if it appears to be on the edge between pages)\n     */\n    getRowsToRender() {\n        if (this.options.paging.enabled === false) {\n            return Promise.resolve(this.dataTable.getCachedRows());\n        }\n        return this.dataTable.getRows({\n            offset: (this.pagination.page - 1) * this.pagination.pageSize,\n            limit: this.pagination.pageSize + 1\n        })\n            .catch(error => {\n            console.error(error);\n            return [];\n        });\n    }\n    renderFooter() {\n        this.footerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-footer`)\n            .toDOM();\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise.then(count => {\n                this.footerDiv.innerHTML = '';\n                this.footerPaginateDiv = this.renderPageNavigator();\n                this.footerDiv.appendChild(this.footerPaginateDiv);\n                const pageInfoBlock = this.renderPageInfoBlock(count);\n                this.footerDiv.appendChild(pageInfoBlock);\n            });\n        }\n    }\n    renderPageInfoBlock(count) {\n        const pageInfoDiv = domel('div')\n            .addClass(`${this.cssPrefix}-page-info`)\n            .toDOM();\n        const rowCount = this.dataTable.getTotal();\n        if (rowCount > 0) {\n            const fistPageRecordNum = count\n                ? (this.pagination.page - 1) * this.pagination.pageSize + 1\n                : 0;\n            const lastPageRecordNum = count\n                ? fistPageRecordNum + count - 1\n                : 0;\n            let totalStr = this.dataTable.getTotal().toString();\n            if (this.dataTable.elasticChunks) {\n                const count = this.dataTable.getCachedCount();\n                const total = this.dataTable.getTotal();\n                if (count !== total)\n                    totalStr = '?';\n            }\n            pageInfoDiv.innerHTML = i18n.getText('GridPageInfo')\n                .replace('{FirstPageRecordNum}', `<span>${fistPageRecordNum.toString()}</span>`)\n                .replace('{LastPageRecordNum}', `<span>${lastPageRecordNum.toString()}</span>`)\n                .replace('{Total}', `<span>${totalStr}</span>`);\n        }\n        return pageInfoDiv;\n    }\n    showProgress() {\n    }\n    hideProgress() {\n    }\n    getLocalIndexByGlobal(index) {\n        if (this.pagination) {\n            return index % this.pagination.pageSize;\n        }\n        else {\n            return index;\n        }\n    }\n    getGlobalIndexByLocal(index) {\n        if (this.pagination) {\n            return (this.pagination.page - 1) * this.pagination.pageSize + index;\n        }\n        else {\n            return index;\n        }\n    }\n    renderRow(row, index) {\n        let indexGlobal = this.getGlobalIndexByLocal(index);\n        let rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-${index % 2 == 1 ? 'odd' : 'even'}`)\n            .data('row-idx', `${indexGlobal}`)\n            .attr('tabindex', '-1')\n            .on('click', (ev) => {\n            this.activeRowIndex = index;\n            this.fireEvent({\n                type: 'rowClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        })\n            .on('dblclick', (ev) => {\n            this.fireEvent({\n                type: 'rowDbClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        });\n        if (index == 0) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-first`);\n        }\n        let rowElement = rowBuilder.toDOM();\n        if (this.options.showActiveRow && index == this.activeRowIndex) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-active`);\n        }\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            const colindex = column.isRowNum ? -1 : this.dataTable.columns.getIndex(column.dataColumn.id);\n            let val = column.isRowNum ? indexGlobal + 1 : row.getValue(colindex);\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        return rowElement;\n    }\n    renderCell(column, colIndex, value, rowElement) {\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-cell`)\n            .data('col-idx', `${colIndex}`)\n            .attr('tabindex', '-1')\n            .setStyle('width', `${column.width}px`);\n        if (column.align == GridColumnAlign.LEFT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-left`);\n        }\n        else if (column.align == GridColumnAlign.RIGHT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-right`);\n        }\n        else if (column.align == GridColumnAlign.CENTER) {\n            builder.addClass(`${this.cssPrefix}-cell-align-center`);\n        }\n        const cellElement = builder.toDOM();\n        const valueCell = cellElement.appendChild(domel('div')\n            .addClass(`${this.cssPrefix}-cell-value`)\n            .toDOM());\n        const cellRenderer = this.getCellRenderer(column);\n        if (cellRenderer) {\n            cellRenderer(value, column, valueCell, rowElement);\n        }\n        return cellElement;\n    }\n    getCellRenderer(column) {\n        let cellRenderer;\n        if (column.isRowNum) {\n            cellRenderer = this.cellRendererStore.getDefaultRendererByType(CellRendererType.NUMBER);\n        }\n        else {\n            cellRenderer = this.cellRendererStore.getDefaultRenderer(column.type);\n        }\n        if (this.options && this.options.onGetCellRenderer) {\n            cellRenderer = this.options.onGetCellRenderer(column, cellRenderer) || cellRenderer;\n        }\n        return cellRenderer;\n    }\n    /** Sets current grid pages (if paging is used) */\n    setPage(page) {\n        this.pagination.page = page;\n        this.fireEvent({ type: \"pageChanged\", page: page });\n        this.refresh();\n        this.bodyViewportDiv.focus();\n    }\n    renderPageNavigator() {\n        let paginateDiv = document.createElement('div');\n        paginateDiv.className = `${this.cssPrefix}-pagination-wrapper`;\n        const rowCount = this.dataTable.getTotal();\n        if (this.options.paging && this.options.paging.enabled && rowCount > 0) {\n            const prefix = this.paginationOptions.useBootstrap ? '' : `${this.cssPrefix}-`;\n            const buttonClickHandler = (ev) => {\n                const element = ev.target;\n                if (element.hasAttribute('data-page')) {\n                    const page = parseInt(element.getAttribute('data-page'));\n                    this.setPage(page);\n                }\n            };\n            const renderPageCell = (pageIndex, content, disabled, extreme, active) => {\n                const li = document.createElement('li');\n                li.className = `${prefix}page-item`;\n                if (!extreme) {\n                    if (active) {\n                        li.className += ' active';\n                    }\n                    const a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.innerHTML = content || pageIndex.toString();\n                    a.setAttribute(\"data-page\", `${pageIndex}`);\n                    a.className = `${prefix}page-link`;\n                    a.addEventListener(\"click\", buttonClickHandler);\n                    li.appendChild(a);\n                    return li;\n                }\n                let a = document.createElement('span');\n                a.setAttribute('aria-hidden', 'true');\n                a.className = `${prefix}page-link`;\n                if (disabled) {\n                    li.className += ' disabled';\n                }\n                else {\n                    if (this.paginationOptions.useBootstrap) {\n                        a = document.createElement('a');\n                        a.setAttribute('href', 'javascript:void(0)');\n                        a.setAttribute(\"data-page\", `${pageIndex}`);\n                    }\n                    else {\n                        let newA = document.createElement('a');\n                        newA.setAttribute('href', 'javascript:void(0)');\n                        newA.setAttribute('data-page', `${pageIndex}`);\n                        a = newA;\n                    }\n                    a.className = `${prefix}page-link`;\n                    a.addEventListener(\"click\", buttonClickHandler);\n                }\n                a.innerHTML = content;\n                li.appendChild(a);\n                return li;\n            };\n            if (this.dataTable.elasticChunks) {\n                const pageIndex = this.pagination.page || 1;\n                let ul = document.createElement('ul');\n                ul.className = `${prefix}pagination`;\n                let cell = renderPageCell(pageIndex - 1, '&laquo;', pageIndex == 1, true, false);\n                ul.appendChild(cell);\n                cell = renderPageCell(pageIndex + 1, '&raquo;', this.isLastPage(), true, false);\n                ul.appendChild(cell);\n                paginateDiv.appendChild(ul);\n            }\n            else {\n                if (this.pagination.total > this.pagination.pageSize) {\n                    const pageIndex = this.pagination.page || 1;\n                    const pageCount = Math.ceil(this.pagination.total / this.pagination.pageSize) || 1;\n                    const maxButtonCount = this.paginationOptions.maxButtonCount || 10;\n                    const zeroBasedIndex = pageIndex - 1;\n                    let firstPageIndex = zeroBasedIndex - (zeroBasedIndex % maxButtonCount) + 1;\n                    let lastPageIndex = firstPageIndex + maxButtonCount - 1;\n                    if (lastPageIndex > pageCount) {\n                        lastPageIndex = pageCount;\n                    }\n                    let ul = document.createElement('ul');\n                    ul.className = `${prefix}pagination`;\n                    let cell = renderPageCell(firstPageIndex - 1, '&laquo;', firstPageIndex == 1, true, false);\n                    ul.appendChild(cell);\n                    for (let i = firstPageIndex; i <= lastPageIndex; i++) {\n                        cell = renderPageCell(i, i.toString(), false, false, i == pageIndex);\n                        ul.appendChild(cell);\n                    }\n                    cell = renderPageCell(lastPageIndex + 1, '&raquo;', lastPageIndex == pageCount, true, false);\n                    ul.appendChild(cell);\n                    paginateDiv.appendChild(ul);\n                }\n            }\n            if (this.options.paging.allowPageSizeChange) {\n                const selectChangeHandler = (ev) => {\n                    const newValue = parseInt(ev.target.value);\n                    this.pagination.pageSize = newValue;\n                    this.pagination.page = 1;\n                    this.refresh();\n                };\n                const pageSizes = document.createElement('div');\n                pageSizes.className = `${this.cssPrefix}-page-sizes`;\n                const selectSize = document.createElement('div');\n                selectSize.className = `kfrm-select ${this.cssPrefix}-page-sizes-select`;\n                pageSizes.appendChild(selectSize);\n                const sel = document.createElement('select');\n                const selOptions = this.options.paging.pageSizeItems || [];\n                const selSet = new Set(selOptions);\n                selSet.add(this.options.paging.pageSize || 20);\n                Array.from(selSet).forEach(el => {\n                    const option = document.createElement(\"option\");\n                    option.value = el.toString();\n                    option.text = el.toString();\n                    sel.appendChild(option);\n                });\n                sel.value = (this.pagination.pageSize || 20).toString();\n                selectSize.appendChild(sel);\n                sel.addEventListener('change', selectChangeHandler);\n                const labelDiv = document.createElement('div');\n                labelDiv.className = `${this.cssPrefix}-page-sizes-label`;\n                pageSizes.appendChild(labelDiv);\n                const label = document.createElement('span');\n                label.innerText = i18n.getText('GridItemsPerPage');\n                labelDiv.appendChild(label);\n                paginateDiv.appendChild(pageSizes);\n            }\n        }\n        return paginateDiv;\n    }\n    addEventListener(eventType, handler) {\n        return this.eventEmitter.subscribe(eventType, event => handler(event.data));\n    }\n    removeEventListener(eventType, handlerId) {\n        this.eventEmitter.unsubscribe(eventType, handlerId);\n    }\n    renderHeaderButtons() {\n        if (this.options.showPlusButton) {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-header-btn-plus`)\n                .title(this.options.plusButtonTitle || 'Add')\n                .addChild('a', builder => builder\n                .attr('href', 'javascript:void(0)')\n                .on('click', (e) => {\n                e.preventDefault();\n                this.fireEvent({\n                    type: 'plusButtonClick',\n                    sourceEvent: e\n                });\n            }))\n                .toDOM();\n        }\n        return domel('span')\n            .addText('#')\n            .toDOM();\n    }\n    showLandingSlot(pageX, pageY) {\n        const colElems = this.headerRowDiv.querySelectorAll(`[class*=${this.cssPrefix}-table-col]`);\n        const cols = [];\n        for (let i = 1; i < colElems.length; i++) {\n            const rowElem = colElems[i];\n            if (rowElem.style.display === 'none')\n                continue;\n            cols.push(rowElem);\n        }\n        if (cols.length === 0) {\n            this.landingIndex = 0;\n            this.headerRowDiv.appendChild(this.landingSlot);\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let col of cols) {\n            const colPos = getElementAbsolutePos(col);\n            const width = col.offsetWidth;\n            if (pageX > colPos.x && pageX < colPos.x + width) {\n                // -1 as we don't need to count add button here\n                newLandingIndex = parseInt(col.getAttribute('data-col-idx')) - 1;\n            }\n        }\n        if (newLandingIndex != this.landingIndex) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex < cols.length) {\n                this.headerRowDiv.insertBefore(this.landingSlot, cols[this.landingIndex]);\n            }\n            else {\n                this.headerRowDiv.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        setTimeout(() => {\n            if (this.landingSlot.parentElement) {\n                this.landingSlot.parentElement.removeChild(this.landingSlot);\n            }\n        }, 10);\n    }\n    get activeRowIndex() {\n        return this._activeRowIndex;\n    }\n    set activeRowIndex(value) {\n        if (value !== this._activeRowIndex) {\n            const oldValue = this._activeRowIndex;\n            this._activeRowIndex = value;\n            this.updateActiveRow();\n            this.fireEvent({\n                type: 'activeRowChanged',\n                oldValue,\n                newValue: this.activeRowIndex,\n                rowIndex: this.getGlobalIndexByLocal(this.activeRowIndex)\n            });\n        }\n    }\n    updateActiveRow() {\n        if (this.options.showActiveRow) {\n            const rows = this.bodyCellContainerDiv.querySelectorAll(`[class*=${this.cssPrefix}-row-active]`);\n            rows.forEach(el => { el.classList.remove(`${this.cssPrefix}-row-active`); });\n            const activeRow = this.getActiveRow();\n            if (activeRow) {\n                activeRow.classList.add(`${this.cssPrefix}-row-active`);\n                this.ensureRowVisibility(this.activeRowIndex);\n            }\n        }\n    }\n    getActiveRow() {\n        return this.getDataRow(this.activeRowIndex);\n    }\n    getDataRow(index) {\n        const rows = Array.from(this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row:not(.${this.cssPrefix}-row-totals)`));\n        if (index >= 0 && index < rows.length)\n            return rows[index];\n        return null;\n    }\n    /** Makes the grid focused for keyboard events */\n    focus() {\n        this.bodyViewportDiv.focus();\n    }\n    /** Resizes columns according to the data they represent */\n    resizeColumns() {\n        if (this.options.columnWidths.autoResize === AutoResizeColumns.Never)\n            return;\n        const containerWidth = this.bodyCellContainerDiv.style.width;\n        this.bodyCellContainerDiv.style.visibility = 'hidden';\n        this.bodyCellContainerDiv.style.width = '1px';\n        //this.headerRowDiv.style.visibility = 'hidden';\n        this.headerRowDiv.style.width = '1px';\n        let sumWidth = 0;\n        const columns = this.columns.getItems();\n        const headerCells = this.headerCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-header-cell`);\n        let headerIdx = 0;\n        for (let idx = 0; idx < this.columns.count; idx++) {\n            const column = columns[idx];\n            if (!column.isVisible)\n                continue;\n            const calculatedWidth = this.options.columnWidths.autoResize !== AutoResizeColumns.Always && column.dataColumn\n                ? column.dataColumn.calculatedWidth\n                : 0;\n            const cellValues = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-cell[data-col-idx=\"${idx}\"] > .${this.cssPrefix}-cell-value`);\n            let maxWidth = 0;\n            if (calculatedWidth > 0) {\n                sumWidth += calculatedWidth;\n                column.width = calculatedWidth;\n                cellValues.forEach(value => {\n                    value.parentElement.style.width = `${calculatedWidth}px`;\n                });\n                headerCells[headerIdx].style.width = `${calculatedWidth}px`;\n            }\n            else {\n                if (cellValues.length == 0) {\n                    headerCells[headerIdx].style.width = null;\n                    headerCells[headerIdx].style.whiteSpace = 'nowrap';\n                }\n                maxWidth = headerCells[headerIdx].offsetWidth;\n                if (cellValues.length > 0) {\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = null;\n                        const width = value.parentElement.offsetWidth;\n                        if (width > maxWidth) {\n                            maxWidth = width;\n                        }\n                    });\n                    maxWidth += 3;\n                    const maxOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.max || 500\n                        : this.options.columnWidths[column.dataColumn.type].max || 2000;\n                    const minOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.min || 0\n                        : this.options.columnWidths[column.dataColumn.type].min || 20;\n                    if (maxWidth > maxOption) {\n                        maxWidth = maxOption;\n                    }\n                    if (maxWidth < minOption) {\n                        maxWidth = minOption;\n                    }\n                    if (utils.isNumericType(column.type)) {\n                        //increase the calculated width in 1.3 times for numeric columns\n                        maxWidth = Math.round(maxWidth * 1.3);\n                    }\n                    sumWidth += maxWidth;\n                    column.width = maxWidth;\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = `${maxWidth}px`;\n                    });\n                    headerCells[headerIdx].style.width = `${maxWidth}px`;\n                    if (column.dataColumn) {\n                        column.dataColumn.calculatedWidth = maxWidth;\n                    }\n                }\n                else {\n                    sumWidth += maxWidth;\n                }\n            }\n            headerIdx++;\n        }\n        if (sumWidth > 0) {\n            this.bodyCellContainerDiv.style.width = `${sumWidth}px`;\n            this.headerCellContainerDiv.style.width = `${sumWidth}px`;\n        }\n        else {\n            this.bodyCellContainerDiv.style.width = containerWidth;\n            this.headerCellContainerDiv.style.width = containerWidth;\n        }\n        this.bodyCellContainerDiv.style.visibility = null;\n        this.headerRowDiv.removeAttribute('style');\n    }\n}\n\nclass Calendar {\n    get cssPrefix() {\n        return 'kdtp-cal';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n        if (!this.options.yearRange) {\n            this.options.yearRange = 'c-10:c+10';\n        }\n    }\n    setDate(date) {\n        this.currentDate = new Date(date);\n    }\n    getDate() {\n        return new Date(this.currentDate);\n    }\n    dateChanged(apply) {\n        if (this.options.onDateChanged) {\n            this.options.onDateChanged(this.currentDate, apply);\n        }\n    }\n}\n\nclass DateTimePicker {\n    get cssPrefix() {\n        return 'kdtp';\n    }\n    constructor(options) {\n        this.calendar = null;\n        this.timePicker = null;\n        this.options = options;\n        this.render();\n    }\n    setDateTime(dateTime) {\n        this.currentDateTime = new Date(dateTime);\n        if (this.calendar) {\n            this.calendar.setDate(this.currentDateTime);\n        }\n        if (this.timePicker) {\n            this.timePicker.setTime(this.currentDateTime);\n        }\n    }\n    getDateTime() {\n        return new Date(this.currentDateTime);\n    }\n    render() {\n        if (this.options.showCalendar) {\n            this.calendar = this.createCalendar({\n                yearRange: this.options.yearRange,\n                showDateTimeInput: this.options.showDateTimeInput,\n                timePickerIsUsed: this.options.showTimePicker,\n                oneClickDateSelection: this.options.oneClickDateSelection,\n                onDateChanged: (date, apply) => {\n                    this.currentDateTime = date;\n                    if (this.timePicker) {\n                        this.timePicker.setTime(this.currentDateTime);\n                    }\n                    if (this.options.showTimePicker) {\n                        this.dateTimeChanged();\n                    }\n                    if (apply) {\n                        this.apply(this.currentDateTime);\n                    }\n                }\n            });\n            if (this.calendar)\n                this.calendar.render();\n        }\n        if (this.options.showTimePicker) {\n            this.timePicker = this.createTimePicker({\n                onTimeChanged: (time) => {\n                    this.currentDateTime.setHours(time.getHours());\n                    this.currentDateTime.setMinutes(time.getMinutes());\n                    if (this.calendar) {\n                        this.calendar.setDate(this.currentDateTime);\n                    }\n                    this.dateTimeChanged();\n                }\n            });\n            if (this.timePicker)\n                this.timePicker.render();\n        }\n        this.setDateTime(new Date());\n    }\n    createCalendar(options) {\n        return null;\n    }\n    createTimePicker(options) {\n        return null;\n    }\n    show(anchor) {\n        if (this.options.beforeShow) {\n            this.options.beforeShow();\n        }\n        const pos = getElementAbsolutePos(anchor || document.body);\n        this.slot.style.top = pos.y + anchor.clientHeight + 'px';\n        this.slot.style.left = pos.x + 'px';\n    }\n    apply(date) {\n        if (this.options.onApply) {\n            this.options.onApply(date);\n        }\n        this.destroy();\n    }\n    cancel() {\n        if (this.options.onCancel) {\n            this.options.onCancel();\n        }\n        this.destroy();\n    }\n    destroy() {\n        if (this.slot && this.slot.parentElement) {\n            this.slot.parentElement.removeChild(this.slot);\n        }\n    }\n    dateTimeChanged() {\n        if (this.options.onDateTimeChanged) {\n            this.options.onDateTimeChanged(this.currentDateTime);\n        }\n    }\n}\n\nclass DefaultCalendar extends Calendar {\n    constructor(slot, options) {\n        super(slot, options);\n        this.daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        this.months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        this.calendarBody = null;\n        this.isManualInputChanging = false;\n        for (let i = 0; i < this.daysOfWeek.length; i++) {\n            this.daysOfWeek[i] = i18n.getShortWeekDayName(i + 1);\n        }\n        for (let i = 0; i < this.months.length; i++) {\n            this.months[i] = i18n.getLongMonthName(i + 1);\n        }\n    }\n    setDate(date) {\n        super.setDate(date);\n        this.selectedMonth = this.currentDate.getMonth();\n        this.selectedYear = this.currentDate.getFullYear();\n        this.rerenderMonth();\n    }\n    render() {\n        const header = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-header`);\n        if (this.options.showDateTimeInput) {\n            header\n                .addChildElement(this.renderManualDateInput());\n        }\n        else {\n            header\n                .addChild('span', builder => this.headerTextElem = builder.toDOM());\n        }\n        domel(this.slot)\n            .addChildElement(this.renderCalendarButtons());\n        this.calendarBody = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n    }\n    getInputDateFormat() {\n        const settings = i18n.getLocaleSettings();\n        return (this.options.timePickerIsUsed)\n            ? `${settings.editDateFormat} ${settings.editTimeFormat}`\n            : settings.editDateFormat;\n    }\n    renderManualDateInput() {\n        const format = this.getInputDateFormat();\n        const builder = domel('input')\n            .attr('placeholder', format)\n            .addClass(`${this.cssPrefix}-header-input`);\n        builder\n            .mask(format.replace('yyyy', '9999')\n            .replace('MM', '99')\n            .replace('dd', '99')\n            .replace('HH', '99')\n            .replace('mm', '99')\n            .replace('ss', '99'))\n            .on('input', ev => {\n            builder.removeClass('error');\n            try {\n                this.isManualInputChanging = true;\n                const newDate = utils.strToDateTime(this.manualInputElem.value, format);\n                this.currentDate = newDate;\n                this.jump(this.currentDate.getFullYear(), this.currentDate.getMonth());\n                this.dateChanged(false);\n            }\n            catch (e) {\n                builder.addClass('error');\n            }\n            finally {\n                this.isManualInputChanging = false;\n            }\n        })\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.manualInputElem.className.indexOf('error') < 0\n                    && !this.isManualInputChanging)\n                    this.dateChanged(true);\n            }\n        })\n            .on('focus', () => {\n            setTimeout(() => {\n                this.manualInputElem.selectionStart = 0;\n                this.manualInputElem.selectionEnd = 0;\n            }, 50);\n        });\n        this.manualInputElem = builder.toDOM();\n        return this.manualInputElem;\n    }\n    updateDisplayedDateValue() {\n        if (this.manualInputElem) {\n            if (!this.isManualInputChanging) {\n                const format = this.getInputDateFormat();\n                this.manualInputElem.value = i18n.dateTimeToStr(this.currentDate, format);\n                this.manualInputElem.focus();\n            }\n        }\n        else if (this.headerTextElem) {\n            const locale = i18n.getCurrentLocale();\n            this.headerTextElem.innerText = this.currentDate.toLocaleString(locale == 'en' ? undefined : locale, {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n            });\n        }\n    }\n    renderCalendarButtons() {\n        const builder = domel('nav')\n            .addClass(`${this.cssPrefix}-nav`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-prev`)\n            .on('click', () => {\n            this.prev();\n        })\n            .addChild('span', builder => builder.html('&lsaquo;')))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-selectors`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-month`)\n            .addChild('select', builder => {\n            builder\n                .on('change', () => {\n                this.jump(this.selectedYear, parseInt(this.selectMonthElem.value));\n            });\n            for (let i = 0; i < this.months.length; i++) {\n                builder.addChild('option', builder => builder\n                    .attr('value', i.toString())\n                    .text(this.months[i]));\n            }\n            this.selectMonthElem = builder.toDOM();\n        }))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-year`)\n            .addChild('select', builder => this.selectYearElem = builder\n            .on('change', () => {\n            this.jump(parseInt(this.selectYearElem.value), this.selectedMonth);\n        })\n            .toDOM())))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-next`)\n            .on('click', () => {\n            this.next();\n        })\n            .addChild('span', builder => builder.html('&rsaquo;')));\n        return builder.toDOM();\n    }\n    prev() {\n        this.selectedYear = (this.selectedMonth === 0) ? this.selectedYear - 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth === 0) ? 11 : this.selectedMonth - 1;\n        this.rerenderMonth();\n    }\n    next() {\n        this.selectedYear = (this.selectedMonth === 11) ? this.selectedYear + 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth + 1) % 12;\n        this.rerenderMonth();\n    }\n    rerenderSelectYear() {\n        const match = /c-(\\d*):c\\+(\\d*)/g.exec(this.options.yearRange);\n        let minusYear = 0;\n        let plusYear = 1;\n        if (match !== null) {\n            minusYear = parseInt(match[1]);\n            plusYear = parseInt(match[2]);\n        }\n        this.selectYearElem.innerHTML = '';\n        for (let i = 0; i <= minusYear + plusYear; i++) {\n            let op = document.createElement(\"option\");\n            let year = this.selectedYear - minusYear + i;\n            op.value = year.toString();\n            op.innerText = year.toString();\n            this.selectYearElem.appendChild(op);\n        }\n    }\n    jump(year, month) {\n        this.selectedYear = year;\n        this.selectedMonth = month;\n        this.rerenderMonth();\n    }\n    rerenderMonth() {\n        //header text\n        this.updateDisplayedDateValue();\n        this.rerenderSelectYear();\n        let firstDay = (new Date(this.selectedYear, this.selectedMonth)).getDay();\n        let daysInMonth = new Date(this.selectedYear, this.selectedMonth + 1, 0).getDate();\n        this.calendarBody.innerHTML = \"\";\n        this.selectYearElem.value = this.selectedYear.toString();\n        this.selectMonthElem.value = this.selectedMonth.toString();\n        this.daysOfWeek.forEach((day, idx) => {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-weekday`)\n                .addClass(idx == 0 || idx == 6 ? `${this.cssPrefix}-weekend` : '')\n                .text(day);\n        });\n        // Add empty cells before first day\n        for (let i = 0; i < firstDay; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n        // Add all month days\n        const today = new Date();\n        for (let day = 1; day <= daysInMonth; day++) {\n            const builder = domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day`)\n                .attr('data-date', day.toString())\n                .text(day.toString())\n                .on('click', (e) => {\n                this.currentDate.setFullYear(this.selectedYear);\n                this.currentDate.setMonth(this.selectedMonth);\n                this.currentDate.setDate(parseInt(e.target.getAttribute('data-date')));\n                this.dateChanged(this.options.oneClickDateSelection);\n            });\n            if (day === today.getDate() && this.selectedYear === today.getFullYear() && this.selectedMonth === today.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-current`);\n            }\n            if (day === this.currentDate.getDate() && this.selectedYear === this.currentDate.getFullYear() && this.selectedMonth === this.currentDate.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-selected`);\n            }\n            const dayOfWeek = (firstDay + day - 1) % 7;\n            if (dayOfWeek == 0 || dayOfWeek == 6) {\n                builder.addClass(`${this.cssPrefix}-weekend`);\n            }\n            if (typeof this.options.onDrawDay === \"function\") {\n                this.options.onDrawDay.apply(builder.toDOM(), [\n                    builder.toDOM(),\n                    new Date(this.selectedYear, this.selectedMonth, day)\n                ]);\n            }\n        }\n        // Add empty cells after last day\n        const cellsDrawnInLastRow = (firstDay + daysInMonth) % 7;\n        const cellsToDraw = cellsDrawnInLastRow == 0 ? 0 : 7 - cellsDrawnInLastRow;\n        for (let i = 0; i < cellsToDraw; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n    }\n    dateChanged(apply) {\n        super.dateChanged(apply);\n        this.rerenderMonth();\n    }\n}\n\nclass TimePicker {\n    get cssPrefix() {\n        return 'kdtp-tp';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n    }\n    setTime(time) {\n        this.currentTime = new Date(time);\n    }\n    getTime() {\n        return new Date(this.currentTime);\n    }\n    timeChanged() {\n        if (this.options.onTimeChanged) {\n            this.options.onTimeChanged(this.currentTime);\n        }\n    }\n}\n\nclass DefaultTimePicker extends TimePicker {\n    setTime(time) {\n        super.setTime(time);\n        this.updateDisplayedTime();\n        this.hoursInput.valueAsNumber = time.getHours();\n        this.minutesInput.valueAsNumber = time.getMinutes();\n    }\n    render() {\n        domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-time`)\n            .addChild('span', builder => this.timeText = builder.toDOM())\n            .toDOM();\n        const slidersBuilder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-sliders`);\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Hours')\n            .addChild('input', builder => this.hoursInput = builder\n            .addClass(`${this.cssPrefix}-input-hours`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '23')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setHours(this.hoursInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Minutes')\n            .addChild('input', builder => this.minutesInput = builder\n            .addClass(`${this.cssPrefix}-input-minutes`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '59')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setMinutes(this.minutesInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        return this.slot;\n    }\n    updateDisplayedTime() {\n        const locale = i18n.getCurrentLocale();\n        const timeToDraw = this.currentTime.toLocaleString(locale == 'en' ? undefined : locale, {\n            hour: \"numeric\",\n            minute: \"numeric\"\n        });\n        this.timeText.innerText = timeToDraw;\n    }\n}\n\nclass DefaultDateTimePicker extends DateTimePicker {\n    render() {\n        const sb = domel('div', document.body)\n            .addClass(`${this.cssPrefix}`)\n            .attr('tabIndex', '0')\n            .setStyle('position', 'absolute')\n            .setStyle('top', '-1000px')\n            .setStyle('left', '-1000px')\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 27) { // ESC is pressed\n                this.cancel();\n            }\n            else if (ev.keyCode === 13) { // Enter is pressed\n                this.apply(this.getDateTime());\n            }\n            return false;\n        });\n        if (this.options.zIndex) {\n            sb.setStyle('z-index', `${this.options.zIndex}`);\n        }\n        this.slot = sb.toDOM();\n        super.render();\n        this.renderButtons();\n        this.globalMouseDownHandler = (e) => {\n            let event = window.event || e;\n            event.srcElement || event.target;\n            let isOutside = !this.slot.contains(event.target);\n            if (isOutside) {\n                document.removeEventListener('mousedown', this.globalMouseDownHandler, true);\n                this.cancel();\n            }\n            return true;\n        };\n    }\n    renderButtons() {\n        const builder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-buttons`)\n            .addChild('button', b => this.nowButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-now`)\n            .text(i18n.getText('ButtonNow'))\n            .on('click', () => {\n            this.setDateTime(new Date());\n            this.dateTimeChanged();\n            return false;\n        })\n            .toDOM());\n        if (this.options.showTimePicker || !this.options.oneClickDateSelection) {\n            builder.addChild('button', b => this.submitButton = b\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-apply`)\n                .text(i18n.getText('ButtonApply'))\n                .on('click', () => {\n                this.apply(this.getDateTime());\n                return false;\n            })\n                .toDOM());\n        }\n        builder.addChild('button', b => this.submitButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-cancel`)\n            .text(i18n.getText('ButtonCancel'))\n            .on('click', () => {\n            this.cancel();\n            return false;\n        })\n            .toDOM());\n    }\n    createCalendar(options) {\n        this.calendarSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-cal`)\n                .toDOM();\n        return new DefaultCalendar(this.calendarSlot, options);\n    }\n    createTimePicker(options) {\n        this.timePickerSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-tp`)\n                .toDOM();\n        return new DefaultTimePicker(this.timePickerSlot, options);\n    }\n    show(anchor) {\n        if (this.options.showDateTimeInput) {\n            if (this.options.beforeShow) {\n                this.options.beforeShow();\n            }\n            const anchorPos = getElementAbsolutePos(anchor || document.body);\n            const parentPos = getElementAbsolutePos(anchor ? anchor.parentElement || anchor : document.body);\n            this.slot.style.top = parentPos.y + 'px';\n            this.slot.style.left = anchorPos.x + 'px';\n        }\n        else {\n            super.show(anchor);\n            this.slot.focus();\n        }\n        setTimeout(() => {\n            document.addEventListener('mousedown', this.globalMouseDownHandler, true);\n        }, 1);\n    }\n}\n\nvar DialogFooterAlignment;\n(function (DialogFooterAlignment) {\n    DialogFooterAlignment[DialogFooterAlignment[\"Left\"] = 1] = \"Left\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Center\"] = 2] = \"Center\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Right\"] = 3] = \"Right\";\n})(DialogFooterAlignment || (DialogFooterAlignment = {}));\n\nconst cssPrefix = \"kdlg\";\nclass DefaultDialogService {\n    openConfirm(title, content, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-confirm\">${content}</div>`;\n        const options = {\n            title: title,\n            closable: false,\n            submitable: true,\n            cancelable: true,\n            body: template\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                callback(true);\n            };\n            options.onCancel = () => {\n                callback(false);\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                resolve(true);\n            };\n            options.onCancel = () => {\n                resolve(false);\n            };\n            this.open(options);\n        });\n    }\n    openPrompt(title, content, defVal, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-content\">${content}</label>\r\n                <input type=\"text\" name=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-input\" />\r\n            </div>\r\n        </div>`;\n        const options = {\n            title: title,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            body: template,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n                if (defVal) {\n                    input.value = defVal;\n                }\n                input.focus();\n            }\n        };\n        const processInput = (callback) => {\n            const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n            const result = input.value;\n            if (result && result.replace(/\\s/g, '').length > 0) {\n                callback(result);\n                return true;\n            }\n            input.classList.add('eqjs-invalid');\n            return false;\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                return processInput(callback);\n            };\n            options.onCancel = () => {\n                callback(\"\");\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                return processInput(resolve);\n            };\n            options.onCancel = () => {\n                resolve(\"\");\n            };\n            this.open(options);\n        });\n    }\n    open(options, data) {\n        const dialog = new DefaultDialog(options, data);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    createSet(options) {\n        return new DefaultDialogSet(options, this);\n    }\n    untrack(dlg) {\n        const index = DefaultDialogService.openDialogs.indexOf(dlg);\n        if (index >= 0) {\n            DefaultDialogService.openDialogs.splice(index, 1);\n        }\n    }\n    track(dlg) {\n        DefaultDialogService.openDialogs.push(dlg);\n    }\n    openProgress(options) {\n        const dialog = new DefaultProgressDialog(options);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    getAllDialogs() {\n        return Array.from(DefaultDialogService.openDialogs);\n    }\n    closeAllDialogs() {\n        for (const dialog of Array.from(DefaultDialogService.openDialogs)) {\n            dialog.close();\n        }\n    }\n}\nDefaultDialogService.openDialogs = [];\nclass DefaultDialog {\n    constructor(options, data) {\n        this.options = options;\n        this.submitHandler = (token) => {\n            if (this.options.onSubmit && this.options.onSubmit(this, token) === false) {\n                return false;\n            }\n            this.destroy();\n            return true;\n        };\n        this.cancelHandler = () => {\n            if (this.options.onCancel) {\n                this.options.onCancel(this);\n            }\n            this.destroy();\n        };\n        this.keydownHandler = (ev) => {\n            if (ev.keyCode == 13 && this.isActiveDialog()) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.submitHandler()) {\n                    window.removeEventListener('keydown', this.keydownHandler, false);\n                    return false;\n                }\n            }\n            return true;\n        };\n        this.dialogId = utils.generateId('dlg');\n        this.data = data;\n        this.slot =\n            domel('div', document.body)\n                .attr('tab-index', '-1')\n                .data('dialog-id', this.dialogId)\n                .addClass(`${cssPrefix}-modal`, 'is-active')\n                .focus()\n                .addChild('div', b => b\n                .addClass('kdlg-modal-background'))\n                .addChild('div', b => this.windowElement = b\n                .addClass(`${cssPrefix}-modal-window`)\n                .addChild('header', b => {\n                this.headerElement = b\n                    .addClass(`${cssPrefix}-header`)\n                    .addChild('p', b => b\n                    .addClass(`${cssPrefix}-header-title`)\n                    .addText(options.title))\n                    .toDOM();\n                if (options.closable !== false)\n                    b.addChild('button', b => b\n                        .addClass(`${cssPrefix}-modal-close`)\n                        .on('click', () => {\n                        this.cancelHandler();\n                    })\n                        .focus());\n            })\n                .addChild('div', b => {\n                b.addClass(`${cssPrefix}-alert-container`);\n                this.alertElement = b.toDOM();\n            })\n                .addChild('section', b => {\n                this.bodyElement = b\n                    .addClass(`${cssPrefix}-body`)\n                    .toDOM();\n                if (typeof options.body === 'string') {\n                    const html = liquid.renderLiquidTemplate(options.body, data);\n                    b.addHtml(html);\n                }\n                else {\n                    b.addChildElement(options.body);\n                }\n            })\n                .addChild('footer', b => {\n                let alignClass = null;\n                if (options.footerAlignment && options.footerAlignment == DialogFooterAlignment.Center) {\n                    alignClass = 'align-center';\n                }\n                else {\n                    alignClass = 'align-right';\n                }\n                this.footerElement = b\n                    .addClass(`${cssPrefix}-footer`)\n                    .toDOM();\n                b.addClass(alignClass);\n                if (options.submitable === false)\n                    return;\n                b.addChild('button', bb => {\n                    bb.id(this.dialogId + '-btn-submit')\n                        .addClass('kfrm-button', 'is-info')\n                        .addText(options.submitButtonText || i18n.getText('ButtonOK'));\n                    if (options.recaptchaSiteKey) {\n                        bb.data('sitekey', options.recaptchaSiteKey);\n                        bb.addClass('g-recaptcha');\n                        bb.on('click', (e) => {\n                            if (grecaptcha) {\n                                grecaptcha.ready(() => {\n                                    grecaptcha.execute(options.recaptchaSiteKey, { action: 'submit' })\n                                        .then((token) => {\n                                        this.submitHandler(token);\n                                    });\n                                });\n                            }\n                            else {\n                                this.submitHandler();\n                            }\n                        });\n                    }\n                    else {\n                        bb.on('click', (e) => {\n                            this.submitHandler();\n                        });\n                    }\n                    bb.focus();\n                });\n                if (options.cancelable !== false)\n                    b.addChild('button', bb => bb\n                        .id(this.dialogId + '-btn-cancel')\n                        .addClass('kfrm-button')\n                        .addText(options.cancelButtonText || i18n.getText('ButtonCancel'))\n                        .on('click', (e) => {\n                        this.cancelHandler();\n                    }));\n            })\n                .toDOM())\n                .toDOM();\n    }\n    getData() {\n        return this.data;\n    }\n    getRootElement() {\n        return this.slot;\n    }\n    getSubmitButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-submit');\n    }\n    getCancelButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-cancel');\n    }\n    open() {\n        if (this.options.beforeOpen) {\n            this.options.beforeOpen(this);\n        }\n        domel(this.slot).show();\n        if (this.options.arrangeParents) {\n            this.arrangeParents(true);\n        }\n        const windowDiv = this.slot\n            .querySelector(`.${cssPrefix}-modal-window`);\n        if (this.options.height) {\n            windowDiv.style.height = typeof this.options.height === 'string'\n                ? this.options.height\n                : `${this.options.height}px`;\n        }\n        if (this.options.width) {\n            windowDiv.style.width = typeof this.options.width === 'string'\n                ? this.options.width\n                : `${this.options.width}px`;\n        }\n        if (this.options.submitOnEnter) {\n            window.addEventListener('keydown', this.keydownHandler, false);\n        }\n        //clear alert on change in any input element \n        this.slot.querySelectorAll('input')\n            .forEach(element => element.addEventListener('input', () => {\n            this.clearAlert();\n            if (this.options.onInput) {\n                this.options.onInput(this);\n            }\n        }));\n        if (this.options.onShow) {\n            this.options.onShow(this);\n        }\n    }\n    submit() {\n        this.submitHandler();\n    }\n    cancel() {\n        this.cancelHandler();\n    }\n    close() {\n        this.destroy();\n    }\n    disableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = true);\n    }\n    enableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = false);\n    }\n    showAlert(text, reason, replace) {\n        let alert = domel('div')\n            .addClass(`${cssPrefix}-alert ${reason || ''}`)\n            .addChild('span', b => b\n            .addClass(`${cssPrefix}-alert-closebtn`)\n            .text('×')\n            .on('click', (ev) => {\n            const alert = ev.target.parentElement;\n            alert.parentElement.removeChild(alert);\n        }))\n            .addText(text)\n            .toDOM();\n        if (replace === true) {\n            this.clearAlert();\n        }\n        this.alertElement.appendChild(alert);\n    }\n    clearAlert() {\n        this.alertElement.innerHTML = '';\n    }\n    destroy() {\n        const elem = document.querySelectorAll(`[data-dialog-id=\"${this.dialogId}\"]`);\n        if (elem.length <= 0)\n            return;\n        if (this.options.arrangeParents) {\n            this.arrangeParents(false);\n        }\n        document.body.removeChild(this.slot);\n        if (this.options.submitOnEnter) {\n            window.removeEventListener('keydown', this.keydownHandler, false);\n        }\n        if (this.options.onDestroy) {\n            this.options.onDestroy(this);\n        }\n    }\n    isActiveDialog() {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal');\n        return windowDivs[windowDivs.length - 1] === this.slot;\n    }\n    arrangeParents(turnOn) {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal-window');\n        for (let i = 0; i < windowDivs.length - 1; i++) {\n            if (turnOn) {\n                const offset = i == 0 ? 20 : i * 40 + 20;\n                domel(windowDivs[i])\n                    .setStyle('margin-top', `${offset}px`)\n                    .setStyle('margin-left', `${offset}px`);\n            }\n            else {\n                domel(windowDivs[i])\n                    .removeStyle('margin-top')\n                    .removeStyle('margin-left');\n            }\n        }\n    }\n}\nclass DefaultProgressDialog extends DefaultDialog {\n    constructor(options, data) {\n        let contentElement;\n        let progressElement;\n        const body = domel('div')\n            .addChild('div', b => contentElement = b\n            .text(options.content || '')\n            .toDOM())\n            .addChild('div', b => {\n            b\n                .addClass(`${cssPrefix}-progress-line`)\n                .addChild('div', b => {\n                progressElement = b\n                    .addClass('fill')\n                    .toDOM();\n                if (options.determinated) {\n                    b.setStyle('width', '0%');\n                }\n                else {\n                    b.addClass('indeterminate');\n                }\n            });\n        })\n            .toDOM();\n        super({\n            title: options.title,\n            body: body,\n            beforeOpen: options.beforeOpen,\n            onSubmit: options.onSubmit,\n            width: options.width,\n            height: options.height,\n            submitable: false,\n            cancelable: false,\n            closable: false,\n            onDestroy: options.onDestroy\n        }, data);\n        this.contentElement = contentElement;\n        this.progressElement = progressElement;\n    }\n    updateContent(content) {\n        this.contentElement.innerText = content;\n    }\n    updateProgress(progress) {\n        progress = this.in01(progress);\n        this.progressElement.style.width = `${progress * 100}%`;\n        if (progress === 1) {\n            // postpone for 0.5s for smooth closing\n            setTimeout(() => {\n                this.submit();\n            }, 500);\n        }\n    }\n    in01(num) {\n        if (num > 1)\n            return 1;\n        if (num < 0)\n            return 0;\n        return num;\n    }\n}\nclass DefaultDialogSet {\n    constructor(options, dialogService) {\n        this.options = options;\n        this.dialogService = dialogService;\n        this.currentDialog = null;\n        this.currentIndex = 0;\n        this.options = options;\n        this.dialogService = dialogService;\n    }\n    getCurrent() {\n        return this.currentDialog;\n    }\n    openNext(data) {\n        return this.open(this.currentIndex + 1, data);\n    }\n    openPrev(data) {\n        return this.open(this.currentIndex - 1, data);\n    }\n    open(page, data) {\n        if (page < 0) {\n            this.currentIndex = 0;\n        }\n        else if (page >= this.options.length) {\n            this.currentIndex = this.options.length - 1;\n        }\n        else {\n            this.currentIndex = page;\n        }\n        if (this.currentDialog) {\n            try {\n                this.currentDialog.close();\n            }\n            catch (e) { }\n        }\n        const dlgOptions = this.options[this.currentIndex];\n        this.currentDialog = this.dialogService.open(dlgOptions, data);\n        return this.currentDialog;\n    }\n    close() {\n        if (this.currentDialog) {\n            this.currentDialog.close();\n            this.currentDialog = null;\n        }\n    }\n}\n\nfunction addEasyDataUITexts() {\n    i18n.updateDefaultTexts({\n        GridPageInfo: '{FirstPageRecordNum} - {LastPageRecordNum} of {Total} records',\n        GridItemsPerPage: 'items per page',\n        ButtonOK: \"OK\",\n        ButtonCancel: \"Cancel\",\n        ButtonApply: 'Apply',\n        ButtonNow: 'Now',\n        LblTotal: 'Total'\n    });\n}\naddEasyDataUITexts();\n\nvar PRE_SELECT;\n(function (PRE_SELECT) {\n    PRE_SELECT[PRE_SELECT[\"THIS_WEEK\"] = 0] = \"THIS_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"LAST_WEEK\"] = 1] = \"LAST_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"THIS_MONTH\"] = 2] = \"THIS_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"FIRST_MONTH\"] = 3] = \"FIRST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"LAST_MONTH\"] = 4] = \"LAST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"THIS_YEAR\"] = 5] = \"THIS_YEAR\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_1\"] = 6] = \"QUARTER_1\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_2\"] = 7] = \"QUARTER_2\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_3\"] = 8] = \"QUARTER_3\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_4\"] = 9] = \"QUARTER_4\";\n})(PRE_SELECT || (PRE_SELECT = {}));\nvar JUMP_TO;\n(function (JUMP_TO) {\n    JUMP_TO[\"UNDEF\"] = \"-1\";\n    JUMP_TO[\"TODAY\"] = \"1\";\n    JUMP_TO[\"YESTERDAY\"] = \"2\";\n    JUMP_TO[\"TOMORROW\"] = \"3\";\n    JUMP_TO[\"WEEK_START\"] = \"4\";\n    JUMP_TO[\"WEEK_END\"] = \"5\";\n    JUMP_TO[\"MONTH_START\"] = \"6\";\n    JUMP_TO[\"MONTH_END\"] = \"7\";\n    JUMP_TO[\"YEAR_START\"] = \"8\";\n    JUMP_TO[\"YEAR_END\"] = \"9\";\n})(JUMP_TO || (JUMP_TO = {}));\n\nconst internalDateFormat = 'yyyy-MM-dd';\nconst internalTimeFormat = 'HH:mm';\nconst getInternalDateTimeFormat = (dtype) => {\n    if (dtype == DataType$1.Date)\n        return internalDateFormat;\n    if (dtype == DataType$1.Time)\n        return internalTimeFormat;\n    return `${internalDateFormat}T${internalTimeFormat}`;\n};\nconst getEditDateTimeFormat = (dtype) => {\n    const settings = i18n$1.getLocaleSettings();\n    if (dtype == DataType$1.Date)\n        return settings.editDateFormat;\n    if (dtype == DataType$1.Time)\n        return settings.editTimeFormat;\n    return `${settings.editDateFormat} ${settings.editTimeFormat}`;\n};\nconst setLocation = (path) => {\n    const state = window.history.state;\n    history.pushState(state, document.title, path);\n    window.dispatchEvent(new Event('ed_set_location'));\n};\n\nclass Validator {\n}\n\nclass DateTimeValidator extends Validator {\n    constructor() {\n        super();\n        this.name = 'DateTime';\n    }\n    validate(attr, value) {\n        if (!utils$1.IsDefinedAndNotNull(value) || value == '')\n            return { successed: true };\n        if (utils$1.getDateDataTypes().indexOf(attr.dataType) >= 0) {\n            try {\n                const editFormat = getEditDateTimeFormat(attr.dataType);\n                const newDate = utils$1.strToDateTime(value, editFormat);\n            }\n            catch (_a) {\n                return {\n                    successed: false,\n                    messages: [i18n$1.getText('DateTimeError')]\n                };\n            }\n        }\n        return { successed: true };\n    }\n}\n\nclass EntityEditForm {\n    constructor(context) {\n        this.context = context;\n        this.validators = [new DateTimeValidator()];\n    }\n    getHtml() {\n        return this.html;\n    }\n    setHtmlInt(html) {\n        this.html = html;\n        this.errorsDiv = this.html.querySelector('.errors-block');\n    }\n    validate() {\n        this.clearErrors();\n        const inputs = Array.from(this.html.querySelectorAll('input, select'));\n        let isValid = true;\n        for (const input of inputs) {\n            const attr = this.context.getMetaData().getAttributeById(input.name);\n            if (input.type === 'checkbox')\n                continue;\n            const result = this.validateValue(attr, input.value);\n            if (!result.successed) {\n                if (isValid) {\n                    domel(this.errorsDiv)\n                        .addChild('ul');\n                }\n                isValid = false;\n                for (const message of result.messages) {\n                    this.errorsDiv.firstElementChild.innerHTML += `<li>${attr.caption}: ${message}</li>`;\n                }\n            }\n            this.markInputValid(input, result.successed);\n        }\n        return isValid;\n    }\n    getData() {\n        return new Promise((resolve, reject) => {\n            const filePromises = [];\n            const inputs = Array.from(this.html\n                .querySelectorAll('input, select, textarea'));\n            let obj = {};\n            for (const input of inputs) {\n                const property = input.name.substring(input.name.lastIndexOf('.') + 1);\n                const attr = this.context.getMetaData().getAttributeById(input.name);\n                if (input.type === 'checkbox') {\n                    obj[property] = input.checked;\n                }\n                else if (input.type === 'file') {\n                    filePromises.push(this.fileToBase64(input.files[0])\n                        .then(content => obj[property] = content));\n                }\n                else {\n                    obj[property] = this.mapValue(attr.dataType, input.value);\n                }\n            }\n            Promise.all(filePromises)\n                .then(() => resolve(obj))\n                .catch((e) => reject(e));\n        });\n    }\n    fileToBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                const result = reader.result.toString();\n                resolve(result.substring(result.indexOf(',') + 1));\n            };\n            reader.onerror = error => reject(error);\n        });\n    }\n    useValidator(...validator) {\n        this.useValidators(validator);\n    }\n    useValidators(validators) {\n        this.validators = this.validators.concat(validators);\n    }\n    mapValue(type, value) {\n        if (utils$1.getDateDataTypes().indexOf(type) >= 0) {\n            if (type !== DataType$1.Time && value && value.length) {\n                const editFormat = getEditDateTimeFormat(type);\n                const internalFormat = getInternalDateTimeFormat(type);\n                const date = utils$1.strToDateTime(value, editFormat);\n                return i18n$1.dateTimeToStr(date, internalFormat);\n            }\n            return value && value.length ? value : null;\n        }\n        if (utils$1.isIntType(type))\n            return parseInt(value);\n        if (utils$1.isNumericType(type))\n            return parseFloat(value);\n        return value;\n    }\n    clearErrors() {\n        this.errorsDiv.innerHTML = '';\n        this.html.querySelectorAll('input, select').forEach(el => {\n            el.classList.remove('is-valid');\n            el.classList.remove('is-invalid');\n        });\n    }\n    markInputValid(input, valid) {\n        input.classList.add(valid ? 'is-valid' : 'is-invalid');\n    }\n    validateValue(attr, value) {\n        const result = { successed: true, messages: [] };\n        for (const validator of this.validators) {\n            const res = validator.validate(attr, value);\n            if (!res.successed) {\n                result.successed = false;\n                result.messages = result.messages.concat(res.messages);\n            }\n        }\n        return result;\n    }\n}\n\nclass TextFilterWidget {\n    constructor(slot, grid, filter, options) {\n        this.slot = slot;\n        this.grid = grid;\n        this.filter = filter;\n        this.options = {\n            focus: false,\n            instantMode: false,\n            instantTimeout: 1000\n        };\n        this.options = utils$1.assignDeep(this.options, options || {});\n        const stringDefRenderer = this.grid.cellRendererStore\n            .getDefaultRendererByType(CellRendererType.STRING);\n        this.grid.cellRendererStore\n            .setDefaultRenderer(CellRendererType.STRING, (value, column, cellElement, rowElement) => this.highlightCellRenderer(stringDefRenderer, value, column, cellElement, rowElement));\n        const numDefRenderer = this.grid.cellRendererStore\n            .getDefaultRendererByType(CellRendererType.NUMBER);\n        this.grid.cellRendererStore\n            .setDefaultRenderer(CellRendererType.NUMBER, (value, column, cellElement, rowElement) => this.highlightCellRenderer(numDefRenderer, value, column, cellElement, rowElement));\n        this.render();\n    }\n    render() {\n        const horizClass = browserUtils.IsIE()\n            ? 'kfrm-fields-ie is-horizontal'\n            : 'kfrm-fields is-horizontal';\n        const isEdgeOrIE = browserUtils.IsIE() || browserUtils.IsEdge();\n        domel(this.slot)\n            .addClass(horizClass)\n            .addChild('div', b => {\n            b\n                .addClass('control')\n                .addChild('input', b => {\n                this.filterInput = b.toDOM();\n                b\n                    .attr('placeholder', i18n$1.getText('SearchInputPlaceholder'))\n                    .type('text');\n                b.on('keydown', this.inputKeydownHandler.bind(this));\n                if (this.options.instantMode) {\n                    b.on('keyup', this.inputKeyupHandler.bind(this));\n                }\n            });\n            if (!isEdgeOrIE) {\n                b\n                    .addClass('has-icons-right')\n                    .addChild('span', b => {\n                    b\n                        .addClass('icon')\n                        .addClass('is-right')\n                        .addClass('is-clickable')\n                        .html('&#x1F5D9;')\n                        .on('click', this.clearButtonClickHander.bind(this));\n                });\n            }\n        });\n        if (!this.options.instantMode) {\n            domel(this.slot)\n                .addChild('button', b => b\n                .addClass('kfrm-button')\n                .addText(i18n$1.getText('SearchBtn'))\n                .on('click', this.searchButtonClickHandler.bind(this)));\n        }\n        if (this.options.focus) {\n            this.filterInput.focus();\n        }\n    }\n    inputKeydownHandler(ev) {\n        if (ev.keyCode == 13) {\n            this.applyFilter(true);\n        }\n    }\n    inputKeyupHandler() {\n        if (this.applyFilterTimeout) {\n            clearTimeout(this.applyFilterTimeout);\n        }\n        this.applyFilterTimeout = setTimeout(() => {\n            this.applyFilter(true);\n        }, this.options.instantTimeout);\n    }\n    clearButtonClickHander() {\n        this.filterInput.value = '';\n        this.filterInput.focus();\n        this.applyFilter(true);\n    }\n    searchButtonClickHandler() {\n        this.applyFilter(true);\n    }\n    applyFilter(checkChange) {\n        if (this.applyFilterTimeout) {\n            clearTimeout(this.applyFilterTimeout);\n        }\n        const filterValue = this.filter.getValue();\n        if (!checkChange || filterValue != this.filterInput.value) {\n            this.filter.apply(this.filterInput.value)\n                .then(data => {\n                this.grid.setData(data);\n            });\n            return true;\n        }\n        return false;\n    }\n    highlightCellRenderer(defaultRenderer, value, column, cellElement, rowElement) {\n        if (utils$1.isNumericType(column.type)\n            || utils$1.getStringDataTypes().indexOf(column.type) >= 0) {\n            if (value) {\n                if (column.dataColumn && column.dataColumn.displayFormat\n                    && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n                    value = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                        return i18n$1.numberToStr(value, $1);\n                    });\n                }\n                else {\n                    value = value.toLocaleString();\n                }\n                const result = this.highlightText(value.toString());\n                if (result instanceof HTMLElement) {\n                    cellElement.title = value;\n                    cellElement.appendChild(result);\n                    return;\n                }\n            }\n        }\n        defaultRenderer(value, column, cellElement, rowElement);\n    }\n    highlightText(content) {\n        const normalizedContent = content.toLowerCase();\n        const filterValue = this.filter.getValue().toString();\n        if (filterValue && filterValue.length > 0 && content && content.length > 0) {\n            const indexInMas = [];\n            const words = filterValue.split('||').map(w => w.trim().toLowerCase());\n            for (let i = 0; i < words.length; i++) {\n                let pos = 0;\n                const lowerWord = words[i];\n                if (!lowerWord.length)\n                    continue;\n                if (lowerWord === normalizedContent) {\n                    const highlightSpan = document.createElement('span');\n                    highlightSpan.style.backgroundColor = 'yellow';\n                    highlightSpan.innerText = content;\n                    return highlightSpan;\n                }\n                while (pos < content.length - 1) {\n                    const index = normalizedContent.indexOf(lowerWord, pos);\n                    if (index >= 0) {\n                        indexInMas.push({ index: index, length: words[i].length });\n                        pos = index + lowerWord.length;\n                    }\n                    else {\n                        pos++;\n                    }\n                }\n            }\n            if (indexInMas.length > 0) {\n                //sort array item by index\n                indexInMas.sort((item1, item2) => {\n                    if (item1.index > item2.index) {\n                        return 1;\n                    }\n                    else if (item1.index == item2.index2) {\n                        return 0;\n                    }\n                    else {\n                        return -1;\n                    }\n                });\n                //remove intersecting gaps\n                for (let i = 0; i < indexInMas.length - 1;) {\n                    const delta = indexInMas[i + 1].index - (indexInMas[i].index + indexInMas[i].length);\n                    if (delta < 0) {\n                        const addDelta = indexInMas[i + 1].length + delta;\n                        if (addDelta > 0) {\n                            indexInMas[i].length += addDelta;\n                        }\n                        indexInMas.splice(i + 1, 1);\n                    }\n                    else {\n                        i++;\n                    }\n                }\n                const div = document.createElement('div');\n                for (let i = 0; i < indexInMas.length; i++) {\n                    if (i === 0) {\n                        const text = document.createTextNode(content.substring(0, indexInMas[i].index));\n                        div.appendChild(text);\n                    }\n                    const highlightSpan = document.createElement('span');\n                    highlightSpan.style.backgroundColor = 'yellow';\n                    highlightSpan.innerText = content.substring(indexInMas[i].index, indexInMas[i].index + indexInMas[i].length);\n                    div.appendChild(highlightSpan);\n                    const text = (i < indexInMas.length - 1)\n                        ? document.createTextNode(content.substring(indexInMas[i].index\n                            + indexInMas[i].length, indexInMas[i + 1].index))\n                        : document.createTextNode(content.substring(indexInMas[i].index\n                            + indexInMas[i].length));\n                    div.appendChild(text);\n                }\n                return div;\n            }\n        }\n        return content;\n    }\n}\n\nconst isIE = browserUtils.IsIE();\nclass EntityEditFormBuilder {\n    constructor(context, params) {\n        this.context = context;\n        this.params = params;\n        this.params = params || {};\n        this.reset();\n    }\n    reset() {\n        this.form = new EntityEditForm(this.context);\n    }\n    setupLookupField(parent, attr, readOnly, value) {\n        const lookupEntity = this.context.getMetaData().getRootEntity()\n            .subEntities.filter(ent => ent.id == attr.lookupEntity)[0];\n        const dataAttr = this.context.getMetaData().getAttributeById(attr.dataAttr);\n        if (!dataAttr)\n            return;\n        readOnly = readOnly || !dataAttr.isEditable;\n        value = this.params.values\n            ? this.params.values.getValue(dataAttr.id)\n            : undefined;\n        const horizClass = isIE\n            ? 'kfrm-fields-ie is-horizontal'\n            : 'kfrm-fields is-horizontal';\n        let inputEl;\n        domel(parent)\n            .addChild('div', b => {\n            b\n                .addClass(horizClass)\n                .addChild('input', b => {\n                inputEl = b.toDOM();\n                b.attr('readonly', '');\n                b.name(dataAttr.id);\n                b.type(this.resolveInputType(dataAttr.dataType));\n                b.value(utils$1.IsDefinedAndNotNull(value)\n                    ? value.toString() : '');\n            });\n            if (!readOnly)\n                b.addChild('button', b => b\n                    .addClass('kfrm-button')\n                    .attr('title', i18n$1.getText('NavigationBtnTitle'))\n                    .addText('...')\n                    .on('click', (ev) => {\n                    const lookupTable = new EasyDataTable({\n                        loader: {\n                            loadChunk: (chunkParams) => this.context.getDataLoader()\n                                .loadChunk(Object.assign(Object.assign({}, chunkParams), { id: lookupEntity.id }))\n                        }\n                    });\n                    this.context.getDataLoader()\n                        .loadChunk({ offset: 0, limit: 1000, needTotal: true, sourceId: lookupEntity.id })\n                        .then(data => {\n                        for (const col of data.table.columns.getItems()) {\n                            const attrs = lookupEntity.attributes.filter(attr => attr.id == col.id && (attr.isPrimaryKey || attr.showInLookup));\n                            if (attrs.length) {\n                                lookupTable.columns.add(col);\n                            }\n                        }\n                        lookupTable.setTotal(data.total);\n                        for (const row of data.table.getCachedRows()) {\n                            lookupTable.addRow(row);\n                        }\n                        const ds = new DefaultDialogService();\n                        let gridSlot = null;\n                        let selectedSlot = null;\n                        let widgetSlot;\n                        const slot = domel('div')\n                            .addClass(`kfrm-form`)\n                            .addChild('div', b => b\n                            .addClass(`kfrm-field`)\n                            .addChild('label', b => b\n                            .addText(i18n$1.getText('LookupSelectedItem'))\n                            .toDOM())\n                            .addChild('div', b => selectedSlot = b\n                            .addText('None')\n                            .toDOM()))\n                            .addChild('div', b => widgetSlot = b.toDOM())\n                            .addChild('div', b => b\n                            .addClass('kfrm-control')\n                            .addChild('div', b => gridSlot = b.toDOM()))\n                            .toDOM();\n                        let selectedValue = inputEl.value;\n                        const getValue = (row, colId) => {\n                            if (row instanceof DataRow$1) {\n                                return row.getValue(colId);\n                            }\n                            const property = colId.substring(colId.lastIndexOf('.') + 1);\n                            return row[property];\n                        };\n                        const updateSelectedValue = (row) => {\n                            selectedSlot.innerHTML = lookupTable.columns\n                                .getItems()\n                                .map(col => {\n                                return `<b>${col.label}:</b> ${getValue(row, col.id)}`;\n                            })\n                                .join(', ');\n                        };\n                        if (selectedValue) {\n                            const attr = lookupEntity.getFirstPrimaryAttr();\n                            const key = attr.id.substring(attr.id.lastIndexOf('.') + 1);\n                            this.context.fetchRecord({ [key]: selectedValue }, lookupEntity.id)\n                                .then(data => {\n                                if (data.entity) {\n                                    updateSelectedValue(data.entity);\n                                }\n                            })\n                                .catch(error => {\n                                console.error(error);\n                            });\n                        }\n                        const lookupGrid = new EasyGrid({\n                            slot: gridSlot,\n                            dataTable: lookupTable,\n                            fixHeightOnFirstRender: true,\n                            paging: {\n                                pageSize: 10\n                            },\n                            onActiveRowChanged: (ev) => {\n                                lookupGrid.getData().getRow(ev.rowIndex)\n                                    .then((row) => {\n                                    selectedValue = row.getValue(attr.lookupDataAttr);\n                                    updateSelectedValue(row);\n                                });\n                            }\n                        });\n                        ds.open({\n                            title: i18n$1.getText('LookupDlgCaption')\n                                .replace('{entity}', lookupEntity.caption),\n                            body: slot,\n                            arrangeParents: true,\n                            beforeOpen: () => {\n                                const dataFilter = this.context.createFilter(lookupEntity.id, lookupGrid.getData(), true);\n                                new TextFilterWidget(widgetSlot, lookupGrid, dataFilter, { instantMode: true, focus: true });\n                            },\n                            onSubmit: () => {\n                                inputEl.value = selectedValue;\n                                return true;\n                            },\n                            onDestroy: () => {\n                                lookupGrid.destroy();\n                                // return focus on button\n                                b.toDOM().focus();\n                            }\n                        });\n                    });\n                }));\n        });\n    }\n    setupDateTimeField(parent, attr, value, readOnly, hidden) {\n        const horizClass = isIE\n            ? 'kfrm-fields-ie is-horizontal'\n            : 'kfrm-fields is-horizontal';\n        const editFormat = getEditDateTimeFormat(attr.dataType);\n        let inputEl;\n        const mask = editFormat\n            .replace('yyyy', '9999')\n            .replace('MM', '99')\n            .replace('dd', '99')\n            .replace('HH', '99')\n            .replace('mm', '99')\n            .replace('ss', '99');\n        domel(parent)\n            .addChild('div', b => {\n            b\n                .addClass(horizClass)\n                .addChild('input', b => {\n                inputEl = b.toDOM();\n                b.name(attr.id);\n                b.type(hidden ? 'hidden' : this.resolveInputType(attr.dataType));\n                if (readOnly) {\n                    b.attr('readonly', '');\n                }\n                else {\n                    b.mask(mask);\n                    b.on('keypress', (ev) => this.applySumbit(ev))\n                        .on('input', ev => {\n                        b.removeClass('is-invalid');\n                        try {\n                            const newDate = utils$1.strToDateTime(inputEl.value, editFormat);\n                        }\n                        catch (e) {\n                            b.addClass('is-invalid');\n                        }\n                        finally {\n                        }\n                    })\n                        .on('blur', ev => {\n                        if (inputEl.value === mask.replace(/[9]/g, '_')) {\n                            inputEl.value = '';\n                        }\n                    });\n                }\n                b.value((utils$1.IsDefinedAndNotNull(value)\n                    ? i18n$1.dateTimeToStr(value, editFormat)\n                    : ''));\n            });\n            if (!readOnly)\n                b.addChild('button', b => b\n                    .addClass('kfrm-button')\n                    .attr('title', i18n$1.getText(attr.dataType !== DataType$1.Time\n                    ? 'CalendarBtnTitle'\n                    : 'TimerBtnTitle'))\n                    .addChild('i', b => b.addClass(attr.dataType !== DataType$1.Time\n                    ? 'ed-calendar-icon'\n                    : 'ed-timer-icon'))\n                    .on('click', (ev) => {\n                    let value;\n                    try {\n                        value = inputEl.value.length\n                            ? attr.dataType !== DataType$1.Time\n                                ? utils$1.strToDateTime(inputEl.value, editFormat)\n                                : utils$1.strToTime(inputEl.value)\n                            : new Date(new Date().setSeconds(0));\n                    }\n                    catch (_a) {\n                        value = new Date(new Date().setSeconds(0));\n                    }\n                    const pickerOptions = {\n                        zIndex: 9999999999,\n                        showCalendar: attr.dataType !== DataType$1.Time,\n                        showTimePicker: attr.dataType !== DataType$1.Date,\n                        onApply: (dateTime) => {\n                            dateTime.setSeconds(0);\n                            dateTime.setMilliseconds(0);\n                            inputEl.value = i18n$1.dateTimeToStr(dateTime, editFormat);\n                        }\n                    };\n                    const dtp = new DefaultDateTimePicker(pickerOptions);\n                    dtp.setDateTime(value);\n                    dtp.show(ev.target);\n                }).toDOM());\n        });\n    }\n    setupListField(parent, attr, value, values, readOnly) {\n        domel(parent)\n            .addChild('div', b => b\n            .addClass('kfrm-select full-width')\n            .addChild('select', b => {\n            if (readOnly)\n                b.attr('readonly', '');\n            b.attr('name', attr.id);\n            b.on('keypress', (ev) => this.applySumbit(ev));\n            if (values) {\n                for (let i = 0; i < values.length; i++) {\n                    const val = values[i];\n                    b.addOption({\n                        value: val.id,\n                        title: val.text,\n                        selected: i === 0\n                    });\n                }\n            }\n            b.value(value);\n        }));\n    }\n    setupFileField(parent, attr, readOnly, accept) {\n        domel(parent)\n            .addChild('input', b => {\n            if (readOnly)\n                b.attr('readonly', '');\n            b.name(attr.id)\n                .type(this.resolveInputType(attr.dataType));\n            b.attr('accept', accept);\n        });\n    }\n    setupTextField(parent, attr, value, readOnly, hidden) {\n        domel(parent)\n            .addChild('input', b => {\n            if (readOnly) {\n                b.attr('readonly', '');\n            }\n            b.type(hidden ? 'hidden' : this.resolveInputType(attr.dataType));\n            b.name(attr.id)\n                .type(this.resolveInputType(attr.dataType));\n            if (attr.dataType == DataType$1.Bool) {\n                if (value)\n                    b.attr('checked', '');\n            }\n            else {\n                b.on('keypress', (ev) => this.applySumbit(ev))\n                    .value(utils$1.IsDefinedAndNotNull(value)\n                    ? value.toString()\n                    : '');\n            }\n        });\n    }\n    setupTextArea(parent, attr, value, readOnly) {\n        // feature: modify size in value editor ??\n        domel(parent)\n            .addChild('textarea', b => {\n            if (readOnly)\n                b.attr('readonly', '');\n            b.attr('name', attr.id);\n            b.setStyle('height', `120px`);\n            b.value(utils$1.IsDefinedAndNotNull(value)\n                ? value.toString()\n                : '');\n        });\n    }\n    addFormField(parent, attr) {\n        const value = (this.params.values && attr.kind !== EntityAttrKind$1.Lookup)\n            ? this.params.values.getValue(attr.id)\n            : !this.params.isEditForm\n                ? attr.defaultValue\n                : undefined;\n        const editor = this.resolveEditor(attr);\n        const readOnly = this.params.isEditForm && (attr.isPrimaryKey || !attr.isEditable);\n        const required = !attr.isNullable;\n        if (isIE) {\n            parent = domel('div', parent)\n                .addClass('kfrm-field-ie')\n                .toDOM();\n        }\n        domel(parent)\n            .addChild('label', b => {\n            b.attr('for', attr.id);\n            b.addHtml(`${attr.caption} ${required ? '<sup style=\"color: red\">*</sup>' : ''}: `);\n            if (attr.description) {\n                b.addChild('div', b => b\n                    .attr('title', attr.description)\n                    .addClass('question-mark')\n                    .setStyle('vertical-align', 'middle')\n                    .setStyle('display', 'inline-block'));\n            }\n        });\n        const hidden = attr.isPrimaryKey;\n        if (attr.kind === EntityAttrKind$1.Lookup) {\n            this.setupLookupField(parent, attr, readOnly, value);\n            return;\n        }\n        switch (editor.tag) {\n            case EditorTag.DateTime:\n                this.setupDateTimeField(parent, attr, value, readOnly, hidden);\n                break;\n            case EditorTag.List:\n                this.setupListField(parent, attr, value, editor.values, readOnly);\n                break;\n            case EditorTag.File:\n                this.setupFileField(parent, attr, readOnly, editor.accept);\n                break;\n            case EditorTag.Edit:\n            default:\n                if (editor.multiline) {\n                    this.setupTextArea(parent, attr, value, readOnly);\n                }\n                else {\n                    this.setupTextField(parent, attr, value, readOnly, hidden);\n                }\n                break;\n        }\n    }\n    resolveInputType(dataType) {\n        if (dataType === DataType$1.Bool)\n            return 'checkbox';\n        if (dataType === DataType$1.Blob)\n            return 'file';\n        return 'text';\n    }\n    resolveEditor(attr) {\n        let editor = attr.defaultEditor || new ValueEditor();\n        if (editor.tag == EditorTag.Unknown) {\n            if (utils$1.getDateDataTypes().indexOf(attr.dataType) >= 0) {\n                editor.tag = EditorTag.DateTime;\n            }\n            else {\n                editor.tag = EditorTag.Edit;\n            }\n        }\n        return editor;\n    }\n    applySumbit(ev) {\n        if (ev.keyCode === 13) {\n            this.sumbitCallback && this.sumbitCallback();\n            return false;\n        }\n        return false;\n    }\n    onSubmit(sumbitCallback) {\n        this.sumbitCallback = sumbitCallback;\n        return this;\n    }\n    build() {\n        let fb;\n        const formHtml = domel('div')\n            .addClass('kfrm-form')\n            .addChild('div', b => b\n            .addClass(`errors-block`)\n            .toDOM())\n            .addChild('div', b => {\n            b.addClass(`${isIE\n                ? 'kfrm-fields-ie col-ie-1-4 label-align-right'\n                : 'kfrm-fields col-a-1 label-align-right'}`);\n            fb = b;\n        })\n            .toDOM();\n        this.form['setHtmlInt'](formHtml);\n        for (const attr of this.context.getActiveEntity().attributes) {\n            if (!this.params.isEditForm && !attr.showOnCreate)\n                continue;\n            if (!attr.isPrimaryKey && this.params.isEditForm && !attr.showOnEdit) {\n                continue;\n            }\n            this.addFormField(fb.toDOM(), attr);\n        }\n        return this.form;\n    }\n}\n\nclass ProgressBar {\n    constructor(slot) {\n        this.slot = slot;\n        this.hide();\n        this.slot.classList.add('ed-progress-bar');\n    }\n    show() {\n        this.slot.style.removeProperty('display');\n    }\n    hide() {\n        this.slot.style.display = 'none';\n    }\n}\n\nclass EasyDataServerLoader {\n    constructor(context) {\n        this.context = context;\n    }\n    loadChunk(params) {\n        const url = this.context.resolveEndpoint('FetchDataset', { sourceId: params.sourceId || this.context.getActiveEntity().id });\n        delete params.sourceId;\n        this.context.startProcess();\n        const http = this.context.getHttpClient();\n        return http.post(url, params)\n            .then((result) => {\n            const dataTable = new EasyDataTable({\n                chunkSize: 1000\n            });\n            const resultSet = result.resultSet;\n            for (const col of resultSet.cols) {\n                dataTable.columns.add(col);\n            }\n            for (const row of resultSet.rows) {\n                dataTable.addRow(row);\n            }\n            let totalRecords = 0;\n            if (result.meta && result.meta.totalRecords) {\n                totalRecords = result.meta.totalRecords;\n            }\n            return {\n                table: dataTable,\n                total: totalRecords,\n                hasNext: !params.needTotal\n                    || params.offset + params.limit < totalRecords\n            };\n        })\n            .finally(() => {\n            this.context.endProcess();\n        });\n    }\n}\n\nclass DataContext {\n    constructor(options) {\n        this.endpoints = new Map();\n        this.endpointVarsRegex = /\\{.*?\\}/g;\n        this.options = options || {};\n        this.http = new HttpClient();\n        this.model = new MetaData();\n        this.model.id = options.metaDataId || '__default';\n        this.dataLoader = new EasyDataServerLoader(this);\n        const dataTableOptions = Object.assign({ loader: this.dataLoader }, options.dataTable);\n        this.data = new EasyDataTable(dataTableOptions);\n        this.setDefaultEndpoints(this.options.endpoint || '/api/easydata');\n    }\n    getActiveEntity() {\n        return this.activeEntity;\n    }\n    setActiveSource(entityId) {\n        this.activeEntity = this.model.getRootEntity().subEntities\n            .filter(e => e.id == entityId)[0];\n    }\n    getMetaData() {\n        return this.model;\n    }\n    getData() {\n        return this.data;\n    }\n    getDataLoader() {\n        return this.dataLoader;\n    }\n    createFilter(sourceId, data, isLookup) {\n        return new TextDataFilter(this.dataLoader, data || this.getData(), sourceId || this.activeEntity.id, isLookup);\n    }\n    loadMetaData() {\n        const url = this.resolveEndpoint('GetMetaData');\n        this.startProcess();\n        return this.http.get(url)\n            .then(result => {\n            if (result.model) {\n                this.model.loadFromData(result.model);\n            }\n            return this.model;\n        })\n            .catch(error => {\n            console.error(`Error: ${error.message}. Source: ${error.sourceError}`);\n            return null;\n        })\n            .finally(() => {\n            this.endProcess();\n        });\n    }\n    getHttpClient() {\n        return this.http;\n    }\n    fetchDataset() {\n        this.data.clear();\n        return this.dataLoader.loadChunk({ offset: 0, limit: this.data.chunkSize, needTotal: true })\n            .then(result => {\n            for (const col of result.table.columns.getItems()) {\n                this.data.columns.add(col);\n            }\n            this.data.setTotal(result.total);\n            for (const row of result.table.getCachedRows()) {\n                this.data.addRow(row);\n            }\n            return this.data;\n        });\n    }\n    fetchRecord(keys, sourceId) {\n        const url = this.resolveEndpoint('FetchRecord', { sourceId: sourceId || this.activeEntity.id });\n        this.startProcess();\n        return this.http.get(url, { queryParams: keys })\n            .finally(() => this.endProcess());\n    }\n    createRecord(obj, sourceId) {\n        const url = this.resolveEndpoint('CreateRecord', { sourceId: sourceId || this.activeEntity.id });\n        this.startProcess();\n        return this.http.post(url, obj, { dataType: 'json' })\n            .finally(() => this.endProcess());\n    }\n    updateRecord(obj, sourceId) {\n        const url = this.resolveEndpoint('UpdateRecord', { sourceId: sourceId || this.activeEntity.id });\n        this.startProcess();\n        return this.http.post(url, obj, { dataType: 'json' })\n            .finally(() => this.endProcess());\n    }\n    deleteRecord(obj, sourceId) {\n        const url = this.resolveEndpoint('DeleteRecord', { sourceId: sourceId || this.activeEntity.id });\n        this.startProcess();\n        return this.http.post(url, obj, { dataType: 'json' })\n            .finally(() => this.endProcess());\n    }\n    setEndpoint(key, value) {\n        this.endpoints.set(key, value);\n    }\n    setEnpointIfNotExist(key, value) {\n        if (!this.endpoints.has(key))\n            this.endpoints.set(key, value);\n    }\n    resolveEndpoint(endpointKey, options) {\n        options = options || {};\n        let result = this.endpoints.get(endpointKey);\n        if (!result) {\n            throw endpointKey + ' endpoint is not defined';\n        }\n        let matches = result.match(this.endpointVarsRegex);\n        if (matches) {\n            for (let match of matches) {\n                let opt = match.substring(1, match.length - 1);\n                let optVal = options[opt];\n                if (!optVal) {\n                    if (opt == 'modelId') {\n                        optVal = this.model.getId();\n                    }\n                    else if (opt == 'sourceId') {\n                        optVal = this.activeEntity.id;\n                    }\n                    else {\n                        throw `Parameter [${opt}] is not defined`;\n                    }\n                }\n                result = result.replace(match, optVal);\n            }\n        }\n        return result;\n    }\n    startProcess() {\n        if (this.options.onProcessStart)\n            this.options.onProcessStart();\n    }\n    endProcess() {\n        if (this.options.onProcessEnd)\n            this.options.onProcessEnd();\n    }\n    setDefaultEndpoints(endpointBase) {\n        this.setEnpointIfNotExist('GetMetaData', combinePath(endpointBase, 'models/{modelId}'));\n        this.setEnpointIfNotExist('FetchDataset', combinePath(endpointBase, 'models/{modelId}/sources/{sourceId}/fetch'));\n        this.setEnpointIfNotExist('FetchRecord', combinePath(endpointBase, 'models/{modelId}/sources/{sourceId}/fetch'));\n        this.setEnpointIfNotExist('CreateRecord', combinePath(endpointBase, 'models/{modelId}/sources/{sourceId}/create'));\n        this.setEnpointIfNotExist('UpdateRecord', combinePath(endpointBase, 'models/{modelId}/sources/{sourceId}/update'));\n        this.setEnpointIfNotExist('DeleteRecord', combinePath(endpointBase, 'models/{modelId}/sources/{sourceId}/delete'));\n    }\n}\n\nclass TypeValidator extends Validator {\n    constructor() {\n        super();\n        this.name = 'Type';\n    }\n    validate(attr, value) {\n        if (!utils$1.IsDefinedAndNotNull(value) || value == '')\n            return { successed: true };\n        if (utils$1.isNumericType(attr.dataType)) {\n            if (!utils$1.isNumeric(value))\n                return {\n                    successed: false,\n                    messages: [i18n$1.getText('NumberError')]\n                };\n            if (utils$1.isIntType(attr.dataType)\n                && !Number.isInteger(Number.parseFloat(value))) {\n                return {\n                    successed: false,\n                    messages: [i18n$1.getText('IntNumberError')]\n                };\n            }\n        }\n        return { successed: true };\n    }\n}\n\nclass RequiredValidator extends Validator {\n    constructor() {\n        super();\n        this.name = 'Required';\n    }\n    validate(attr, value) {\n        if (!attr.isNullable && (!utils$1.IsDefinedAndNotNull(value)\n            || value === ''))\n            return {\n                successed: false,\n                messages: [i18n$1.getText('RequiredError')]\n            };\n        return { successed: true };\n    }\n}\n\nclass EntityDataView {\n    constructor(slot, context, basePath, options) {\n        this.slot = slot;\n        this.context = context;\n        this.basePath = basePath;\n        this.options = {\n            showFilterBox: true,\n            showBackToEntities: true\n        };\n        this.defaultValidators = [new RequiredValidator(), new TypeValidator()];\n        this.options = utils$1.assignDeep(this.options, options || {});\n        this.dlg = new DefaultDialogService();\n        const ent = this.context.getActiveEntity();\n        if (!ent) {\n            throw \"Can't find active entity for \" + window.location.pathname;\n        }\n        this.slot.innerHTML += `<h1>${ent.captionPlural || ent.caption}</h1>`;\n        if (this.options.showBackToEntities) {\n            domel(this.slot)\n                .addChild('a', b => b\n                .attr('href', 'javascript:void(0)')\n                .text(`← ${i18n$1.getText('BackToEntities')}`)\n                .on('click', (e) => {\n                e.preventDefault();\n                setLocation(this.basePath);\n            }));\n        }\n        this.renderGrid();\n    }\n    syncGridColumnHandler(column) {\n        if (column.dataColumn) {\n            const attr = this.context.getMetaData().getAttributeById(column.dataColumn.id);\n            if (attr) {\n                column.isVisible = attr.showOnView;\n            }\n        }\n    }\n    renderGrid() {\n        this.context.fetchDataset()\n            .then(result => {\n            const gridSlot = document.createElement('div');\n            this.slot.appendChild(gridSlot);\n            gridSlot.id = 'Grid';\n            this.grid = new EasyGrid(utils$1.assignDeep({\n                slot: gridSlot,\n                dataTable: result,\n                paging: {\n                    pageSize: 15,\n                    allowPageSizeChange: true,\n                    pageSizeItems: [15, 30, 50, 100, 200]\n                },\n                showPlusButton: this.context.getActiveEntity().isEditable,\n                plusButtonTitle: i18n$1.getText('AddRecordBtnTitle'),\n                showActiveRow: false,\n                onPlusButtonClick: this.addClickHandler.bind(this),\n                onGetCellRenderer: this.manageCellRenderer.bind(this),\n                onRowDbClick: this.rowDbClickHandler.bind(this),\n                onSyncGridColumn: this.syncGridColumnHandler.bind(this)\n            }, this.options.grid || {}));\n            if (this.options.showFilterBox) {\n                let filterWidgetSlot;\n                const filterBarDiv = domel('div')\n                    .addClass(`kfrm-form`)\n                    .setStyle('margin', '10px 0px')\n                    .addChild('div', b => filterWidgetSlot = b.toDOM()).toDOM();\n                this.slot.insertBefore(filterBarDiv, gridSlot);\n                const dataFilter = this.context.createFilter();\n                this.filterWidget = new TextFilterWidget(filterWidgetSlot, this.grid, dataFilter);\n            }\n        });\n    }\n    manageCellRenderer(column, defaultRenderer) {\n        if (column.isRowNum) {\n            column.width = 110;\n            return (value, column, cell, rowEl) => {\n                const b = domel('div', cell)\n                    .addClass(`keg-cell-value`);\n                if (this.context.getActiveEntity().isEditable) {\n                    b.addChild('a', b => b\n                        .attr('href', 'javascript:void(0)')\n                        .text(i18n$1.getText('EditBtn'))\n                        .on('click', (ev) => this.editClickHandler(ev, parseInt(rowEl.getAttribute('data-row-idx')))))\n                        .addChild('span', b => b.text(' | '))\n                        .addChild('a', b => b\n                        .attr('href', 'javascript:void(0)')\n                        .text(i18n$1.getText('DeleteBtn'))\n                        .on('click', (ev) => this.deleteClickHandler(ev, parseInt(rowEl.getAttribute('data-row-idx')))));\n                }\n            };\n        }\n    }\n    addClickHandler() {\n        const activeEntity = this.context.getActiveEntity();\n        const form = new EntityEditFormBuilder(this.context)\n            .onSubmit(() => dlg.submit())\n            .build();\n        form.useValidators(this.defaultValidators);\n        const dlg = this.dlg.open({\n            title: i18n$1.getText('AddDlgCaption')\n                .replace('{entity}', activeEntity.caption),\n            body: form.getHtml(),\n            onSubmit: () => {\n                if (!form.validate())\n                    return false;\n                form.getData()\n                    .then(obj => this.context.createRecord(obj))\n                    .then(() => {\n                    return this.refreshData();\n                })\n                    .catch((error) => {\n                    this.processError(error);\n                });\n            }\n        });\n    }\n    editClickHandler(ev, rowIndex) {\n        this.grid.getData().getRow(rowIndex)\n            .then(row => {\n            if (row) {\n                this.showEditForm(row);\n            }\n        });\n    }\n    showEditForm(row) {\n        const activeEntity = this.context.getActiveEntity();\n        const form = new EntityEditFormBuilder(this.context, { isEditForm: true, values: row })\n            .onSubmit(() => dlg.submit())\n            .build();\n        form.useValidators(this.defaultValidators);\n        const dlg = this.dlg.open({\n            title: i18n$1.getText('EditDlgCaption')\n                .replace('{entity}', activeEntity.caption),\n            body: form.getHtml(),\n            onSubmit: () => {\n                if (!form.validate())\n                    return false;\n                form.getData()\n                    .then(obj => this.context.updateRecord(obj))\n                    .then(() => {\n                    return this.refreshData();\n                })\n                    .catch((error) => {\n                    this.processError(error);\n                });\n            }\n        });\n    }\n    rowDbClickHandler(ev) {\n        if (this.context.getActiveEntity().isEditable) {\n            this.showEditForm(ev.row);\n        }\n    }\n    deleteClickHandler(ev, rowIndex) {\n        this.grid.getData().getRow(rowIndex)\n            .then(row => {\n            if (row) {\n                const activeEntity = this.context.getActiveEntity();\n                const keyAttrs = activeEntity.getPrimaryAttrs();\n                const keyVals = keyAttrs.map(attr => row.getValue(attr.id));\n                const keys = keyAttrs.reduce((val, attr, index) => {\n                    const property = attr.id.substring(attr.id.lastIndexOf('.') + 1);\n                    val[property] = keyVals[index];\n                    return val;\n                }, {});\n                this.dlg.openConfirm(i18n$1.getText('DeleteDlgCaption')\n                    .replace('{entity}', activeEntity.caption), i18n$1.getText('DeleteDlgMessage')\n                    .replace('{recordId}', Object.keys(keys)\n                    .map(key => `${key}:${keys[key]}`).join(';')))\n                    .then((result) => {\n                    if (result) {\n                        this.context.deleteRecord(keys)\n                            .then(() => {\n                            return this.refreshData();\n                        })\n                            .catch((error) => {\n                            this.processError(error);\n                        });\n                    }\n                });\n            }\n        });\n    }\n    processError(error) {\n        this.dlg.open({\n            title: 'Ooops, something went wrong',\n            body: error.message,\n            closable: true,\n            cancelable: false\n        });\n    }\n    refreshData() {\n        return this.context.fetchDataset()\n            .then(() => {\n            let processed = false;\n            if (this.filterWidget) {\n                processed = this.filterWidget.applyFilter(false);\n            }\n            if (!processed) {\n                this.grid.refresh();\n            }\n        });\n    }\n}\n\nclass RootDataView {\n    constructor(slot, context, basePath) {\n        this.slot = slot;\n        this.context = context;\n        this.basePath = basePath;\n        this.metaData = this.context.getMetaData();\n        this.slot.innerHTML += `<h1>${i18n$1.getText('RootViewTitle')}</h1>`;\n        this.renderEntitySelector();\n    }\n    renderEntitySelector() {\n        const entities = this.metaData.getRootEntity().subEntities;\n        if (this.slot) {\n            domel(this.slot)\n                .addChild('div', b => b\n                .addClass('ed-root')\n                .addChild('div', b => b\n                .addClass('ed-menu-description')\n                .addText(i18n$1.getText(!this.metaData.isEmpty() ? 'EntityMenuDesc' : 'ModelIsEmpty')))\n                .addChild('ul', b => {\n                b.addClass('ed-entity-menu');\n                entities.forEach(ent => {\n                    b.addChild('li', b => {\n                        b.addClass('ed-entity-item')\n                            .on('click', () => {\n                            setLocation(`${this.basePath}/${decodeURIComponent(ent.id)}`);\n                        })\n                            .addChild('div', b => {\n                            b.addClass('ed-entity-item-caption')\n                                .addText(ent.captionPlural || ent.caption);\n                        });\n                        if (ent.description) {\n                            b.addChild('div', b => {\n                                b.addClass('ed-entity-item-descr')\n                                    .addText(`${ent.description}`);\n                            });\n                        }\n                    });\n                });\n            }));\n        }\n    }\n}\n\nclass EasyDataViewDispatcher {\n    constructor(options) {\n        this.options = {\n            container: '#EasyDataContainer',\n            basePath: 'easydata'\n        };\n        this.onSetLocation = () => {\n            this.setActiveView();\n        };\n        this.attach = () => {\n            window.addEventListener('ed_set_location', this.onSetLocation);\n            window.addEventListener('popstate', this.onSetLocation);\n        };\n        this.options = utils$1.assign(this.options, options || {});\n        if (this.options.rootEntity) {\n            this.options.showBackToEntities = false;\n            this.basePath = '/';\n        }\n        else {\n            this.basePath = this.normalizeBasePath(this.options.basePath);\n        }\n        this.setContainer(this.options.container);\n        const progressBarSlot = document.createElement('div');\n        const bar = new ProgressBar(progressBarSlot);\n        const parent = this.container.parentElement;\n        parent.insertBefore(progressBarSlot, parent.firstElementChild);\n        this.context = new DataContext({\n            endpoint: this.options.endpoint,\n            dataTable: this.options.dataTable,\n            onProcessStart: () => bar.show(),\n            onProcessEnd: () => bar.hide()\n        });\n    }\n    normalizeBasePath(basePath) {\n        basePath = this.trimSlashes(basePath);\n        const fullPath = decodeURIComponent(window.location.pathname);\n        const idx = fullPath.toLocaleLowerCase().indexOf(basePath);\n        return idx >= 0 ? fullPath.substring(0, idx + basePath.length) : '/';\n    }\n    trimSlashes(path) {\n        return path.replace(/^\\/|\\/$/g, '');\n    }\n    setContainer(container) {\n        if (!container) {\n            throw 'Container is undefined';\n        }\n        if (typeof container === 'string') {\n            if (container.length) {\n                if (container[0] === '.') {\n                    const result = document.getElementsByClassName(container.substring(1));\n                    if (result.length)\n                        this.container = result[0];\n                }\n                else {\n                    if (container[0] === '#') {\n                        container = container.substring(1);\n                    }\n                    this.container = document.getElementById(container);\n                }\n                if (!this.container) {\n                    throw Error('Unrecognized `container` parameter: ' + container + '\\n'\n                        + 'It must be an element ID, a class name (starting with .) or an HTMLElement object itself.');\n                }\n            }\n        }\n        else {\n            this.container = container;\n        }\n    }\n    getActiveSourceId() {\n        if (this.options.rootEntity)\n            return this.options.rootEntity;\n        const path = decodeURIComponent(window.location.pathname);\n        const idIndex = this.basePath.length + 1;\n        return idIndex < path.length ? path.substring(idIndex) : null;\n    }\n    run() {\n        this.attach();\n        return this.context.loadMetaData()\n            .then(() => {\n            this.setActiveView();\n        })\n            .catch(error => console.error(error));\n    }\n    setActiveView() {\n        this.clear();\n        const sourceId = this.getActiveSourceId();\n        if (sourceId) {\n            this.context.setActiveSource(sourceId);\n            window['EDView'] = new EntityDataView(this.container, this.context, this.basePath, this.options);\n        }\n        else {\n            window['EDView'] = new RootDataView(this.container, this.context, this.basePath);\n        }\n    }\n    clear() {\n        this.container.innerHTML = '';\n        this.context.getData().clear();\n    }\n    detach() {\n        window.removeEventListener('ed_set_location', this.onSetLocation);\n        window.removeEventListener('popstate', this.onSetLocation);\n    }\n}\n\nfunction addEasyDataCRUDTexts() {\n    i18n$1.updateDefaultTexts({\n        RequiredError: 'Value is required.',\n        NumberError: 'Value should be a number',\n        IntNumberError: 'Value should be an integer number',\n        DateTimeError: 'Invalid date or time value',\n        LookupSelectedItem: 'Selected item: ',\n        LookupDlgCaption: 'Select {entity}',\n        None: 'None',\n        NavigationBtnTitle: 'Navigation values',\n        CalendarBtnTitle: 'Open calendar',\n        TimerBtnTitle: 'Open timer',\n        AddBtnTitle: 'Add',\n        AddRecordBtnTitle: 'Add record',\n        EditBtn: 'Edit',\n        DeleteBtn: 'Delete',\n        SelectLink: '[ select ]',\n        AddDlgCaption: 'Create {entity}',\n        EditDlgCaption: 'Edit {entity}',\n        DeleteDlgCaption: 'Delete {entity}',\n        DeleteDlgMessage: 'Are you sure you want to remove this record: {{recordId}}?',\n        EntityMenuDesc: 'Click on an entity to view/edit its content',\n        BackToEntities: 'Back to entities',\n        SearchBtn: 'Search',\n        SearchInputPlaceholder: 'Search...',\n        RootViewTitle: 'Entities',\n        ModelIsEmpty: 'No entity was found.'\n    });\n}\naddEasyDataCRUDTexts();\n\nexport { DataContext, EasyDataServerLoader, EasyDataViewDispatcher, EntityDataView, EntityEditForm, EntityEditFormBuilder, ProgressBar, RequiredValidator, RootDataView, TextDataFilter, TextFilterWidget, TypeValidator, Validator };\n//# sourceMappingURL=easydata.crud.es.js.map\n"],"names":["DataType","EntityAttrKind","EditorTag","Unknown","Edit","DateTime","List","CustomList","File","SpecialDatesResolver","getDateByName","name","settings","this","Today","Date","Yesterday","d","setDate","getDate","Tomorrow","FirstDayOfMonth","LastDayOfMonth","setMonth","getMonth","FirstDayOfNextMonth","FirstDayOfPrevMonth","FirstDayOfYear","FirstDayOfPrevYear","setFullYear","getFullYear","FirstDayOfNextYear","FirstDayOfWeek","day","getDay","FirstDayOfPrevWeek","FirstDayOfNextWeek","HttpMethod","specialDatesResolver","HttpRequest$1","constructor","xhr","descriptor","method","url","headers","queryParams","data","setHeader","value","setQueryParam","getXMLHttpRequest","getResponseHeaders","readyState","HEADERS_RECEIVED","arr","getAllResponseHeaders","trim","split","headerMap","line","parts","header","shift","join","open","UNSENT","Object","keys","length","encodeURI","map","param","setRequestHeader","abort","utils","getAllDataTypes","values","filter","item","getDateDataTypes","Time","getStringDataTypes","String","Memo","FixedChar","_numericTypes","Byte","Word","Int32","Int64","Float","Currency","Autoinc","getNumericDataTypes","_intTypes","assignDeepCore","hashSet","target","sources","source","key","hasOwnProperty","sourceVal","has","get","Array","isArray","createArrayFrom","set","create","getPrototypeOf","collection","result","push","assign","args","i","assignDeep","WeakMap","getIfDefined","defaultValue","IsDefinedAndNotNull","copyArrayTo","collection1","collection2","len1","len2","findItemById","array","id","arrLength","idx","findItemIndexById","indexOfArrayItem","indexOf","len","moveArrayItem","index1","index2","splice","removeArrayItem","index","insertArrayItem","fillArray","start","end","relativeStart","k","Math","max","min","relativeEnd","undefined","final","shiftToFitWindow","absLeft","width","body","document","getElementsByTagName","winWidth","window","innerWidth","documentElement","clientWidth","absRight","isObject","val","isNumericType","dtype","isIntType","isNumeric","isNaN","parseFloat","isFinite","areCompatibleDataTypes","type1","type2","isPropSet","obj","propName","toLowerCase","toUpperCase","symbols","squeeze","str","maxlen","step","ch","nextIndex","getRandomInt","floor","random","safeParseInt","res","parseInt","generateId","prefix","prfx","pml","ptt","squeezeMoniker","randCharPart","randInt","targetBase","buffer","rest","intToNumBase","getTime","strToDateTime","format","normalizedValue","replace","formatItems","dateItems","monthIndex","dayIndex","yearIndex","hourIndex","minutesIndex","secondsIndex","today","year","month","getDaysInMonth","hour","minute","second","_a","strToTime","timeItems","HttpActionResult$1","request","promise","getPromise","getRequest","then","onfulfilled","onrejected","catch","onfinally","finally","Error","status","message","super","i18n","currentLocale","englishUSLocaleSettings","shortDateFormat","longDateFormat","editDateFormat","shortTimeFormat","editTimeFormat","longTimeFormat","shortMonthNames","longMonthNames","shortWeekDayNames","longWeekDayNames","decimalSeparator","currency","defaultLocale","localeId","englishName","displayName","texts","ButtonOK","ButtonCancel","Yes","No","True","False","allLocales","mappers","mapInfo","info","mapper","getCurrentLocale","setCurrentLocale","newLocale","getLocaleSettings","updateLocaleSettings","settingsToUpdate","updateLocaleInfo","localeData","localeInfoToUpdate","loadBrowserLocaleSettings","now","dateStr","toLocaleDateString","timeStr","toLocaleTimeString","dateFormat","timeFormat","determineSettingsByLocale","navigator","language","addMapper","getLocales","locale","sort","a","b","setLocale","l","console","warn","getText","textsObj","resText","argLength","getOneLocaleSetting","getShortMonthName","monthNum","getLongMonthName","getShortWeekDayName","dayNum","toString","getLongWeekDayName","updateLocaleTexts","error","updateDefaultTexts","addLocale","localeInfo","resetLocales","DT_FORMAT_RGEX","dateTimeToStr","date","yearStr","getHours","getMinutes","getSeconds","hour12","isPm","matches","yyyy","yy","substring","MMMM","MMM","MM","M","dd","HH","H","hh","h","tt","mm","ss","match","$1","buildShortDateTimeFormat","dataType","localeSettings","buildLongDateTimeFormat","dateTimeToStrEx","dateTime","numberToStr","number","type","charAt","cachedSequenceFormats","v","Number","forEach","formatWithSequence","slice","toLocaleString","digits","style","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","getNumberFormatOptions","mask","reverse","convertWithMask","trunc","booleanToStr","bool","MetaEntity$1","parent","isEditable","caption","description","attributes","subEntities","loadFromData","model","dto","captionPlural","namePlur","desc","ied","ents","newEntity","createEntity","attrs","newAttr","createEntityAttr","scan","processAttribute","processEntity","opts","stop","internalProcessEntity","entity","attrCount","attr","subEntityCount","getFirstPrimaryAttr","getPrimaryAttrs","isPrimaryKey","MetaEntityAttr$1","size","isForeignKey","isNullable","showOnView","showOnCreate","showOnEdit","showInLookup","lookupAttr","expr","kind","Data","cptn","ipk","ifk","lattr","lookupEntity","lent","dataAttr","dattr","lookupDataAttr","ldattr","isDataType","defVal","nul","ivis","sov","soc","soe","sil","displayFormat","dfmt","udata","userData","edtr","defaultEditor","getEditorById","createValueEditor","ValueEditor$1","tag","resType","defValue","defval","rtype","accept","multiline","subType","getValueText","text","ColumnAlignment","DataColumn$1","label","originAttrId","isAggr","groupFooterColumnTemplate","gfct","calculatedWidth","DataColumnList$1","items","_dateColumnIdx","count","add","colOrDesc","col","DataColumn","updateDateColumnIdx","getItems","put","move","newIndex","oldIndex","getIndex","getDateColumnIndexes","removeAt","removeDate","clear","DataRow$3","columns","toArray","from","getValue","colIdOrIndex","RangeError","setValue","EasyGuid$2","newGuid","c","r","liquid","renderLiquidTemplate","template","vars","liquidVarRegexp","RegExp","i18n$3","x","NaN","ceil","colStore","aggregates","groups","useGrandTotals","useRecordCount","_caseSensitiveGroups","COUNT_FIELD_NAME","caseSensitiveGroups","updateCompareProc","compareValues","strictCompare","caseInsensitiveCompare","addGroup","cols","getColumnIds","to","validateColumns","hasColumnsInUse","addAggregateColumn","colIndexOrId","funcId","colId","validateAggregate","addGrandTotals","addCounts","getGroups","grp","concat","getInternalGroups","lastGroup","getAggregates","hasAggregates","hasGroups","hasGrandTotals","hasRecordCount","isEmpty","drop","group","aggr","needAggrCalculation","saveToData","ugt","urc","csg","buildGroupKey","row","caseInsensitive","keyVal","value1","value2","options","_chunkSize","_elasticChunks","cachedRows","total","loader","needTotal","isInMemory","chunkSize","elasticChunks","inMemory","_columns","DataColumnList","onUpdate","colDesc","rows","rowData","createRow","addRow","getRows","params","fromIndex","pageSize","page","offset","limit","endIndex","Promise","resolve","loadChunk","prototype","apply","table","getCachedRows","getCachedCount","fireUpdated","getRow","getTotal","setTotal","dataOrRow","dateIdx","DataRow","column","mapDate","rowOrValues","newRow","cachedTotal","totalIsKnown","silentMode","events","subscribe","eventType","callback","event","getEventRecByType","eventCallback","EasyGuid","eventCallbacks","unsubscribe","callbackId","fire","postpone","force","eventRec","eqevent","emitAllFunc","setTimeout","enterSilentMode","exitSilentMode","isSilent","HttpClient","responseBody","_responseBody","defaultHeaders","customPayload","send","Get","post","Post","Put","Delete","contentType","XMLHttpRequest","HttpRequest","beforeEachRequest","onRequest","dataToSend","JSON","stringify","HttpActionResult","reject","responseType","onerror","HttpResponseError","responseText","onreadystatechange","responseContentType","getResponseHeader","responseObj","response","parse","onResponse","decodeArrayBuffer","uintArray","reader","FileReader","onloadend","DONE","readAsText","Blob","mainEntity","rootEntity","displayFormats","Map","getMainEntity","MetaEntity","MetaEntityAttr","ValueEditor","loadFromJSON","stringJson","version","vers","editors","newEditor","entroot","dtypeStr","formats","getDisplayFormats","getDisplayFormatsForType","getDefaultFormat","f","isdef","setData","getId","getName","getRootEntity","editorId","editor","getAttributeById","attrId","getEntityAttrById","checkAttrProperty","attribute","listByEntityWithFilter","filterFunc","ent","entIdx","newEnt","isEntity","attrIdx","listByEntity","resultEntities","resultAttributes","newOpts","includeRootData","sortCheck","sortEntities","attrPlacement","addDefaultValueEditors","ve","addOrUpdateValueEditor","getEntitiesTree","getEntitiesTreeWithFilter","getFullEntityPathByAttr","sep","getEntityPathByAttr","root","entityCaption","entityText","getAttributeText","attrText","entityPath","runThroughEntities","getFirstAttributeByFilter","dt","_name","asTime","path1","path2","resolver","times","repeat","symbol","lastIndexOf","DataRow$2","EasyGuid$1","EventEmitter$1","browserUtils","hideElement","element","display","showElement","getScrollPos","docElem","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getElementAbsolutePos","y","position","defaultBoundingClientRect","right","bottom","height","box","getBoundingClientRect","scollPos","clientTop","clientLeft","round","getWinSize","innerHeight","i18n$2","_isFirefox","_isIE","IsIE","ua","userAgent","IsEdge","includes","IsFirefox","_isMobileMode","mobileModeChangeHandler","_detectedIsMobileMode","detectIsMobileMode","oldValue","isMobileMode","matchMedia","newValue","addEventListener","setIsMobileMode","onMobileModeChanged","getMobileCssClass","eqCssPrefix","input","maskPattern","inputHandler","e","mskd","startSelection","selectionStart","el","t","test","selectionEnd","keyCode","preventDefault","selection","onlyLodash","createEvent","initEvent","dispatchEvent","char","fromCharCode","charCode","DomElementBuilder$1","createElement","parentElement","appendChild","addChild","childBuilder","builder","domel","addChildElement","attrValue","setAttribute","focus","title","dataId","dataValue","removeAttribute","show","removeStyle","hide","toHide","setStyle","visible","isVisible","offsetWidth","offsetHeight","getClientRects","addClass","className","classNames","fullList","classList","removeClass","remove","toggleClass","toggle","on","listener","eventTypes","off","removeEventListener","styleId","styleValue","setProperty","removeProperty","innerText","html","innerHTML","oldElem","tagName","replaceWith","addText","textEl","createTextNode","addHtml","toDOM","appendTo","DomElementBuilder","valueAsDate","valueAsNumber","addOption","option","selected","HTMLDivElement","HTMLSpanElement","HTMLAnchorElement","HTMLButtonElement","HTMLImageElement","HTMLInputElement","DomInputElementBuilder","HTMLTextAreaElement","DomTextAreaElementBuilder","HTMLSelectElement","DomSelectElementBuilder","touchEventIsDefined","TouchEvent","DropEffect","EqDragEvent$1","dragImage","sourceEvent","dropEffect","Allow","pageX","pageY","MouseEvent","touches","Position$1","ev","DragManager$1","delta","draggableItem","finishedSuccessfully","mouseDownPosition","containerDescriptors","containerDescriptorIndex","None","classPrefix","DRAG_DISABLED_ATTR","registerDraggableItem","ondragstart","detectDragging","hasAttribute","stopPropagation","cursorPosition","Position","abs","startDragging","mouseMoveEventListener","mouseMoveDragListener","beforeDragStart","cloneNode","renderer","updateCusror","updateImageClass","scope","updateDragItemPosition","EqDragEvent","onDragStart","mouseDownListener","mouseUpListener","endDraggind","dropContDesc","container","scopes","onDrop","onDragLeave","onDragEnd","removeChild","registerDropContainer","removeDropContainer","descriptorOrSlot","descs","detectDragEnterEvent","dragEnterEvent","detectDragLeaveEvent","dragLeaveEvent","onDragOver","setCursorStyle","Forbid","cursor","children","pos","onDragEnter","containerPos","eqDragManager","DragManager","AutoResizeColumns","GridColumnAlign","GridColumn$1","grid","isRowNum","_label","_description","align","NONE","dataColumn","widthOptions","columnWidths","alignment","Left","LEFT","Center","CENTER","Right","RIGHT","MapAlignment","default","rowNumColumn","GridColumnList$1","columnList","sync","hasRowNumCol","rowNumCol","GridColumn","onSyncGridColumn","cssPrefix$1","DFMT_REGEX","CellRendererType","StringCellRendererDefault","cellValueElement","rowElement","NumberCellRendererDefault","strValue","_","DateTimeCellRendererDefault","isDate","call","timeOptions","BoolCellRendererDefault","GridCellRendererStore$1","renderers","defaultRenderers","registerRenderer","setDefaultRenderer","STRING","NUMBER","DATETIME","BOOL","getDefaultRenderer","columnType","cellType","getCellType","getDefaultRendererByType","rendererType","getRenderer","Bool","Calendar$1","cssPrefix","slot","yearRange","currentDate","dateChanged","onDateChanged","DateTimePicker$1","calendar","timePicker","render","setDateTime","currentDateTime","setTime","getDateTime","showCalendar","createCalendar","showDateTimeInput","timePickerIsUsed","showTimePicker","oneClickDateSelection","dateTimeChanged","createTimePicker","onTimeChanged","time","setHours","setMinutes","anchor","beforeShow","clientHeight","onApply","destroy","cancel","onCancel","onDateTimeChanged","Calendar","daysOfWeek","months","calendarBody","isManualInputChanging","selectedMonth","selectedYear","rerenderMonth","renderManualDateInput","headerTextElem","renderCalendarButtons","getInputDateFormat","newDate","manualInputElem","jump","updateDisplayedDateValue","prev","selectMonthElem","selectYearElem","next","rerenderSelectYear","exec","minusYear","plusYear","op","firstDay","daysInMonth","getAttribute","dayOfWeek","onDrawDay","cellsDrawnInLastRow","cellsToDraw","TimePicker$1","currentTime","timeChanged","TimePicker","updateDisplayedTime","hoursInput","minutesInput","timeText","slidersBuilder","timeToDraw","DialogFooterAlignment","DefaultDialogService$1","DefaultDialogService","openConfirm","content","closable","submitable","cancelable","onSubmit","openPrompt","submitOnEnter","arrangeParents","beforeOpen","getElementById","processInput","dialog","DefaultDialog","onDestroy","dlg","untrack","track","createSet","DefaultDialogSet","openDialogs","openProgress","DefaultProgressDialog","getAllDialogs","closeAllDialogs","close","DefaultDialog$1","submitHandler","token","cancelHandler","keydownHandler","isActiveDialog","dialogId","windowElement","headerElement","alertElement","bodyElement","alignClass","footerAlignment","footerElement","bb","submitButtonText","recaptchaSiteKey","grecaptcha","ready","execute","action","cancelButtonText","getData","getRootElement","getSubmitButtonElement","getCancelButtonElement","windowDiv","querySelector","querySelectorAll","clearAlert","onInput","onShow","submit","disableButtons","button","disabled","enableButtons","showAlert","reason","alert","windowDivs","turnOn","contentElement","progressElement","determinated","updateContent","updateProgress","progress","in01","num","DefaultDialogSet$1","dialogService","currentDialog","currentIndex","getCurrent","openNext","openPrev","dlgOptions","PRE_SELECT","JUMP_TO","GridPageInfo","GridItemsPerPage","ButtonApply","ButtonNow","LblTotal","TimeSpanPicker","setupDialog","weekStart","append","drawDialog","calendar1","calendar2","alignDate","finish","represent","setSeconds","setMilliseconds","select","THIS_WEEK","LAST_WEEK","THIS_MONTH","FIRST_MONTH","LAST_MONTH","THIS_YEAR","QUARTER_1","QUARTER_2","QUARTER_3","QUARTER_4","UNDEF","TODAY","YESTERDAY","TOMORROW","WEEK_START","WEEK_END","MONTH_START","MONTH_END","YEAR_START","YEAR_END","DefaultCalendar","cell","cal","jumpTo","curr","interval","constants","log","dialogs","DataType$1","EntityAttrKind$1","DateTimePicker","sb","zIndex","renderButtons","globalMouseDownHandler","srcElement","contains","nowButton","submitButton","calendarSlot","timePickerSlot","DefaultTimePicker","anchorPos","parentPos","pagination","paginationOptions","maxButtonCount","useBootstrap","defaultDataGridOptions","dataTable","fixHeightOnFirstRender","syncGridColumns","useRowNumeration","allowDragDrop","calculator","paging","enabled","pageSizeItems","autoResize","Always","stringColumns","numberColumns","boolColumns","dateColumns","otherColumns","showPlusButton","viewportRowsCount","showActiveRow","rowsOnPagePromise","containerInitialHeight","firstRender","prevRowTotals","landingIndex","landingSlot","_activeRowIndex","mergeOptions","processColumnWidthsOptions","eventEmitter","EventEmitter","cellRendererStore","GridCellRendererStore","GridColumnList","setSlot","init","colWidthOptions","pagingOptions","knownTypes","getElementsByClassName","onInit","onRowClick","onRowDbClick","onPlusButtonClick","onColumnChanged","onColumnDeleted","onColumnMoved","onPageChanged","onActiveRowChanged","activeRowIndex","showLandingSlot","hideLandingSlot","refresh","fireEvent","columnId","getColumns","clearDOM","hasData","rootDiv","renderHeader","headerDiv","renderBody","bodyDiv","renderFooter","footerDiv","gridContainer","needAutoResize","Never","updateHeight","resizeColumns","firstRow","bodyCellContainerDiv","firstElementChild","viewportHeight","bodyViewportDiv","sbHeight","getContainerWidth","reduce","sum","current","headerViewportDiv","headerCellContainerDiv","headerRowDiv","hd","renderColumnHeader","renderHeaderButtons","containerWidth","colBuilder","colDiv","attrLabel","showAggrs","canShowAggregates","showProgress","getRowsToRender","hideProgress","rowsToRender","updateTotalsState","tr","renderRow","showGrandTotalsOnEachPage","isLastPage","onViewportKeydown","bind","aggrSettings","isLast","changeLevel","level","renderTotalsRow","applyGroupColumnTemplate","colIndex","renderCell","aggrContainer","getAggrContainer","aggrCols","getAggregateData","aggrColId","isLastGroupColumn","groupColIndex","aggrColIndex","groupFooterTemplate","firstChild","cellDiv","rowCount","ensureRowVisibility","rowOrIndex","getDataRow","rowRect","viewportRect","rowTop","rowBottom","windowHeight","footerPaginateDiv","renderPageNavigator","pageInfoBlock","renderPageInfoBlock","pageInfoDiv","fistPageRecordNum","lastPageRecordNum","totalStr","getLocalIndexByGlobal","getGlobalIndexByLocal","indexGlobal","rowBuilder","rowIndex","colindex","cellElement","valueCell","cellRenderer","getCellRenderer","onGetCellRenderer","setPage","paginateDiv","buttonClickHandler","renderPageCell","pageIndex","extreme","active","li","newA","ul","pageCount","zeroBasedIndex","firstPageIndex","lastPageIndex","allowPageSizeChange","selectChangeHandler","pageSizes","selectSize","sel","selOptions","selSet","Set","labelDiv","handler","handlerId","plusButtonTitle","colElems","rowElem","landingPos","newLandingIndex","colPos","insertBefore","updateActiveRow","activeRow","getActiveRow","visibility","sumWidth","headerCells","headerIdx","cellValues","maxWidth","whiteSpace","maxOption","minOption","cssClass","eventName","Event","duration","getComputedStyle","overflow","paddingTop","paddingBottom","marginTop","marginBottom","boxSizing","transitionProperty","transitionDuration","first","complete","wrapper","HttpMethod$1","utils$1","i18n$1","ColumnAlignment$1","MetaData","DataRow$1","EasyDataTable","combinePath","liquid$1","TextDataFilter","sourceTable","sourceId","isLookup","filterValue","justServerSide","applyCore","filters","class","lookup","filteredTable","applyInMemoryFilter","words","w","suitableColumns","hasEnterance","normalized","word","EasyGrid","DefaultDateTimePicker","internalDateFormat","internalTimeFormat","getEditDateTimeFormat","setLocation","path","state","history","pushState","Validator","DateTimeValidator","validate","successed","editFormat","messages","EntityEditForm","context","validators","getHtml","setHtmlInt","errorsDiv","clearErrors","inputs","isValid","getMetaData","validateValue","markInputValid","filePromises","property","checked","fileToBase64","files","mapValue","all","file","readAsDataURL","onload","useValidator","validator","useValidators","internalFormat","valid","TextFilterWidget","instantMode","instantTimeout","stringDefRenderer","highlightCellRenderer","numDefRenderer","horizClass","isEdgeOrIE","filterInput","inputKeydownHandler","inputKeyupHandler","clearButtonClickHander","searchButtonClickHandler","applyFilter","applyFilterTimeout","clearTimeout","checkChange","defaultRenderer","highlightText","HTMLElement","normalizedContent","indexInMas","lowerWord","highlightSpan","backgroundColor","item1","item2","addDelta","div","isIE","EntityEditFormBuilder","reset","form","setupLookupField","readOnly","inputEl","resolveInputType","lookupTable","chunkParams","getDataLoader","ds","widgetSlot","gridSlot","selectedSlot","selectedValue","updateSelectedValue","fetchRecord","lookupGrid","dataFilter","createFilter","setupDateTimeField","hidden","applySumbit","pickerOptions","dtp","setupListField","setupFileField","setupTextField","setupTextArea","addFormField","Lookup","isEditForm","resolveEditor","required","sumbitCallback","build","fb","formHtml","getActiveEntity","ProgressBar","EasyDataServerLoader","resolveEndpoint","startProcess","getHttpClient","resultSet","totalRecords","meta","hasNext","endProcess","DataContext","endpoints","endpointVarsRegex","http","metaDataId","dataLoader","dataTableOptions","setDefaultEndpoints","endpoint","activeEntity","setActiveSource","entityId","loadMetaData","sourceError","fetchDataset","createRecord","updateRecord","deleteRecord","setEndpoint","setEnpointIfNotExist","endpointKey","opt","optVal","onProcessStart","onProcessEnd","endpointBase","TypeValidator","isInteger","RequiredValidator","EntityDataView","basePath","showFilterBox","showBackToEntities","defaultValidators","location","pathname","renderGrid","syncGridColumnHandler","addClickHandler","manageCellRenderer","rowDbClickHandler","filterWidgetSlot","filterBarDiv","filterWidget","rowEl","editClickHandler","deleteClickHandler","refreshData","processError","showEditForm","keyAttrs","keyVals","processed","RootDataView","metaData","renderEntitySelector","entities","decodeURIComponent","RequiredError","NumberError","IntNumberError","DateTimeError","LookupSelectedItem","LookupDlgCaption","NavigationBtnTitle","CalendarBtnTitle","TimerBtnTitle","AddBtnTitle","AddRecordBtnTitle","EditBtn","DeleteBtn","SelectLink","AddDlgCaption","EditDlgCaption","DeleteDlgCaption","DeleteDlgMessage","EntityMenuDesc","BackToEntities","SearchBtn","SearchInputPlaceholder","RootViewTitle","ModelIsEmpty","onSetLocation","setActiveView","attach","normalizeBasePath","setContainer","progressBarSlot","bar","trimSlashes","fullPath","toLocaleLowerCase","getActiveSourceId","idIndex","run","detach"],"mappings":"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"}
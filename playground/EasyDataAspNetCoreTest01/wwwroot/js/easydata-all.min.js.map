{"version":3,"file":"easydata-all.min.js","sources":["../../../../node_modules/style-inject/dist/style-inject.es.js","../../../../easydata.js/packs/core/dist/easydata.core.esm.js","../../../../easydata.js/packs/ui/dist/easydata.ui.esm.js","../../../../easydata.js/packs/crud/dist/easydata.crud.esm.js","../../ts/easydata.ts"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\n/*\n * EasyData.JS Core v1.5.2\n * Copyright 2020-2024 Korzh.com\n * Licensed under MIT\n */\n\n/** Represents the common types of the data. */\nvar DataType;\n(function (DataType) {\n    /** Unknown type value*/\n    DataType[DataType[\"Unknown\"] = 0] = \"Unknown\";\n    /** String value*/\n    DataType[DataType[\"String\"] = 1] = \"String\";\n    /** 8-bit integer value */\n    DataType[DataType[\"Byte\"] = 2] = \"Byte\";\n    /** 16-bit integer value */\n    DataType[DataType[\"Word\"] = 3] = \"Word\";\n    /** 32-bit integer value */\n    DataType[DataType[\"Int32\"] = 4] = \"Int32\";\n    /** 64-bit integer value */\n    DataType[DataType[\"Int64\"] = 5] = \"Int64\";\n    /** Boolean value */\n    DataType[DataType[\"Bool\"] = 6] = \"Bool\";\n    /** Floating-point numeric value */\n    DataType[DataType[\"Float\"] = 7] = \"Float\";\n    /** Money value */\n    DataType[DataType[\"Currency\"] = 8] = \"Currency\";\n    /** Binary-coded decimal value */\n    DataType[DataType[\"BCD\"] = 9] = \"BCD\";\n    /** Date value */\n    DataType[DataType[\"Date\"] = 10] = \"Date\";\n    /** Time value */\n    DataType[DataType[\"Time\"] = 11] = \"Time\";\n    /** Date and time value */\n    DataType[DataType[\"DateTime\"] = 12] = \"DateTime\";\n    /** Autoincrement 32-bit integer value */\n    DataType[DataType[\"Autoinc\"] = 13] = \"Autoinc\";\n    /** MEMO value (text with unlimited length) */\n    DataType[DataType[\"Memo\"] = 14] = \"Memo\";\n    /** BLOB value (any data with unlimited length) */\n    DataType[DataType[\"Blob\"] = 15] = \"Blob\";\n    /** Fixed character value */\n    DataType[DataType[\"FixedChar\"] = 16] = \"FixedChar\";\n    /** The unique identifier */\n    DataType[DataType[\"Guid\"] = 17] = \"Guid\";\n    /*-------- Spatial data types ----------*/\n    /** Any geometry data */\n    DataType[DataType[\"Geometry\"] = 18] = \"Geometry\";\n    /** Any data that represents some geography objects</summary> */\n    DataType[DataType[\"Geography\"] = 19] = \"Geography\";\n})(DataType || (DataType = {}));\n\nvar EntityAttrKind;\n(function (EntityAttrKind) {\n    EntityAttrKind[EntityAttrKind[\"Data\"] = 0] = \"Data\";\n    EntityAttrKind[EntityAttrKind[\"Virtual\"] = 1] = \"Virtual\";\n    EntityAttrKind[EntityAttrKind[\"Lookup\"] = 2] = \"Lookup\";\n})(EntityAttrKind || (EntityAttrKind = {}));\n\nconst EditorTag = {\n    /** Unknown tag value */\n    Unknown: \"Unknown\",\n    /** Edit tag value */\n    Edit: \"EDIT\",\n    /** DateTime tag value  */\n    DateTime: \"DATETIME\",\n    /** List tag value */\n    List: \"LIST\",\n    /** CustomList tag value */\n    CustomList: \"CUSTOMLIST\",\n    /** File tag value */\n    File: \"FILE\"\n};\n\n/**\n * Represents a date/time value that can return either a date itself or a special date name\n */\nclass TimeValue {\n    constructor(dt) {\n        if (dt instanceof Date) {\n            this.date = dt;\n        }\n        else {\n            this._name = dt;\n        }\n    }\n    asTime(settings) {\n        if (this.date) {\n            return this.date;\n        }\n        else {\n            specialDatesResolver.getDateByName(this._name);\n        }\n    }\n    get name() {\n        return this.name;\n    }\n}\nclass SpecialDatesResolver {\n    getDateByName(name, settings) {\n        if (this[name]) {\n            return this[name](settings);\n        }\n        else {\n            return undefined;\n        }\n    }\n    Today(settings) {\n        return new Date();\n    }\n    Yesterday(settings) {\n        let d = new Date();\n        d.setDate(d.getDate() - 1);\n        return d;\n    }\n    Tomorrow(settings) {\n        let d = new Date();\n        d.setDate(d.getDate() + 1);\n        return d;\n    }\n    FirstDayOfMonth(settings) {\n        let d = new Date();\n        d.setDate(1);\n        return d;\n    }\n    LastDayOfMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() + 1, 0);\n        return d;\n    }\n    FirstDayOfNextMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() + 1, 1);\n        return d;\n    }\n    FirstDayOfPrevMonth(settings) {\n        let d = new Date();\n        d.setMonth(d.getMonth() - 1, 1);\n        return d;\n    }\n    FirstDayOfYear(settings) {\n        const d = new Date();\n        d.setMonth(0, 1);\n        return d;\n    }\n    FirstDayOfPrevYear(settings) {\n        let d = new Date();\n        d.setFullYear(d.getFullYear() - 1, 0, 1);\n        return d;\n    }\n    FirstDayOfNextYear(settings) {\n        let d = new Date();\n        d.setFullYear(d.getFullYear() + 1, 0, 1);\n        return d;\n    }\n    FirstDayOfWeek(settings) {\n        const d = new Date();\n        let day = d.getDay();\n        day = (day == 0) ? 6 : day - 1; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() - day);\n        return d;\n    }\n    FirstDayOfPrevWeek(settings) {\n        let d = new Date();\n        let day = d.getDay();\n        day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() - day);\n        return d;\n    }\n    FirstDayOfNextWeek(settings) {\n        let d = new Date();\n        var day = d.getDay();\n        day = (day == 0) ? 1 : 8 - day; //We start week from Monday, but js - from Sunday\n        d.setDate(d.getDate() + day);\n        return d;\n    }\n}\nvar specialDatesResolver = new SpecialDatesResolver();\nfunction registerSpecialDatesResolver(resolver) {\n    specialDatesResolver = resolver;\n}\n\nvar HttpMethod;\n(function (HttpMethod) {\n    HttpMethod[\"Trace\"] = \"TRACE\";\n    HttpMethod[\"Options\"] = \"OPTIONS\";\n    HttpMethod[\"Get\"] = \"GET\";\n    HttpMethod[\"Put\"] = \"PUT\";\n    HttpMethod[\"Post\"] = \"POST\";\n    HttpMethod[\"Delete\"] = \"DELETE\";\n})(HttpMethod || (HttpMethod = {}));\n\nclass HttpRequest {\n    constructor(xhr, descriptor) {\n        this.xhr = xhr;\n        this.method = descriptor.method;\n        this.url = descriptor.url;\n        this.headers = descriptor.headers;\n        this.queryParams = descriptor.queryParams;\n        this.data = descriptor.data;\n    }\n    setHeader(name, value) {\n        this.headers[name] = value;\n    }\n    setQueryParam(name, value) {\n        this.queryParams[name] = value;\n    }\n    getXMLHttpRequest() {\n        return this.xhr;\n    }\n    getResponseHeaders() {\n        if (this.xhr.readyState == this.xhr.HEADERS_RECEIVED) {\n            const headers = this.xhr.getAllResponseHeaders();\n            const arr = headers.trim().split(/[\\r\\n]+/);\n            // Create a map of header names to values\n            const headerMap = {};\n            for (const line of arr) {\n                const parts = line.split(': ');\n                const header = parts.shift();\n                const value = parts.join(': ');\n                headerMap[header] = value;\n            }\n            return headerMap;\n        }\n        return {};\n    }\n    open() {\n        if (this.xhr.readyState !== this.xhr.UNSENT)\n            return;\n        let url = this.url;\n        if (this.queryParams && Object.keys(this.queryParams).length > 0) {\n            url += encodeURI('?' + Object.keys(this.queryParams)\n                .map(param => param + '=' + this.queryParams[param])\n                .join('&'));\n        }\n        this.xhr.open(this.method, url, true);\n        this.xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        for (const header in this.headers) {\n            this.xhr.setRequestHeader(header, this.headers[header]);\n        }\n    }\n    abort() {\n        this.xhr.abort();\n    }\n}\n\nvar utils;\n(function (utils) {\n    function getAllDataTypes() {\n        return Object.values(DataType).filter(item => typeof item === \"number\");\n    }\n    utils.getAllDataTypes = getAllDataTypes;\n    function getDateDataTypes() {\n        return [DataType.Time, DataType.Date, DataType.DateTime];\n    }\n    utils.getDateDataTypes = getDateDataTypes;\n    function getStringDataTypes() {\n        return [DataType.String, DataType.Memo, DataType.FixedChar];\n    }\n    utils.getStringDataTypes = getStringDataTypes;\n    const _numericTypes = [DataType.Byte, DataType.Word, DataType.Int32,\n        DataType.Int64, DataType.Float, DataType.Currency, DataType.Autoinc];\n    function getNumericDataTypes() {\n        return _numericTypes;\n    }\n    utils.getNumericDataTypes = getNumericDataTypes;\n    const _intTypes = [DataType.Byte, DataType.Word, DataType.Int32, DataType.Int64, DataType.Autoinc];\n    //-------------- object functions -------------------\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function copies only the first level properties.\n     * For a deep copy please use `assignDeep`\n     * @param target - the target object\n     * @param args  - an array of the source objects\n     */\n    function assign(target, ...args) {\n        if (!target) {\n            target = {};\n        }\n        for (let i = 0; i < args.length; i++) {\n            let source = args[i];\n            if (source && source.hasOwnProperty) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    utils.assign = assign;\n    /**\n     * Copy the content of all objests passed in `args` parameters into `target`\n     * and returns the result\n     * NB: This function make a deep copy -\n     * so `assignDeep` will be called recursively for all object properties\n     * on the first level.\n     * @param target - the target object\n     * @param sources  - an array of the source objects\n     */\n    function assignDeep(target, ...sources) {\n        return assignDeepCore(new WeakMap(), target, sources);\n    }\n    utils.assignDeep = assignDeep;\n    function assignDeepCore(hashSet, target, sources) {\n        if (!target) {\n            target = {};\n        }\n        for (let source of sources) {\n            if (source && source.hasOwnProperty) {\n                for (let key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        let sourceVal = source[key];\n                        //we don't make a deep copy of HTML elements and any other property marked as a 'reference' (ends with 'Ref')\n                        if (sourceVal !== null && typeof sourceVal === 'object'\n                            && !key.endsWith('Ref') && !(sourceVal instanceof HTMLElement)) {\n                            if (hashSet.has(sourceVal)) {\n                                target[key] = hashSet.get(sourceVal);\n                            }\n                            else {\n                                if (Array.isArray(sourceVal)) {\n                                    target[key] = createArrayFrom(sourceVal);\n                                    hashSet.set(sourceVal, target[key]);\n                                }\n                                else {\n                                    if (typeof target[key] == 'undefined' || target[key] == null) {\n                                        target[key] = Object.create(Object.getPrototypeOf(sourceVal));\n                                    }\n                                    hashSet.set(sourceVal, target[key]);\n                                    assignDeepCore(hashSet, target[key], [sourceVal]);\n                                }\n                            }\n                        }\n                        else {\n                            target[key] = sourceVal;\n                        }\n                    }\n                }\n            }\n        }\n        return target;\n    }\n    function getIfDefined(value, defaultValue) {\n        return (typeof value !== 'undefined') ? value : defaultValue;\n    }\n    utils.getIfDefined = getIfDefined;\n    function IsDefinedAndNotNull(value) {\n        return typeof value !== 'undefined' && value !== null;\n    }\n    utils.IsDefinedAndNotNull = IsDefinedAndNotNull;\n    function copyArrayTo(collection1, collection2) {\n        const len1 = collection1.length;\n        const len2 = collection2.length;\n        for (let i = 0; i < len1 && i < len2; i++) {\n            collection2[i] = collection1[i];\n        }\n    }\n    utils.copyArrayTo = copyArrayTo;\n    function createArrayFrom(collection) {\n        let result = [];\n        for (let item of collection) {\n            result.push(item);\n        }\n        return result;\n    }\n    utils.createArrayFrom = createArrayFrom;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the found object or null.\n     * @param array\n     * @param id\n     */\n    function findItemById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return array[idx];\n        }\n        return null;\n    }\n    utils.findItemById = findItemById;\n    function findItemIndexById(array, id) {\n        var arrLength = array.length;\n        for (var idx = 0; idx < arrLength; idx++) {\n            if (array[idx].id === id)\n                return idx;\n        }\n        return -1;\n    }\n    utils.findItemIndexById = findItemIndexById;\n    /**\n     * Searches an array of the objects which implement ItemWithId by ID\n     * Returs the index of the found element, or -1 if nothing was found.\n     * @param array\n     * @param id\n     */\n    function indexOfArrayItem(arr, item) {\n        if (arr.indexOf) {\n            return arr.indexOf(item);\n        }\n        else {\n            let len = arr.length;\n            for (let i = 0; i < len; i++) {\n                if (item == arr[i]) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }\n    utils.indexOfArrayItem = indexOfArrayItem;\n    /**\n     * Moves an item in some array to a new position\n     * @param array\n     * @param index1\n     * @param index2\n     */\n    function moveArrayItem(array, index1, index2) {\n        if (index1 >= array.length) {\n            throw 'Index out of bounds: ' + index1;\n        }\n        if (index2 >= array.length) {\n            index2 = array.length - 1;\n        }\n        let item = array.splice(index1, 1)[0];\n        array.splice(index2, 0, item);\n    }\n    utils.moveArrayItem = moveArrayItem;\n    /**\n     * Searches for a particular item in the array are removes that item if found.\n     * @param arr\n     * @param value\n     */\n    function removeArrayItem(arr, value) {\n        let index = arr.indexOf(value);\n        if (index != -1) {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    utils.removeArrayItem = removeArrayItem;\n    function insertArrayItem(arr, index, value) {\n        arr.splice(index, 0, value);\n    }\n    utils.insertArrayItem = insertArrayItem;\n    function fillArray(arr, value, start = 0, end) {\n        let len = arr.length >>> 0;\n        var relativeStart = start >> 0;\n        var k = relativeStart < 0 ?\n            Math.max(len + relativeStart, 0) :\n            Math.min(relativeStart, len);\n        var relativeEnd = end === undefined ?\n            len : end >> 0;\n        let final = relativeEnd < 0 ?\n            Math.max(len + relativeEnd, 0) :\n            Math.min(relativeEnd, len);\n        while (k < final) {\n            arr[k] = value;\n            k++;\n        }\n        return arr;\n    }\n    utils.fillArray = fillArray;\n    //------------ DOM utils ------------\n    /**\n     * Calculates the shift on which we need to move our element horizontally\n     * to find current window\n     * @param absLeft\n     * @param width\n     */\n    function shiftToFitWindow(absLeft, width) {\n        let body = document.getElementsByTagName('body')[0];\n        let winWidth = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\n        var absRight = absLeft + width;\n        let shift = 0;\n        if (absRight > winWidth) {\n            shift = winWidth - absRight - 10;\n            if (absLeft + shift < 0) {\n                shift = 10 - absLeft;\n            }\n        }\n        return shift;\n    }\n    utils.shiftToFitWindow = shiftToFitWindow;\n    /**\n     * Returns `true` if the value passed in the parameter is an object\n     * @param val\n     */\n    function isObject(val) {\n        if (val === null) {\n            return false;\n        }\n        return ((typeof val === 'function') || (typeof val === 'object'));\n    }\n    utils.isObject = isObject;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isNumericType(dtype) {\n        const index = _numericTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isNumericType = isNumericType;\n    /**\n     * Returns `true` if the `DataType` value passed in the parameter\n     * represents some numeric type\n     * @param dtype\n     */\n    function isIntType(dtype) {\n        const index = _intTypes.indexOf(dtype);\n        return (index >= 0);\n    }\n    utils.isIntType = isIntType;\n    /**\n     * Returns `true` if the value passed in the parameter is an a numeric value\n     * @param val\n     */\n    function isNumeric(val) {\n        return !isNaN(parseFloat(val)) && isFinite(val);\n    }\n    utils.isNumeric = isNumeric;\n    /**\n     * Returns `true` if two data types  passed in parameters\n     * are compatible - so it's safe to copy the values between\n     * two expressions with these two types\n     * @param type1\n     * @param type2\n     */\n    function areCompatibleDataTypes(type1, type2) {\n        return typeof type1 == \"undefined\" || typeof type2 == \"undefined\" || type1 == DataType.Unknown || type2 == DataType.Unknown\n            || (type1 == type2) || (type1 == DataType.Date && type2 == DataType.DateTime)\n            || (type1 == DataType.DateTime && type2 == DataType.Date);\n    }\n    utils.areCompatibleDataTypes = areCompatibleDataTypes;\n    /**\n     * Returns `true` if the property with named `propName`\n     * in the object `obj` has some value\n     * @param obj\n     * @param propName\n     */\n    function isPropSet(obj, propName) {\n        return obj[propName] || obj[propName.toLowerCase()] || obj[propName.toUpperCase()];\n    }\n    utils.isPropSet = isPropSet;\n    //-------------- ID generator -----------\n    const prefixIdLen = 4;\n    const symbols = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    const magicTicks = 636712160627685350;\n    /**\n     * Generates an unique ID\n     */\n    function generateId(prefix) {\n        if (!prefix) {\n            prefix = 'easy';\n        }\n        let prfx = (prefix.length > prefixIdLen) ? squeezeMoniker(prefix, prefixIdLen) : prefix;\n        if (prfx && prfx.length > 0) {\n            prfx += \"-\";\n        }\n        //adding 3 random symbols\n        var randCharPart = symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)] +\n            symbols[getRandomInt(0, symbols.length)];\n        var randInt = getRandomInt(0, 10000);\n        //generating main ID part\n        //it's a 36-base representation of some random number based on current value of ticks\n        let ticksNum36 = intToNumBase(getNowTicks() - magicTicks - randInt);\n        return prfx + randCharPart + ticksNum36;\n    }\n    utils.generateId = generateId;\n    function intToNumBase(value, targetBase = 36) {\n        var buffer = '';\n        var rest = value;\n        do {\n            buffer = symbols[rest % targetBase] + buffer;\n            rest = Math.floor(rest /= targetBase);\n        } while (rest > 0);\n        return buffer;\n    }\n    function squeezeMoniker(str, maxlen) {\n        let parts = str.split('-');\n        let pml = 1;\n        let ptt = maxlen;\n        if (parts.length < maxlen) {\n            pml = maxlen / parts.length;\n            ptt = parts.length;\n        }\n        let result = \"\";\n        for (let i = 0; i < ptt; i++) {\n            result += squeeze(parts[i], pml);\n        }\n        return result;\n    }\n    function squeeze(str, maxlen) {\n        const len = str.length;\n        if (len > maxlen) {\n            let step = len / maxlen;\n            let result = \"\";\n            result += str[0];\n            let nextIndex = step;\n            let ch;\n            for (let i = 1; i < len; i++) {\n                ch = str[i];\n                if (i + 1 > nextIndex) {\n                    result += ch;\n                    nextIndex += step;\n                }\n            }\n            return result;\n        }\n        else {\n            return str;\n        }\n    }\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n    function getNowTicks() {\n        return (621355968e9 + (new Date()).getTime() * 1e4);\n    }\n    function safeParseInt(str) {\n        const res = parseInt(str);\n        if (isNaN(res))\n            throw `\"${str}\" is not a valid number`;\n        return res;\n    }\n    function getDaysInMonth(month, year) {\n        return new Date(year, month + 1, 0).getDate();\n    }\n    // ------------- date/time functions -------------------\n    // TO DO: improve to process all datetime cases\n    function strToDateTime(value, format) {\n        if (!value || value.length == 0)\n            return new Date();\n        const normalizedValue = value.replace(/[^a-zA-Z0-9_]/g, '-');\n        const normalizedFormat = format.replace(/[^a-zA-Z0-9_]/g, '-');\n        const formatItems = normalizedFormat.split('-');\n        const dateItems = normalizedValue.split('-');\n        const monthIndex = formatItems.indexOf(\"MM\");\n        const dayIndex = formatItems.indexOf(\"dd\");\n        const yearIndex = formatItems.indexOf(\"yyyy\");\n        const hourIndex = formatItems.indexOf(\"HH\");\n        const minutesIndex = formatItems.indexOf(\"mm\");\n        const secondsIndex = formatItems.indexOf(\"ss\");\n        const today = new Date();\n        try {\n            const year = yearIndex > -1 && yearIndex < dateItems.length\n                ? safeParseInt(dateItems[yearIndex])\n                : today.getFullYear();\n            const month = monthIndex > -1 && monthIndex < dateItems.length\n                ? safeParseInt(dateItems[monthIndex]) - 1\n                : today.getMonth() - 1;\n            if (month > 11)\n                throw '';\n            const day = dayIndex > -1 && dayIndex < dateItems.length\n                ? safeParseInt(dateItems[dayIndex])\n                : today.getDate();\n            if (day > getDaysInMonth(month, year))\n                throw '';\n            const hour = hourIndex > -1 && hourIndex < dateItems.length\n                ? safeParseInt(dateItems[hourIndex])\n                : 0;\n            if (hour > 23)\n                throw '';\n            const minute = minutesIndex > -1 && minutesIndex < dateItems.length\n                ? safeParseInt(dateItems[minutesIndex])\n                : 0;\n            if (minute > 59)\n                throw '';\n            const second = secondsIndex > -1 && secondsIndex < dateItems.length\n                ? safeParseInt(dateItems[secondsIndex])\n                : 0;\n            if (second > 59)\n                throw '';\n            return new Date(year, month, day, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${value} is not a valid date.`;\n        }\n    }\n    utils.strToDateTime = strToDateTime;\n    function strToTime(str) {\n        const timeItems = str.split(':');\n        try {\n            const hour = timeItems.length > 0 ? safeParseInt(timeItems[0]) : 0;\n            if (hour > 23)\n                throw '';\n            const minute = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (minute > 59)\n                throw '';\n            const second = timeItems.length > 1 ? safeParseInt(timeItems[1]) : 0;\n            if (second > 59)\n                throw '';\n            return new Date(0, 0, 0, hour, minute, second);\n        }\n        catch (_a) {\n            throw `${str} is not a valid time.`;\n        }\n    }\n    utils.strToTime = strToTime;\n})(utils || (utils = {}));\n\nclass HttpActionResult {\n    constructor(request, promise) {\n        this.request = request;\n        this.promise = promise;\n    }\n    getPromise() {\n        return this.promise;\n    }\n    getRequest() {\n        return this.request;\n    }\n    then(onfulfilled, onrejected) {\n        return this.promise.then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.promise.catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.promise.finally(onfinally);\n    }\n}\n\nclass HttpResponseError extends Error {\n    constructor(status, message) {\n        super(message);\n        Object.setPrototypeOf(this, HttpResponseError.prototype);\n        this.status = status;\n    }\n}\nclass HttpClient {\n    /** Gets the response body for the latest request  */\n    get responseBody() {\n        return this._responseBody;\n    }\n    constructor() {\n        this.defaultHeaders = {};\n        this.customPayload = undefined;\n    }\n    get(url, options) {\n        return this.send(HttpMethod.Get, url, null, options);\n    }\n    post(url, data, options) {\n        return this.send(HttpMethod.Post, url, data, options);\n    }\n    put(url, data, options) {\n        return this.send(HttpMethod.Put, url, data, options);\n    }\n    delete(url, data, options) {\n        return this.send(HttpMethod.Delete, url, data, options);\n    }\n    send(method, url, data, options) {\n        options = options || {};\n        const dataType = options.dataType || 'json';\n        const contentType = options.contentType || (dataType !== 'form-data')\n            ? 'application/json'\n            : null;\n        if (data && dataType != 'form-data' && this.customPayload) {\n            data.data = utils.assignDeep(data.data || {}, this.customPayload);\n        }\n        const XHR = ('onload' in new XMLHttpRequest())\n            ? XMLHttpRequest\n            : window[\"XDomainRequest\"]; //IE support\n        const xhr = new XHR();\n        const desc = {\n            method: method,\n            url: url,\n            headers: Object.assign(Object.assign({}, this.defaultHeaders), options.headers || {}),\n            queryParams: options.queryParams || {},\n            data: data\n        };\n        if (contentType)\n            desc.headers['Content-Type'] = contentType;\n        const request = new HttpRequest(xhr, desc);\n        if (this.beforeEachRequest) {\n            console.warn(`HttpClient: 'beforeEachRequest' is deprecated and will be removed in future updates.\r\n            Use 'onRequest' instead`);\n            this.beforeEachRequest(request);\n        }\n        if (this.onRequest) {\n            this.onRequest(request);\n        }\n        const dataToSend = (request.data && typeof request.data !== 'string'\n            && dataType == 'json')\n            ? JSON.stringify(request.data)\n            : request.data;\n        request.open();\n        return new HttpActionResult(request, new Promise((resolve, reject) => {\n            if (options.responseType)\n                xhr.responseType = options.responseType;\n            xhr.onerror = (error) => {\n                reject(new HttpResponseError(xhr.status, xhr.responseText));\n            };\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState != 4)\n                    return; //we process only the state change to DONE(4)\n                const responseContentType = xhr.getResponseHeader('Content-Type') || '';\n                const status = xhr.status;\n                if (status === 0) {\n                    reject(new HttpResponseError(status, \"Network error or the request was aborted\"));\n                }\n                else if (status >= 200 && status < 400) {\n                    //Success\n                    const responseObj = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? xhr.response\n                        : (responseContentType.indexOf('application/json') == 0\n                            ? JSON.parse(xhr.responseText)\n                            : xhr.responseText);\n                    this._responseBody = responseObj;\n                    if (this.onResponse) {\n                        this.onResponse(xhr);\n                    }\n                    resolve(responseObj);\n                }\n                else {\n                    //Error\n                    const rtPromise = (xhr.responseType === 'arraybuffer' || xhr.responseType === 'blob')\n                        ? HttpClient.decodeArrayBuffer(xhr.response)\n                        : Promise.resolve(xhr.responseText);\n                    rtPromise.then(responseText => {\n                        const responseObj = (responseContentType.indexOf('application/json') == 0)\n                            ? JSON.parse(responseText)\n                            : responseText;\n                        this._responseBody = responseObj;\n                        const message = responseObj.message ||\n                            (status == 404\n                                ? `No such endpoint: ${url}`\n                                : responseObj);\n                        reject(new HttpResponseError(status, message));\n                    });\n                }\n            };\n            xhr.send(dataToSend);\n        }));\n    }\n    static decodeArrayBuffer(uintArray) {\n        var reader = new FileReader();\n        return new Promise((resolve) => {\n            reader.onloadend = function () {\n                if (reader.readyState == FileReader.DONE) {\n                    resolve(reader.result);\n                }\n            };\n            reader.readAsText(new Blob([uintArray]));\n        });\n    }\n}\n\n/**\n * Contains internatialization functionality.\n */\nvar i18n;\n(function (i18n) {\n    let englishUSLocaleSettings = {\n        shortDateFormat: 'MM/dd/yyyy',\n        longDateFormat: 'dd MMM, yyyy',\n        editDateFormat: 'MM/dd/yyyy',\n        shortTimeFormat: 'HH:mm',\n        editTimeFormat: 'HH:mm',\n        longTimeFormat: 'HH:mm:ss',\n        shortMonthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        longMonthNames: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        shortWeekDayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        longWeekDayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        decimalSeparator: '.',\n        currency: 'USD'\n    };\n    let defaultLocale = {\n        localeId: 'en-US',\n        englishName: 'English',\n        displayName: 'English',\n        texts: {\n            ButtonOK: 'OK',\n            ButtonCancel: 'Cancel',\n            Yes: 'Yes',\n            No: 'No',\n            True: 'True',\n            False: 'False'\n        },\n        settings: englishUSLocaleSettings\n    };\n    let allLocales = {\n        'en-US': defaultLocale\n    };\n    let currentLocale;\n    const mappers = [];\n    function mapInfo(info) {\n        for (const mapper of mappers) {\n            mapper(info);\n        }\n    }\n    function addMapper(mapper) {\n        mappers.push(mapper);\n    }\n    i18n.addMapper = addMapper;\n    /**\n     * Gets added locales with their names.\n     * @returns  The locales.\n     */\n    function getLocales() {\n        let result = [];\n        for (let locale in allLocales) {\n            result.push({\n                locale: locale,\n                englishName: allLocales[locale].englishName,\n                displayName: allLocales[locale].displayName\n            });\n        }\n        return result.sort((a, b) => {\n            if (a.englishName > b.englishName) {\n                return 1;\n            }\n            else if (a.englishName === b.englishName) {\n                return 0;\n            }\n            return -1;\n        });\n    }\n    i18n.getLocales = getLocales;\n    /**\n     * Gets the current locale ID.\n     * @returns The locale.\n     */\n    function getCurrentLocale() {\n        return currentLocale.localeId;\n    }\n    i18n.getCurrentLocale = getCurrentLocale;\n    /**\n    * Sets the curent locale.\n    * @deprecated Use setCurrentLocale instead\n    * @param l The locale.\n    */\n    function setLocale(l) {\n        console.warn('This method is deprecated. Use setCurrentLocale instead');\n        setCurrentLocale(l);\n    }\n    i18n.setLocale = setLocale;\n    /**\n     * Sets the curent locale.\n     * @param localeId The locale.\n     */\n    function setCurrentLocale(localeId) {\n        const newLocale = allLocales[localeId];\n        if (newLocale) {\n            utils.assignDeep(currentLocale, newLocale);\n        }\n        else {\n            currentLocale.englishName = localeId;\n            currentLocale.displayName = localeId;\n            currentLocale.texts = utils.assignDeep({}, defaultLocale.texts);\n        }\n        currentLocale.localeId = localeId;\n    }\n    i18n.setCurrentLocale = setCurrentLocale;\n    /**\n     * Returns localized text by the key defined in parameter.\n     * Here we get the text of the resource string assigned to CmdClickToAddCondition key:\n     *\n     ```\n       const text = i18n.getText('CmdClickToAddCondition')\n     ```\n     * @param args The keys of the resource string.\n     * @returns Text of the resource defined by key or null if the key is not found\n     *\n     */\n    function getText(...args) {\n        let textsObj = currentLocale.texts;\n        let resText = '';\n        if (args && args.length) {\n            const argLength = args.length;\n            for (let i = 0; i < argLength; i++) {\n                resText = textsObj[args[i]];\n                if (typeof resText === 'object') {\n                    textsObj = resText;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return resText;\n    }\n    i18n.getText = getText;\n    function getLocaleSettings() {\n        return currentLocale.settings;\n    }\n    i18n.getLocaleSettings = getLocaleSettings;\n    function getOneLocaleSetting(key) {\n        return currentLocale.settings[key];\n    }\n    i18n.getOneLocaleSetting = getOneLocaleSetting;\n    function getShortMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.shortMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getShortMonthName = getShortMonthName;\n    function getLongMonthName(monthNum) {\n        const settings = getLocaleSettings();\n        if (monthNum > 0 && monthNum < 13) {\n            return settings.longMonthNames[monthNum - 1];\n        }\n        else {\n            throw 'Wrong month number: ' + monthNum;\n        }\n    }\n    i18n.getLongMonthName = getLongMonthName;\n    function getShortWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.shortWeekDayNames.length >= dayNum\n                ? settings.shortWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getShortWeekDayName = getShortWeekDayName;\n    function getLongWeekDayName(dayNum) {\n        const settings = getLocaleSettings();\n        if (dayNum > 0 && dayNum < 8) {\n            return settings.longWeekDayNames.length >= dayNum\n                ? settings.longWeekDayNames[dayNum - 1]\n                : dayNum.toString();\n        }\n        else {\n            throw 'Wrong month number: ' + dayNum;\n        }\n    }\n    i18n.getLongWeekDayName = getLongWeekDayName;\n    /**\n     * Updates the locale settings (date/time formats, separators, etc) for the specified locale.\n     * @param settingsToUpdate a LocaleSettings object\n     */\n    function updateLocaleSettings(settingsToUpdate) {\n        if (!currentLocale.settings) {\n            currentLocale.settings = utils.assignDeep({}, englishUSLocaleSettings);\n        }\n        currentLocale.settings = utils.assignDeep(currentLocale.settings, settingsToUpdate);\n    }\n    i18n.updateLocaleSettings = updateLocaleSettings;\n    /**\n     * Updates the texts for the current locale\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateLocaleTexts(texts) {\n        if (typeof texts !== 'object') {\n            console.error('Wrong parameter type in updateLocaleTexts function call.' +\n                'The first parameter (localeId) is not necessary. Use updateLocaleTexts(texts) instead');\n            return;\n        }\n        mapInfo({ localeId: currentLocale.localeId, texts: texts });\n        utils.assignDeep(currentLocale.texts, texts);\n    }\n    i18n.updateLocaleTexts = updateLocaleTexts;\n    /**\n     * Updates the default texts for the current locale and all other locales available now\n     * This function does rewrite the texts in the locales, it just adds new textual resources if they didn't exists previously\n     * @param texts A plain JS object that contains textual resources\n     */\n    function updateDefaultTexts(texts) {\n        for (let localeId in allLocales) {\n            let locale = allLocales[localeId];\n            locale.texts = utils.assignDeep({}, texts, locale.texts);\n        }\n        currentLocale.texts = utils.assignDeep({}, texts, currentLocale.texts);\n    }\n    i18n.updateDefaultTexts = updateDefaultTexts;\n    /**\n     * Updates the information for the specified locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be added\n     * @param localeInfo  a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function updateLocaleInfo(localeId, localeInfo) {\n        mapInfo(localeInfo);\n        let localeInfoToUpdate = currentLocale;\n        if (localeId) {\n            if (!localeInfo.localeId) {\n                localeInfo.localeId = localeId;\n            }\n            localeInfoToUpdate = allLocales[localeId];\n            if (!localeInfoToUpdate) {\n                localeInfoToUpdate = utils.assignDeep({}, defaultLocale);\n                allLocales[localeId] = localeInfoToUpdate;\n            }\n        }\n        utils.assignDeep(localeInfoToUpdate, localeInfo);\n    }\n    i18n.updateLocaleInfo = updateLocaleInfo;\n    /**\n     * Adds the locale.\n     * @param localeId The locale ID (like 'en', 'de', 'uk', etc).\n     * If the locale does exist yet - it will be created\n     * @param localeInfo - a LocaleInfo object that contains the locale settings and textual resources\n     */\n    function addLocale(localeId, localeInfo) {\n        updateLocaleInfo(localeId, localeInfo);\n    }\n    i18n.addLocale = addLocale;\n    /**\n     * Overwrites some locale settings (date/time formats) with the formats used in browser's current language\n     */\n    function determineSettingsByLocale(localeId) {\n        const now = new Date(2020, 5, 7, 19, 34, 56, 88);\n        const dateOptions = { year: 'numeric', month: 'numeric', day: 'numeric' };\n        const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n        const dateStr = now.toLocaleDateString(localeId, dateOptions);\n        const timeStr = now.toLocaleTimeString(localeId, timeOptions);\n        let dateFormat = dateStr\n            .replace('07', 'dd')\n            .replace('7', 'd')\n            .replace('06', 'MM')\n            .replace('6', 'M')\n            .replace('2020', 'yyyy')\n            .replace('20', 'yy');\n        let timeFormat = timeStr\n            .replace('19', 'HH')\n            .replace('07', 'hh')\n            .replace('7', 'h')\n            .replace('34', 'mm')\n            .replace('56', 'ss')\n            .replace('PM', 'tt');\n        if (!currentLocale.settings) {\n            currentLocale.settings = {};\n        }\n        const localeSettings = {\n            shortDateFormat: dateFormat,\n            shortTimeFormat: timeFormat\n        };\n        updateLocaleSettings(localeSettings);\n    }\n    function loadBrowserLocaleSettings() {\n        const lang = typeof navigator === 'object' ? navigator.language : undefined;\n        determineSettingsByLocale(lang);\n    }\n    function resetLocales() {\n        if (!currentLocale) {\n            currentLocale = utils.assignDeep({}, defaultLocale);\n            loadBrowserLocaleSettings();\n        }\n    }\n    i18n.resetLocales = resetLocales;\n    const DT_FORMAT_RGEX = /\\[([^\\]]+)]|y{2,4}|M{1,4}|d{1,2}|H{1,2}|h{1,2}|m{2}|s{2}|t{2}/g;\n    /**\n     * Returns string representation of the date/time value according to the custom format (second parameter)\n     * The format is compatible with the one used in .NET: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\n     * @param date\n     * @param format\n     */\n    function dateTimeToStr(date, format) {\n        const year = date.getFullYear();\n        const yearStr = year.toString();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        const hour = date.getHours();\n        const minute = date.getMinutes();\n        const second = date.getSeconds();\n        const hour12 = hour % 12 || 12; //the remainder of the division by 12. Or 12 if it's 0\n        const isPm = hour > 11;\n        const matches = {\n            yyyy: yearStr,\n            yy: yearStr.substring(yearStr.length - 2),\n            MMMM: i18n.getLongMonthName(month),\n            MMM: i18n.getShortMonthName(month),\n            MM: (month < 10) ? '0' + month : month.toString(),\n            M: month.toString(),\n            dd: (day < 10) ? '0' + day : day.toString(),\n            d: day.toString(),\n            HH: (hour < 10) ? '0' + hour : hour.toString(),\n            H: hour.toString(),\n            hh: (hour12 < 10) ? '0' + hour12 : hour12.toString(),\n            h: hour12.toString(),\n            tt: isPm ? 'PM' : 'AM',\n            mm: (minute < 10) ? '0' + minute : minute.toString(),\n            ss: (second < 10) ? '0' + second : second.toString()\n        };\n        return format.replace(DT_FORMAT_RGEX, (match, $1) => {\n            return $1 || matches[match];\n        });\n    }\n    i18n.dateTimeToStr = dateTimeToStr;\n    function dateTimeToStrEx(dateTime, dataType, format) {\n        if (format) {\n            if (format == 'd') {\n                format = buildShortDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'D') {\n                format = buildLongDateTimeFormat(DataType.Date);\n            }\n            else if (format == 'f') {\n                format = buildShortDateTimeFormat(DataType.DateTime);\n            }\n            else if (format == 'F') {\n                format = buildLongDateTimeFormat(DataType.DateTime);\n            }\n        }\n        else {\n            format = buildShortDateTimeFormat(dataType);\n        }\n        return dateTimeToStr(dateTime, format);\n    }\n    i18n.dateTimeToStrEx = dateTimeToStrEx;\n    function buildShortDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.shortDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.shortTimeFormat;\n                break;\n            default:\n                format = localeSettings.shortDateFormat + ' ' + localeSettings.shortTimeFormat;\n                break;\n        }\n        return format;\n    }\n    function buildLongDateTimeFormat(dataType) {\n        const localeSettings = getLocaleSettings();\n        let format;\n        switch (dataType) {\n            case DataType.Date:\n                format = localeSettings.longDateFormat;\n                break;\n            case DataType.Time:\n                format = localeSettings.longTimeFormat;\n                break;\n            default:\n                format = localeSettings.longDateFormat + ' ' + localeSettings.longTimeFormat;\n                break;\n        }\n        return format;\n    }\n    /**\n    * Converts a numeric value to the string taking into the account the decimal separator\n    * @param num - the number to convert\n    * @param format - the format of the number representation (D - decimal, F - float, C - currency)\n    * @param decimalSeparator - the symbol that represents decimal separator. If not specified the function gets the one from the current locale settings.\n    */\n    function numberToStr(num, format, decimalSeparator) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                return formatWithSequence(num, format.slice(1));\n            }\n            else if (['D', 'F', 'C'].indexOf(type) >= 0) {\n                const locale = getCurrentLocale();\n                return num.toLocaleString(locale, getNumberFormatOptions(format));\n            }\n            else {\n                return convertWithMask(Math.trunc(num), format);\n            }\n        }\n        const localeSettings = getLocaleSettings();\n        decimalSeparator = decimalSeparator || localeSettings.decimalSeparator;\n        return num.toString().replace('.', decimalSeparator);\n    }\n    i18n.numberToStr = numberToStr;\n    function booleanToStr(bool, format) {\n        if (format && format.length > 0) {\n            const type = format.charAt(0).toUpperCase();\n            if (type === 'S') {\n                const values = format.slice(1).split('|');\n                if (values.length > 1) {\n                    const value = values[(bool) ? 1 : 0];\n                    return i18n.getText(value) || value;\n                }\n            }\n        }\n        return `${bool}`;\n    }\n    i18n.booleanToStr = booleanToStr;\n    const cachedSequenceFormats = {};\n    function formatWithSequence(number, format) {\n        if (!cachedSequenceFormats[format]) {\n            // parse and save in cache format values \n            const values = format.split('|')\n                .filter(v => v.length > 0)\n                .map(v => v.split('='));\n            cachedSequenceFormats[format] = {};\n            if (values.length > 0) {\n                if (values[0].length > 1) {\n                    for (const value of values) {\n                        cachedSequenceFormats[format][Number.parseInt(value[1])] = value[0];\n                    }\n                }\n                else {\n                    values.forEach((value, index) => {\n                        cachedSequenceFormats[format][index] = value[0];\n                    });\n                }\n            }\n        }\n        const values = cachedSequenceFormats[format];\n        if (values[number] !== undefined) {\n            const value = values[number];\n            return i18n.getText(value) || value;\n        }\n        return number.toString();\n    }\n    function convertWithMask(number, mask) {\n        let value = number.toString();\n        let result = '';\n        let index = value.length - 1;\n        for (let i = mask.length - 1; i >= 0; i--) {\n            const ch = mask.charAt(i);\n            if (ch === '#' || ch === '0') {\n                if (index >= 0) {\n                    result += value.charAt(index);\n                    index--;\n                }\n                else {\n                    if (ch === '0') {\n                        result += 0;\n                    }\n                }\n            }\n            else {\n                result += ch;\n            }\n        }\n        return result.split('').reverse().join('');\n    }\n    function getNumberFormatOptions(format) {\n        const localeSettings = getLocaleSettings();\n        const type = format[0].toUpperCase();\n        const digits = (format.length > 1)\n            ? Number.parseInt(format.slice(1))\n            : type == 'D' ? 1 : 2;\n        switch (type) {\n            case 'D':\n                return {\n                    style: 'decimal',\n                    useGrouping: false,\n                    minimumIntegerDigits: digits\n                };\n            case 'C':\n                return {\n                    style: 'currency',\n                    currency: localeSettings.currency,\n                    minimumFractionDigits: digits\n                };\n            default:\n                return {\n                    style: 'decimal',\n                    minimumFractionDigits: digits,\n                    maximumFractionDigits: digits\n                };\n        }\n    }\n})(i18n || (i18n = {}));\n\n/**\n * Represents one entity.\n */\nclass MetaEntity {\n    /** The default constructor. */\n    constructor(parent) {\n        /** Returns false if this entity is read-only */\n        this.isEditable = true;\n        this.name = \"\";\n        this.caption = \"\";\n        this.description = \"\";\n        this.parent = parent;\n        this.attributes = new Array();\n        this.subEntities = new Array();\n    }\n    /**\n    * Loads entity from its JSON representation object.\n    * @param model The Data Model.\n    * @param dto The JSON representation object.\n    */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.name = dto.name;\n            this.captionPlural = dto.namePlur;\n            this.caption = dto.name;\n            this.description = dto.desc;\n            if (typeof (dto.ied) !== 'undefined')\n                this.isEditable = dto.ied;\n            this.subEntities = new Array();\n            if (dto.ents) {\n                for (let i = 0; i < dto.ents.length; i++) {\n                    let newEntity = model.createEntity(this);\n                    newEntity.loadFromData(model, dto.ents[i]);\n                    this.subEntities.push(newEntity);\n                }\n            }\n            this.attributes = new Array();\n            if (dto.attrs) {\n                for (let i = 0; i < dto.attrs.length; i++) {\n                    let newAttr = model.createEntityAttr(this);\n                    newAttr.loadFromData(model, dto.attrs[i]);\n                    this.attributes.push(newAttr);\n                }\n            }\n        }\n    }\n    scan(processAttribute, processEntity) {\n        let opts = { stop: false };\n        let internalProcessEntity = (entity) => {\n            if (processEntity)\n                processEntity(entity, opts);\n            if (entity.attributes) {\n                let attrCount = entity.attributes.length;\n                for (let i = 0; (i < attrCount) && !opts.stop; i++) {\n                    let attr = entity.attributes[i];\n                    if (processAttribute) {\n                        processAttribute(attr, opts);\n                    }\n                    if (opts.stop)\n                        return;\n                }\n            }\n            if (entity.subEntities) {\n                let subEntityCount = entity.subEntities.length;\n                for (let i = 0; (i < subEntityCount) && !opts.stop; i++) {\n                    internalProcessEntity(entity.subEntities[i]);\n                }\n            }\n        };\n        internalProcessEntity(this);\n    }\n    getFirstPrimaryAttr() {\n        return this.getPrimaryAttrs()[0];\n    }\n    getPrimaryAttrs() {\n        return this.attributes.filter(attr => attr.isPrimaryKey);\n    }\n}\nclass MetaEntityAttr {\n    /** The default constructor. */\n    constructor(entity) {\n        this.id = \"\";\n        this.caption = \"{Unrecognized attribute}\";\n        this.dataType = DataType.String;\n        this.size = 0;\n        this.isPrimaryKey = false;\n        this.isForeignKey = false;\n        this.isNullable = true;\n        this.showOnView = true;\n        this.isEditable = true;\n        this.showOnCreate = true;\n        this.showOnEdit = true;\n        this.showInLookup = false;\n        this.lookupAttr = \"\";\n        this.expr = \"\";\n        this.entity = entity;\n        this.kind = EntityAttrKind.Data;\n    }\n    /**\n     * Loads entity attribute from JSON representation object.\n     * @param model The Data Model.\n     * @param dto The JSON representation object.\n     */\n    loadFromData(model, dto) {\n        if (dto) {\n            this.id = dto.id;\n            this.description = dto.desc;\n            this.caption = dto.cptn;\n            this.dataType = dto.dtype;\n            this.isPrimaryKey = dto.ipk;\n            this.isForeignKey = dto.ifk;\n            this.size = dto.size;\n            this.lookupAttr = dto.lattr;\n            this.lookupEntity = dto.lent;\n            this.dataAttr = dto.dattr;\n            this.lookupDataAttr = dto.ldattr;\n            const isDataType = utils.getDateDataTypes().indexOf(this.dataType);\n            this.defaultValue = dto.defVal && isDataType ? new Date(dto.defVal) : dto.defVal;\n            this.isNullable = utils.getIfDefined(dto.nul, this.isNullable);\n            this.isEditable = utils.getIfDefined(dto.ied, this.isEditable);\n            this.showOnView = utils.getIfDefined(dto.ivis || dto.sov, this.showOnView);\n            this.showOnCreate = utils.getIfDefined(dto.soc, this.showOnCreate);\n            this.showOnEdit = utils.getIfDefined(dto.soe, this.showOnEdit);\n            this.showInLookup = utils.getIfDefined(dto.sil, this.showInLookup);\n            this.kind = dto.kind;\n            this.displayFormat = dto.dfmt;\n            if (dto.udata)\n                this.userData = dto.udata;\n            if (dto.edtr) {\n                this.defaultEditor = model.getEditorById(dto.edtr) || model.createValueEditor();\n            }\n        }\n    }\n}\n\n/**\n * Represents a value editor.\n */\nclass ValueEditor {\n    /** The default constructor. */\n    constructor() {\n        this.id = \"\";\n        this.tag = EditorTag.Unknown;\n        this.resType = DataType.Unknown;\n        this.defValue = \"\";\n    }\n    /**\n     * Loads value editor from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        if (data) {\n            this.id = data.id;\n            this.tag = data.tag;\n            this.defValue = data.defval;\n            this.resType = data.rtype;\n            this.accept = data.accept;\n            this.multiline = data.multiline;\n            if (data.subType) {\n                this.resType = data.subType;\n            }\n            if (data.name) {\n                this.name = data.name;\n            }\n            if (data.values) {\n                this.values = data.values;\n            }\n        }\n    }\n    getValueText(value) {\n        let result = \"\";\n        if (!this.values)\n            return result;\n        if (Array.isArray(value)) {\n            for (let item of this.values) {\n                if (value.indexOf(item.id) >= 0) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        else {\n            for (let item of this.values) {\n                if (item.id === value) {\n                    result += item.text + ',';\n                }\n            }\n        }\n        if (result) {\n            result = result.substring(0, result.length - 1);\n        }\n        return result;\n    }\n}\n\n/**\n * Represents a data model\n */\nclass MetaData {\n    /** The default constructor. */\n    constructor() {\n        this.mainEntity = null;\n        this.id = '__none';\n        this.name = 'Empty model';\n        this.rootEntity = this.createEntity();\n        this.displayFormats = new Map();\n    }\n    /**\n     * Gets the main entity of model\n     * @return The main entity.\n     */\n    getMainEntity() {\n        return this.mainEntity;\n    }\n    createEntity(parent) {\n        return new MetaEntity(parent);\n    }\n    createEntityAttr(parent) {\n        return new MetaEntityAttr(parent);\n    }\n    createValueEditor() {\n        return new ValueEditor();\n    }\n    /**\n     * Loads data model from JSON.\n     * @param stringJson The JSON string.\n     */\n    loadFromJSON(stringJson) {\n        let model = JSON.parse(stringJson);\n        this.loadFromData(model);\n    }\n    /**\n     * Loads data model from its JSON representation object.\n     * @param data The JSON representation object.\n     */\n    loadFromData(data) {\n        this.id = data.id;\n        this.name = data.name;\n        this.version = data.vers;\n        //Editors\n        this.editors = new Array();\n        if (data.editors) {\n            for (let i = 0; i < data.editors.length; i++) {\n                let newEditor = this.createValueEditor();\n                newEditor.loadFromData(data.editors[i]);\n                this.editors.push(newEditor);\n            }\n        }\n        //rootEntity\n        this.rootEntity.loadFromData(this, data.entroot);\n        //DataFormats\n        this.displayFormats = new Map();\n        if (data.displayFormats) {\n            for (const dtypeStr in data.displayFormats) {\n                const dtype = DataType[dtypeStr];\n                const formats = data.displayFormats[dtypeStr] || new Array();\n                this.displayFormats.set(dtype, formats);\n            }\n        }\n    }\n    /**\n     * Gets the display formats.\n     * @returns The display formats.\n     */\n    getDisplayFormats() {\n        return this.displayFormats;\n    }\n    /**\n     * Gets the display formats for type\n     * @param type The type\n     * @returns An array of display formats\n     */\n    getDisplayFormatsForType(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type);\n        }\n        return [];\n    }\n    /**\n     * Gets the default display format for the provided type\n     * @param type The type\n     * @returns The default type format or null\n     */\n    getDefaultFormat(type) {\n        if (this.displayFormats.has(type)) {\n            return this.displayFormats.get(type).filter(f => f.isdef)[0];\n        }\n        return null;\n    }\n    /**\n     * Sets data to data model.\n     * @param model Its JSON representation object or JSON string.\n     */\n    setData(model) {\n        if (typeof model === 'string') {\n            this.loadFromJSON(model);\n        }\n        else {\n            this.loadFromData(model);\n        }\n    }\n    /**\n     * Checks wether the data model is empty.\n     * @returns `true` if the data model is empty, otherwise `false`.\n     */\n    isEmpty() {\n        return this.rootEntity.subEntities.length === 0 && this.rootEntity.attributes.length === 0;\n    }\n    /**\n     * Gets ID of the data model.\n     * @returns The ID.\n     */\n    getId() {\n        return this.id;\n    }\n    /**\n     * Gets name of the data model.\n     * @returns The name.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Gets root entity of the data model.\n     * @returns The root entity.\n     */\n    getRootEntity() {\n        return this.rootEntity;\n    }\n    /**\n     * Finds editor by its ID.\n     * @param editorId The editor ID.\n     * @returns The value editor or `null`.\n     */\n    getEditorById(editorId) {\n        for (let editor of this.editors) {\n            if (editor.id === editorId) {\n                return editor;\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified model (it's root entity and all its sub-entities).\n     * @param attrId The attribute ID.\n     * @returns The attribute or `null`.\n     */\n    getAttributeById(attrId) {\n        let attr = this.getEntityAttrById(this.getRootEntity(), attrId);\n        if (!attr) {\n            return null;\n        }\n        return attr;\n    }\n    /**\n     * Checks wether attribute contains such property.\n     * @param attrId The attribute ID.\n     * @param propName The property name.\n     * @returns `true` if the attribute contains the property, otherwise `false`.\n     */\n    checkAttrProperty(attrId, propName) {\n        let attribute = this.getAttributeById(attrId);\n        if (attribute) {\n            if (typeof attribute[propName] === 'undefined') {\n                throw 'No such property: ' + propName;\n            }\n            if (attribute[propName]) {\n                return true;\n            }\n            else if (attribute.lookupAttr) {\n                attrId = attribute.lookupAttr;\n                attribute = this.getAttributeById(attrId);\n                return attribute && attribute[propName];\n            }\n            else {\n                return false;\n            }\n        }\n        else\n            return false;\n    }\n    /**\n     * Gets entity attribute by its ID.\n     * This function runs through all attributes inside specified entity and all its sub-entities.\n     * @param entity\n     * @param attrId\n     * @returns The attribute or `null`.\n     */\n    getEntityAttrById(entity, attrId) {\n        let idx;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (idx = 0; idx < attrCount; idx++) {\n                if (entity.attributes[idx].id == attrId) {\n                    return entity.attributes[idx];\n                }\n            }\n        }\n        let res;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (idx = 0; idx < subEntityCount; idx++) {\n                res = this.getEntityAttrById(entity.subEntities[idx], attrId);\n                if (res)\n                    return res;\n            }\n        }\n        return null;\n    }\n    listByEntityWithFilter(entity, filterFunc) {\n        let result = new Array();\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name);\n                    if (!caption) {\n                        caption = ent.caption;\n                    }\n                    let newEnt = utils.assign(this.createEntity(), { id: ent.name, text: caption, items: [], isEntity: true });\n                    newEnt.items = this.listByEntityWithFilter(ent, filterFunc);\n                    if (newEnt.items.length > 0)\n                        result.push(newEnt);\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id);\n                    if (!caption)\n                        caption = attr.caption;\n                    let newEnt = utils.assign(this.createEntity(), { id: attr.id, text: caption, dataType: attr.dataType });\n                    result.push(newEnt);\n                }\n            }\n        }\n        return result;\n    }\n    listByEntity(entity, opts, filterFunc) {\n        opts = opts || {};\n        let resultEntities = [];\n        let resultAttributes = [];\n        let caption;\n        let ent = null;\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let entIdx = 0; entIdx < subEntityCount; entIdx++) {\n                ent = entity.subEntities[entIdx];\n                if (!filterFunc || filterFunc(ent, null)) {\n                    caption = i18n.getText('Entities', ent.name) || ent.caption;\n                    let newEnt = utils.assign(this.createEntity(), {\n                        id: ent.name,\n                        text: caption,\n                        items: [],\n                        isEntity: true,\n                        description: ent.description\n                    });\n                    let newOpts = utils.assign({}, opts);\n                    newOpts.includeRootData = false;\n                    newEnt.items = this.listByEntity(ent, newOpts, filterFunc);\n                    if (newEnt.items.length > 0) {\n                        resultEntities.push(newEnt);\n                    }\n                }\n            }\n        }\n        let attr = null;\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let attrIdx = 0; attrIdx < attrCount; attrIdx++) {\n                attr = entity.attributes[attrIdx];\n                if (!filterFunc || filterFunc(entity, attr)) {\n                    caption = i18n.getText('Attributes', attr.id) || attr.caption;\n                    resultAttributes.push(utils.assign(this.createEntityAttr(entity), {\n                        id: attr.id, text: caption,\n                        dataType: attr.dataType, lookupAttr: attr.lookupAttr,\n                        description: attr.description\n                    }));\n                }\n            }\n        }\n        let sortCheck = (a, b) => {\n            if (a.text.toLowerCase() == b.text.toLowerCase()) {\n                return 0;\n            }\n            if (a.text.toLowerCase() > b.text.toLowerCase()) {\n                return 1;\n            }\n            return -1;\n        };\n        if (opts.sortEntities) {\n            resultEntities.sort(sortCheck);\n            resultAttributes.sort(sortCheck);\n        }\n        let result;\n        if (!opts.attrPlacement || opts.attrPlacement == 0) {\n            result = resultEntities.concat(resultAttributes);\n        }\n        else {\n            result = resultAttributes.concat(resultEntities);\n        }\n        if (opts.attrPlacement == 2) {\n            result.sort(sortCheck);\n        }\n        if (opts.includeRootData) {\n            caption = i18n.getText('Entities', entity.name);\n            if (!caption)\n                caption = entity.caption;\n            return { id: entity.name, text: caption, items: result };\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * Clears data model.\n     */\n    clear() {\n        this.rootEntity = this.createEntity();\n        this.editors = [];\n        this.version = '';\n    }\n    /**\n     * Add default value editors.\n     */\n    addDefaultValueEditors() {\n        let ve;\n        ve = this.addOrUpdateValueEditor('_DTE', EditorTag.Edit, DataType.String);\n        ve.defValue = '';\n        this.addOrUpdateValueEditor('_DPDE', EditorTag.DateTime, DataType.DateTime);\n        this.addOrUpdateValueEditor('_DPTE', EditorTag.DateTime, DataType.DateTime);\n    }\n    /**\n    * Add or update a value editor.\n    * @param id The id.\n    * @param tag The tag.\n    * @param resType The result type.\n    * @returns The value editor.\n    */\n    addOrUpdateValueEditor(id, tag, resType) {\n        let ve = utils.findItemById(this.editors, id);\n        if (!ve) {\n            ve = this.createValueEditor();\n            ve.id = id;\n            this.editors.push(ve);\n        }\n        ve.tag = tag;\n        ve.resType = resType;\n        return ve;\n    }\n    /**\n     * Gets entities tree.\n     * @param opts The options.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to options and the filter function\n     */\n    getEntitiesTree(opts, filterFunc) {\n        return this.listByEntity(this.getRootEntity(), opts, filterFunc);\n    }\n    /**\n     * Gets entities tree due to filter.\n     * @param filterFunc The filter function.\n     * Takes two parameters, Entity and EntityAttr (second parameter will be null for entities), and returns boolean (true if the corresponding entity or attribute).\n     * @returns The tree of the entities and their attributes according to the filter function\n     */\n    getEntitiesTreeWithFilter(filterFunc) {\n        return this.listByEntityWithFilter(this.getRootEntity(), filterFunc);\n    }\n    /**\n     * Finds full entity path by attribute\n     * @param attrId The attribute id.\n     * @param sep The separator.\n     * @returns The path.\n     */\n    getFullEntityPathByAttr(attrId, sep) {\n        sep = sep || ' ';\n        return this.getEntityPathByAttr(this.getRootEntity(), attrId, sep, true);\n    }\n    /**\n    * Finds entity path by attribute\n    * @param entity The entity.\n    * @param attrId The attribute id.\n    * @param sep The separator.\n    * @param root The root option.\n    * @returns The path.\n    */\n    getEntityPathByAttr(entity, attrId, sep, root) {\n        if (!entity)\n            return '';\n        sep = sep || ' ';\n        let entityCaption = '';\n        if (entity.caption && !root) {\n            let entityText = i18n.getText('Entities', entity.caption);\n            entityCaption = entityText ? entityText : entity.caption;\n        }\n        if (entity.attributes) {\n            let attrCount = entity.attributes.length;\n            for (let i = 0; i < attrCount; i++) {\n                if (entity.attributes[i].id == attrId) {\n                    return entityCaption;\n                }\n            }\n        }\n        if (entity.subEntities) {\n            let subEntityCount = entity.subEntities.length;\n            for (let i = 0; i < subEntityCount; i++) {\n                let ent = entity.subEntities[i];\n                let res = this.getEntityPathByAttr(ent, attrId, sep, false);\n                if (res !== '') {\n                    if (entityCaption !== '')\n                        res = entityCaption + sep + res;\n                    return res;\n                }\n            }\n        }\n        return '';\n    }\n    /**\n     * Gets the attribute text.\n     * @param attr The attribute.\n     * @param format The format.\n     * @returns Formatted text.\n     */\n    getAttributeText(attr, format) {\n        let attrText = i18n.getText('Attributes', attr.id);\n        if (!attrText) {\n            attrText = attr.caption;\n        }\n        if (!format) {\n            return attrText;\n        }\n        let result = '';\n        let entityPath = this.getFullEntityPathByAttr(attr.id, ' ');\n        if (entityPath) {\n            result = format.replace(new RegExp('{attr}', 'g'), attrText);\n            result = result.replace(new RegExp('{entity}', 'g'), entityPath);\n        }\n        else {\n            result = attrText;\n        }\n        return result.trim();\n    }\n    /**\n     * Scans model's entity tree and calls the callback functions for each attribute and entity.\n     * @param processAttribute The callback function which is called for each attribute in model's entity tree.\n     * The processed attribute is passed in the first function parameter.\n     * @param processEntity The callback function which is called for each entity in tree.\n     * The processed entity is passed in the first function parameter.\n     */\n    runThroughEntities(processAttribute, processEntity) {\n        this.getRootEntity().scan(processAttribute, processEntity);\n    }\n    /**\n     * Finds first attribute by filter.\n     * @param filterFunc The filter function. Takes EntityAttr object in parameter and returns boolean\n     */\n    getFirstAttributeByFilter(filterFunc) {\n        let res = null;\n        this.runThroughEntities(function (attr, opts) {\n            if (filterFunc(attr)) {\n                opts.stop = true;\n                res = attr;\n            }\n        }, null);\n        return res;\n    }\n}\n\n/**\n * Defines aggregations settings for the current context.\n * Group, aggregate columns, grand totals, etc.\n */\nclass AggregationSettings {\n    constructor(colStore) {\n        this.colStore = colStore;\n        this.aggregates = [];\n        this.groups = [];\n        this.useGrandTotals = false;\n        this.useRecordCount = false;\n        this._caseSensitiveGroups = false;\n        this.COUNT_FIELD_NAME = 'GRPRECCNT';\n    }\n    get caseSensitiveGroups() {\n        return this._caseSensitiveGroups;\n    }\n    set caseSensitiveGroups(value) {\n        this._caseSensitiveGroups = value;\n        this.updateCompareProc();\n    }\n    updateCompareProc() {\n        this.compareValues = this._caseSensitiveGroups\n            ? this.strictCompare\n            : this.caseInsensitiveCompare;\n    }\n    addGroup(settings) {\n        const cols = settings.columns || this.colStore.getColumnIds(settings.from, settings.to);\n        if (!this.colStore.validateColumns(cols))\n            throw \"Invalid columns: \" + cols;\n        if (this.hasColumnsInUse(cols))\n            throw \"Can't add same columns to different groups/aggregates\";\n        this.groups.push(Object.assign({ columns: cols }, settings));\n        return this;\n    }\n    addAggregateColumn(colIndexOrId, funcId) {\n        const colId = typeof colIndexOrId == 'string'\n            ? colIndexOrId\n            : this.colStore.getColumnIds(colIndexOrId, colIndexOrId)[0];\n        if (this.hasColumnsInUse([colId]) || !this.colStore.validateAggregate(colId, funcId))\n            throw 'Invalid aggregation function for the column: ' + colId;\n        this.aggregates.push({ colId, funcId });\n        return this;\n    }\n    addGrandTotals() {\n        this.useGrandTotals = true;\n        return this;\n    }\n    addCounts() {\n        this.useRecordCount = true;\n        return this;\n    }\n    getGroups() {\n        let cols = [];\n        const mappedGrops = this.groups.map(grp => {\n            cols = cols.concat(grp.columns);\n            return Object.assign(Object.assign({}, grp), { columns: Array.from(cols), aggregates: Array.from(this.aggregates) });\n        });\n        return mappedGrops;\n    }\n    getInternalGroups() {\n        return this.groups;\n    }\n    lastGroup() {\n        const groups = this.getGroups();\n        return groups[groups.length - 1];\n    }\n    getAggregates() {\n        return this.aggregates;\n    }\n    hasAggregates() {\n        return this.aggregates.length > 0;\n    }\n    hasGroups() {\n        return this.groups.length > 0;\n    }\n    hasGrandTotals() {\n        return this.useGrandTotals;\n    }\n    hasRecordCount() {\n        return this.useRecordCount;\n    }\n    isEmpty() {\n        return !(this.hasAggregates() || this.hasGroups() ||\n            this.hasGrandTotals() || this.hasRecordCount());\n    }\n    isValid() {\n        return (this.hasGroups() && (this.hasAggregates() || this.hasRecordCount()))\n            || (this.hasAggregates && this.hasGrandTotals());\n    }\n    drop() {\n        console.warn('\"drop()\" method is obsolete. Use \"clear()\" instead');\n        this.clear();\n    }\n    clear() {\n        this.groups = [];\n        this.aggregates = [];\n        this.useGrandTotals = false;\n        this.useRecordCount = false;\n        this.caseSensitiveGroups = false;\n        return this;\n    }\n    /**\n     * Checks if all columns from the list passed in the parameter are \"unused\".\n     * Here \"unused column\" means a column that is included neither in any group nor in the aggregates list.\n     * @param cols - the array of column IDs\n     * @returns true if all columns in the list are not used anywhere, othervise - fals\n     */\n    hasColumnsInUse(cols) {\n        for (const group of this.groups) {\n            const interCols = group.columns\n                .filter(c => cols.indexOf(c) >= 0);\n            if (interCols.length > 0)\n                return true;\n        }\n        for (const aggr of this.aggregates) {\n            if (cols.indexOf(aggr.colId) >= 0)\n                return true;\n        }\n        return false;\n    }\n    needAggrCalculation() {\n        return (this.hasAggregates() || this.hasRecordCount())\n            && (this.hasGrandTotals() || this.hasGroups());\n    }\n    saveToData() {\n        return {\n            groups: Array.from(this.groups),\n            ugt: this.useGrandTotals,\n            urc: this.useRecordCount,\n            csg: this.caseSensitiveGroups,\n            aggregates: Array.from(this.aggregates)\n        };\n    }\n    loadFromData(data) {\n        if (data) {\n            if (typeof data.ugt !== 'undefined')\n                this.useGrandTotals = data.ugt;\n            if (typeof data.urc !== 'undefined')\n                this.useRecordCount = data.urc;\n            if (typeof data.csg !== 'undefined')\n                this.caseSensitiveGroups = data.csg;\n            if (data.groups) {\n                this.groups = Array.from(data.groups);\n            }\n            if (data.aggregates) {\n                this.aggregates = Array.from(data.aggregates);\n            }\n        }\n    }\n    buildGroupKey(group, row) {\n        const caseInsensitive = !this.caseSensitiveGroups;\n        let result = {};\n        if (group) {\n            for (const colId of group.columns) {\n                let keyVal = row.getValue(colId);\n                if (caseInsensitive && typeof (keyVal) === 'string') {\n                    keyVal = keyVal.toLowerCase();\n                }\n                result[colId] = keyVal;\n            }\n        }\n        return result;\n    }\n    //returns true if value1 == value2\n    strictCompare(value1, value2) {\n        if (value1 instanceof Date) {\n            return value1.getTime() === value2.getTime();\n        }\n        else\n            return value1 === value2;\n    }\n    //makes a case insensative comparision of two values and return true if there are equal\n    caseInsensitiveCompare(value1, value2) {\n        if (value1 instanceof Date) {\n            return value1.getTime() === value2.getTime();\n        }\n        else {\n            const val1 = (typeof value1 === 'string') ? value1.toLowerCase() : value1;\n            const val2 = (typeof value2 === 'string') ? value2.toLowerCase() : value2;\n            return val1 === val2;\n        }\n    }\n}\n\nvar ColumnAlignment;\n(function (ColumnAlignment) {\n    ColumnAlignment[ColumnAlignment[\"None\"] = 0] = \"None\";\n    ColumnAlignment[ColumnAlignment[\"Left\"] = 1] = \"Left\";\n    ColumnAlignment[ColumnAlignment[\"Center\"] = 2] = \"Center\";\n    ColumnAlignment[ColumnAlignment[\"Right\"] = 3] = \"Right\";\n})(ColumnAlignment || (ColumnAlignment = {}));\nclass DataColumn {\n    constructor(desc) {\n        if (!desc)\n            throw Error(\"Options are required\");\n        if (!desc.id)\n            throw Error(\"Field Id is required\");\n        if (!desc.label)\n            throw Error(\"Label is required\");\n        this.id = desc.id;\n        this.type = utils.getIfDefined(desc.type, DataType.String);\n        this.label = desc.label;\n        this.originAttrId = desc.originAttrId;\n        this.isAggr = desc.isAggr || false;\n        this.displayFormat = desc.dfmt;\n        this.groupFooterColumnTemplate = desc.gfct;\n        this.style = desc.style || {};\n        this.description = desc.description;\n        this.calculatedWidth = 0;\n    }\n}\nclass DataColumnList {\n    constructor() {\n        this.items = [];\n        this.mapper = {};\n        this._dateColumnIdx = [];\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(colOrDesc) {\n        let col;\n        if (colOrDesc instanceof DataColumn) {\n            col = colOrDesc;\n        }\n        else {\n            col = new DataColumn(colOrDesc);\n        }\n        const index = this.items.length;\n        this.items.push(col);\n        this.mapper[col.id] = index;\n        if ([DataType.Date, DataType.DateTime, DataType.Time].indexOf(col.type) >= 0) {\n            this._dateColumnIdx.push(index);\n        }\n        return index;\n    }\n    updateDateColumnIdx() {\n        this._dateColumnIdx = this.getItems()\n            .filter(col => [DataType.Date, DataType.DateTime, DataType.Time].indexOf(col.type) >= 0)\n            .map((col, index) => index);\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.count) {\n            this.items[index] = col;\n            this.updateDateColumnIdx();\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex) {\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n            this.updateDateColumnIdx();\n        }\n    }\n    get(index) {\n        if (index >= 0 && index < this.count) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    getIndex(id) {\n        return this.mapper[id];\n    }\n    getItems() {\n        return this.items;\n    }\n    getDateColumnIndexes() {\n        return this._dateColumnIdx;\n    }\n    removeAt(index) {\n        const col = this.get(index);\n        this.items.splice(index, 1);\n        const removeDate = this._dateColumnIdx.indexOf(index);\n        if (removeDate >= 0) {\n            this._dateColumnIdx.splice(removeDate, 1);\n        }\n        delete this.mapper[col.id];\n    }\n    clear() {\n        this.items = [];\n        this._dateColumnIdx = [];\n        this.mapper = {};\n    }\n}\n\nclass DataRow {\n    constructor(columns, values) {\n        this.columns = columns;\n        this.values = values;\n    }\n    toArray() {\n        return Array.from(this.values);\n    }\n    size() {\n        return this.values.length;\n    }\n    getValue(colIdOrIndex) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        return this.values[index];\n    }\n    setValue(colIdOrIndex, value) {\n        let index;\n        if (typeof colIdOrIndex === \"string\") {\n            index = this.columns.getIndex(colIdOrIndex);\n            if (index === undefined) {\n                throw new RangeError(`No column with id '${colIdOrIndex}'`);\n            }\n        }\n        else {\n            index = colIdOrIndex;\n        }\n        if (index >= this.values.length)\n            throw new RangeError(\"Out of range: \" + index);\n        this.values[index] = value;\n    }\n}\n\nclass EasyDataTable {\n    constructor(options) {\n        this._chunkSize = 1000;\n        this._elasticChunks = false;\n        this.cachedRows = [];\n        this.total = 0;\n        this.loader = null;\n        this.needTotal = true;\n        this.isInMemory = false;\n        options = options || {};\n        this._chunkSize = options.chunkSize || this._chunkSize;\n        this._elasticChunks = options.elasticChunks || this._elasticChunks;\n        this.loader = options.loader;\n        if (typeof options.inMemory !== 'undefined') {\n            this.isInMemory = options.inMemory;\n        }\n        if (this.isInMemory) {\n            this.needTotal = false;\n        }\n        this._columns = new DataColumnList();\n        this.onUpdate = options.onUpdate;\n        if (options.columns) {\n            for (const colDesc of options.columns) {\n                this._columns.add(colDesc);\n            }\n        }\n        if (options.rows) {\n            for (const rowData of options.rows) {\n                const row = this.createRow(rowData);\n                this.addRow(row);\n            }\n        }\n        this.needTotal = !this._elasticChunks;\n    }\n    get columns() {\n        return this._columns;\n    }\n    get chunkSize() {\n        return this._chunkSize;\n    }\n    set chunkSize(value) {\n        this._chunkSize = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    get elasticChunks() {\n        return this._elasticChunks;\n    }\n    set elasticChunks(value) {\n        this._elasticChunks = value;\n        this.total = 0;\n        this.needTotal = !this.elasticChunks;\n        this.cachedRows = [];\n    }\n    getRows(params) {\n        let fromIndex = 0, count = this._chunkSize;\n        if (params) {\n            if ('page' in params) {\n                fromIndex = params.pageSize * (params.page - 1);\n                count = params.pageSize;\n            }\n            else {\n                fromIndex = params.offset;\n                count = params.limit;\n            }\n        }\n        let endIndex = fromIndex + count; //the first index of the next page\n        //if we don't calculate total on this request\n        if (!this.needTotal && !this.elasticChunks) {\n            if (fromIndex >= this.total) {\n                return Promise.resolve([]);\n            }\n            if (endIndex > this.total) {\n                endIndex = this.total;\n            }\n        }\n        if (this.isInMemory && endIndex > this.cachedRows.length) {\n            endIndex = this.cachedRows.length;\n        }\n        let allChunksCached = endIndex <= this.cachedRows.length;\n        if (allChunksCached) {\n            return Promise.resolve(this.cachedRows.slice(fromIndex, endIndex));\n        }\n        //if loader is not defined\n        if (!this.loader) {\n            throw `Loader is not defined. Can't get the rows from ${fromIndex} to ${endIndex}`;\n        }\n        // we need total only for the first request\n        const needTotal = this.needTotal;\n        if (this.needTotal) {\n            this.needTotal = false;\n        }\n        let offset = this.cachedRows.length;\n        let limit = endIndex - offset;\n        if (limit < this._chunkSize) {\n            limit = this._chunkSize;\n        }\n        const resultPromise = this.loader.loadChunk({\n            offset: offset,\n            limit: limit,\n            needTotal: needTotal\n        })\n            .then(result => {\n            if (needTotal) {\n                this.total = result.total;\n            }\n            Array.prototype.push.apply(this.cachedRows, result.table.getCachedRows());\n            if (endIndex > this.cachedRows.length) {\n                endIndex = this.cachedRows.length;\n            }\n            if (this.elasticChunks) {\n                const count = result.table.getCachedCount();\n                if (count < limit) {\n                    this.total = this.cachedRows.length;\n                }\n            }\n            this.fireUpdated();\n            return this.cachedRows.slice(fromIndex, endIndex);\n        });\n        return resultPromise;\n    }\n    getRow(index) {\n        return this.getRows({ offset: index, limit: 1 })\n            .then(rows => rows.length > 0 ? rows[0] : null);\n    }\n    getTotal() {\n        return this.total;\n    }\n    setTotal(total) {\n        this.total = total;\n        this.needTotal = false;\n    }\n    getCachedCount() {\n        return this.cachedRows.length;\n    }\n    clear() {\n        this.columns.clear();\n        this.cachedRows = [];\n        this.total = 0;\n        this.needTotal = !this._elasticChunks;\n        this.fireUpdated();\n    }\n    createRow(dataOrRow) {\n        const dateIdx = this._columns.getDateColumnIndexes();\n        const values = new Array(this._columns.count);\n        const getValue = dataOrRow instanceof DataRow\n            ? (colId) => dataOrRow.getValue(colId)\n            : (colId) => dataOrRow[colId];\n        if (dataOrRow) {\n            this.columns.getItems().forEach((column) => {\n                const value = getValue(column.id);\n                const index = this.columns.getIndex(column.id);\n                values[index] = (dateIdx.indexOf(index) >= 0)\n                    ? this.mapDate(value, column.type)\n                    : value;\n            });\n        }\n        return new DataRow(this._columns, values);\n    }\n    mapDate(value, dtype) {\n        if (value) {\n            let result = new Date(value);\n            if (isNaN(result.getTime())\n                && dtype == DataType.Time) {\n                result = utils.strToTime(value);\n            }\n            return result;\n        }\n        return null;\n    }\n    addRow(rowOrValues) {\n        let newRow;\n        if (Array.isArray(rowOrValues)) {\n            let values = rowOrValues;\n            const dateIdx = this._columns.getDateColumnIndexes();\n            if (dateIdx.length > 0) {\n                for (const idx of dateIdx) {\n                    if (values[idx]) {\n                        values[idx] = this.mapDate(values[idx], this._columns.get(idx).type);\n                    }\n                }\n            }\n            newRow = new DataRow(this._columns, values);\n        }\n        else {\n            newRow = this.createRow(rowOrValues);\n        }\n        this.cachedRows.push(newRow);\n        const cachedTotal = this.getCachedCount();\n        if (cachedTotal > this.total) {\n            this.total = cachedTotal;\n        }\n        return newRow;\n    }\n    getCachedRows() {\n        return this.cachedRows;\n    }\n    totalIsKnown() {\n        if (this.elasticChunks) {\n            const count = this.getCachedCount();\n            return count === this.total;\n        }\n        return !this.needTotal;\n    }\n    fireUpdated() {\n        if (this.onUpdate) {\n            this.onUpdate(this);\n        }\n    }\n}\n\n/**\n * EasyData representation of GUID.\n */\nclass EasyGuid {\n    /**\n     * Generates new GUID.\n     * @returns The string representation of GUID.\n     */\n    static newGuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * The representation of event emitter.\n */\nclass EventEmitter {\n    /**\n     * The default constructor.\n     * @param source The source.\n     */\n    constructor(source) {\n        this.silentMode = 0;\n        this.events = new Array();\n        this.source = source;\n    }\n    /**\n     * Subscries to the event.\n     * @param eventType The event type.\n     * @param callback The callback.\n     * @returns The subscribtion ID.\n     */\n    subscribe(eventType, callback) {\n        let event = this.getEventRecByType(eventType);\n        const eventCallback = {\n            id: EasyGuid.newGuid(),\n            callback: callback\n        };\n        if (event) {\n            event.eventCallbacks.push(eventCallback);\n        }\n        else {\n            event = {\n                type: eventType,\n                eventCallbacks: new Array(eventCallback)\n            };\n            this.events.push(event);\n        }\n        return eventCallback.id;\n    }\n    /**\n     * Unsubsribes from the event.\n     * @param eventType The event type.\n     * @param callbackId The subscribtion ID.\n     */\n    unsubscribe(eventType, callbackId) {\n        let event = this.getEventRecByType(eventType);\n        if (event) {\n            let index = -1;\n            for (index = 0; index < event.eventCallbacks.length; index++) {\n                if (event.eventCallbacks[index].id === callbackId) {\n                    break;\n                }\n            }\n            if (index >= 0) {\n                event.eventCallbacks.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Fires the event.\n     * @param eventType The event type.\n     * @param data The event data.\n     * @param postpone  The postpone.\n     * @param force To fire force. If value is `true`, ignores silent mode.\n     */\n    fire(eventType, data, postpone = 0, force = false) {\n        if (this.silentMode && !force) {\n            return;\n        }\n        let eventRec = this.getEventRecByType(eventType);\n        if (eventRec) {\n            const eqevent = {\n                type: eventType,\n                source: this.source,\n                data: data\n            };\n            let emitAllFunc = () => {\n                for (let callback of eventRec.eventCallbacks) {\n                    callback.callback(eqevent);\n                }\n            };\n            if (postpone > 0) {\n                setTimeout(emitAllFunc, postpone);\n            }\n            else {\n                emitAllFunc();\n            }\n        }\n    }\n    /**\n     * Enters to silent mode.\n     */\n    enterSilentMode() {\n        this.silentMode++;\n    }\n    /**\n     * Exits from silent mode.\n     */\n    exitSilentMode() {\n        if (this.silentMode) {\n            this.silentMode--;\n        }\n    }\n    /**\n     * Checks if emitter is in silent mode.\n     * @return `true`, if silent mode is enable.\n     */\n    isSilent() {\n        return this.silentMode > 0;\n    }\n    getEventRecByType(eventType) {\n        for (let event of this.events) {\n            if (event.type == eventType) {\n                return event;\n            }\n        }\n        return null;\n    }\n}\n\nfunction repeatString(str, times) {\n    return str.repeat(times);\n}\nfunction reverseString(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\nfunction strEndsWith(str, symbol) {\n    return str && str.lastIndexOf(symbol) == (str.length - symbol.length);\n}\n/**\n * Adds two paths and returns the result\n * Correctly processes leading and trailing slashes\n * @param path1\n * @param path2\n */\nfunction combinePath(path1, path2) {\n    let result = path1;\n    if (result != null && result.length > 0) {\n        if (result.charAt(result.length - 1) != '/')\n            result += \"/\";\n        result += path2;\n    }\n    else {\n        result = path2;\n    }\n    return result;\n}\n\nvar liquid;\n(function (liquid) {\n    function renderLiquidTemplate(template, vars) {\n        let result = template;\n        if (vars) {\n            for (let v in vars) {\n                const liquidVarRegexp = new RegExp('\\{\\{' + v + '\\}\\}', 'g');\n                result = result.replace(liquidVarRegexp, vars[v]);\n            }\n        }\n        return result;\n    }\n    liquid.renderLiquidTemplate = renderLiquidTemplate;\n})(liquid || (liquid = {}));\n\ni18n.resetLocales();\n\n//types\nif (typeof Object.values !== 'function') {\n    Object.values = function (obj) {\n        return Object.keys(obj).map(key => obj[key]);\n    };\n}\nif (typeof Math.trunc !== 'function') {\n    Math.trunc = function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n}\n\nexport { AggregationSettings, ColumnAlignment, DataColumn, DataColumnList, DataRow, DataType, EasyDataTable, EasyGuid, EditorTag, EntityAttrKind, EventEmitter, HttpClient, HttpMethod, HttpRequest, HttpResponseError, MetaData, MetaEntity, MetaEntityAttr, SpecialDatesResolver, TimeValue, ValueEditor, combinePath, i18n, liquid, registerSpecialDatesResolver, repeatString, reverseString, strEndsWith, utils };\n","\n/*\n * EasyData.JS UI v1.5.2\n * Copyright 2020-2024 Korzh.com\n * Licensed under MIT\n */\n\nimport { utils, ColumnAlignment, DataType, i18n, EventEmitter, DataRow, liquid } from '@easydata/core';\n\nvar browserUtils;\n(function (browserUtils) {\n    let _isFirefox = null;\n    let mobileModeChangeHandler;\n    function isIE() {\n        {\n            const ua = navigator.userAgent;\n            return ua.includes('MSIE') || ua.includes('Trident');\n        }\n    }\n    browserUtils.isIE = isIE;\n    function isEdge() {\n        const ua = window.navigator.userAgent;\n        return !isIE() && ua.includes('Edge/');\n    }\n    browserUtils.isEdge = isEdge;\n    function isFirefox() {\n        if (_isFirefox === null) {\n            const ua = navigator.userAgent;\n            _isFirefox = ua.toLowerCase().includes('firefox');\n        }\n        return _isFirefox;\n    }\n    browserUtils.isFirefox = isFirefox;\n    let _detectedIsMobileMode = false;\n    let _isMobileMode = undefined;\n    let detectIsMobileMode = () => {\n        const oldValue = isMobileMode();\n        _detectedIsMobileMode = window.matchMedia('only screen and (max-width: 840px)').matches\n            || window.matchMedia('only screen and (max-height: 420px)').matches;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    };\n    detectIsMobileMode();\n    window.addEventListener('resize', () => detectIsMobileMode());\n    function isMobileMode() {\n        if (_isMobileMode !== undefined) {\n            return _isMobileMode;\n        }\n        else {\n            return _detectedIsMobileMode;\n        }\n    }\n    browserUtils.isMobileMode = isMobileMode;\n    function setIsMobileMode(value) {\n        const oldValue = isMobileMode();\n        _isMobileMode = value;\n        const newValue = isMobileMode();\n        if (newValue !== oldValue && mobileModeChangeHandler) {\n            mobileModeChangeHandler(newValue);\n        }\n    }\n    browserUtils.setIsMobileMode = setIsMobileMode;\n    function onMobileModeChanged(callback) {\n        mobileModeChangeHandler = callback;\n    }\n    browserUtils.onMobileModeChanged = onMobileModeChanged;\n})(browserUtils || (browserUtils = {}));\n\n/**\n * Wraps all the elements inside \"parent\" by \"wrapper\" element\n * @param parent The element to add wrapper to.\n * @param wrapper The element that will wrap child elements.\n */\nfunction wrapInner(parent, wrapper) {\n    parent.appendChild(wrapper);\n    while (parent.firstChild !== wrapper) {\n        wrapper.appendChild(parent.firstChild);\n    }\n}\n/**\n * Creates ands adds a new [[HTMLElement]] to \"parent\"\n * @param parent The element to add new element to.\n * @param tag Html tag of the new element.\n * @param options The options. In particular, options.cssClass sets the new element class.\n * @returns New element.\n */\nfunction addElement(parent, tag, options) {\n    let element = document.createElement(tag);\n    let opts = options || {};\n    if (opts.cssClass) {\n        element.className = opts.cssClass;\n    }\n    parent.appendChild(element);\n    return element;\n}\n/**\n * Adds css class to the html element.\n * @param element The element to add css class to.\n * @param className The name of the css class to be added.\n */\nfunction addCssClass(element, className) {\n    element.className = (element.className)\n        ? element.className + ' ' + className\n        : className;\n}\n/**\n * Hides the html element.\n * @param element The element to be hidden.\n */\nfunction hideElement(element) {\n    element.style.display = 'none';\n}\n/**\n * Shows the html element.\n * @param element The element to be shown.\n * @param display The value of \"display\" style to be set. Default value is \"block\".\n */\nfunction showElement(element, display) {\n    if (!display) {\n        display = '';\n    }\n    element.style.display = display;\n}\n/**\n * Hides the \"first\" element and shows the \"second\".\n * @param first The element to be hidden.\n * @param second The element to be shown.\n * @param options The options. The following options are applied:\n * - display - the value of \"display\" style to be set. Default value is \"block\"\n * - duration - the duration of fading in and out\n * - complete - the callback to be called when toggle is complete\n */\nfunction toggleVisibility(first, second, options) {\n    if (!options) {\n        options = {};\n    }\n    if (!options.display) {\n        options.display = '';\n    }\n    if (!options.duration) {\n        options.duration = 200;\n    }\n    //TODO: later we need to make it fading in and out\n    hideElement(first);\n    showElement(second, options.display);\n    if (options.complete) {\n        options.complete();\n    }\n}\n/**\n * Checks if element is visible\n * @param element The element to check.\n * @returns `true` if visible, otherwise - `false`.\n */\nfunction isVisible(element) {\n    return element.style.display != 'none'\n        && element.offsetWidth != 0\n        && element.offsetHeight != 0;\n}\nfunction createBrowserEvent(eventName) {\n    var event;\n    if (typeof (Event) === 'function') {\n        event = new Event(eventName);\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent(eventName, true, true);\n    }\n    return event;\n}\nfunction getViewportSize() {\n    const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction getDocSize() {\n    if (browserUtils.isIE())\n        return getWinSize();\n    const width = Math.max(document.documentElement.clientWidth, document.body.clientWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight, document.body.clientHeight || 0);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction getScrollPos() {\n    const body = document.body;\n    const docElem = document.documentElement;\n    return {\n        top: window.pageYOffset || docElem.scrollTop || body.scrollTop,\n        left: window.pageXOffset || docElem.scrollLeft || body.scrollLeft\n    };\n}\nfunction getElementAbsolutePos(element) {\n    let res = { x: 0, y: 0 };\n    if (element !== null) {\n        const position = offset(element);\n        res = { x: position.left, y: position.top };\n    }\n    return res;\n}\nfunction offset(element) {\n    const defaultBoundingClientRect = { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 };\n    let box;\n    try {\n        box = element.getBoundingClientRect();\n    }\n    catch (_a) {\n        box = defaultBoundingClientRect;\n    }\n    const body = document.body;\n    const docElem = document.documentElement;\n    const scollPos = getScrollPos();\n    const scrollTop = scollPos.top;\n    const scrollLeft = scollPos.left;\n    const clientTop = docElem.clientTop || body.clientTop || 0;\n    const clientLeft = docElem.clientLeft || body.clientLeft || 0;\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n    return { top: Math.round(top), left: Math.round(left) };\n}\nfunction getWinSize() {\n    return {\n        width: window.innerWidth,\n        height: window.innerHeight\n    };\n}\nfunction slideDown(target, duration, callback) {\n    target.style.removeProperty('display');\n    let display = window.getComputedStyle(target).display;\n    if (display === 'none')\n        display = 'block';\n    target.style.display = display;\n    let height = target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0 + 'px';\n    target.style.paddingTop = 0 + 'px';\n    target.style.paddingBottom = 0 + 'px';\n    target.style.marginTop = 0 + 'px';\n    target.style.marginBottom = 0 + 'px';\n    target.offsetHeight;\n    target.style.boxSizing = 'border-box';\n    target.style.transitionProperty = \"height, margin, padding\";\n    target.style.transitionDuration = duration + 'ms';\n    target.style.height = height + 'px';\n    target.style.removeProperty('padding-top');\n    target.style.removeProperty('padding-bottom');\n    target.style.removeProperty('margin-top');\n    target.style.removeProperty('margin-bottom');\n    window.setTimeout(() => {\n        target.style.removeProperty('height');\n        target.style.removeProperty('overflow');\n        target.style.removeProperty('transition-duration');\n        target.style.removeProperty('transition-property');\n        target.style.removeProperty('box-sizing');\n        if (callback) {\n            callback();\n        }\n    }, duration);\n}\nfunction slideUp(target, duration, callback) {\n    target.style.transitionProperty = 'height, margin, padding';\n    target.style.transitionDuration = duration + 'ms';\n    target.style.boxSizing = 'border-box';\n    target.style.height = target.offsetHeight + 'px';\n    target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0 + 'px';\n    target.style.paddingTop = 0 + 'px';\n    target.style.paddingBottom = 0 + 'px';\n    target.style.marginTop = 0 + 'px';\n    target.style.marginBottom = 0 + 'px';\n    window.setTimeout(() => {\n        target.style.display = 'none';\n        target.style.removeProperty('height');\n        target.style.removeProperty('padding-top');\n        target.style.removeProperty('padding-bottom');\n        target.style.removeProperty('margin-top');\n        target.style.removeProperty('margin-bottom');\n        target.style.removeProperty('overflow');\n        target.style.removeProperty('transition-duration');\n        target.style.removeProperty('transition-property');\n        target.style.removeProperty('box-sizing');\n        if (callback) {\n            callback();\n        }\n    }, duration);\n}\nconst eqCssPrefix = 'eqjs';\nconst eqCssMobile = 'eqjs-mobile';\nfunction getMobileCssClass() {\n    return browserUtils.isMobileMode() ? 'k-mobile' : null;\n}\n\nfunction mask(input, maskPattern) {\n    const d = { 9: '[0-9]', a: '[a-z]' };\n    const mask = maskPattern.split('');\n    const keyDownHandler = (e) => {\n        // backspace key or delete key\n        if (e.keyCode === 8 || e.keyCode === 46) {\n            e.preventDefault();\n            let mskd = [];\n            let startSelection = input.selectionStart;\n            if (startSelection == 0)\n                return;\n            let selection = startSelection;\n            let onlyLodash = true;\n            for (let index = mask.length - 1; index >= 0; index--) {\n                const el = mask[index];\n                if (d[el]) {\n                    let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                    if (t && index != startSelection - 1) {\n                        onlyLodash = false;\n                    }\n                    if (index === startSelection - 1)\n                        selection--;\n                    mskd.push(t && index != startSelection - 1\n                        ? input.value.charAt(index)\n                        : '_');\n                }\n                else {\n                    if (index === selection - 1)\n                        selection--;\n                    if (startSelection - 1 === index)\n                        startSelection--;\n                    mskd.push(el);\n                }\n            }\n            input.value = !onlyLodash ? mskd.reverse().join('') : '';\n            input.selectionStart = input.selectionEnd = selection < 0 ? 0 : selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const keyPressHandler = (e) => {\n        const char = String.fromCharCode(e.charCode);\n        if (char) {\n            e.preventDefault();\n            let mskd = [];\n            let selectionStart = input.selectionStart;\n            let selection = selectionStart;\n            mask.forEach((el, index) => {\n                if (d[el]) {\n                    const ch = (index != selectionStart)\n                        ? input.value.charAt(index)\n                        : char;\n                    let t = new RegExp(d[el], 'i').test(ch);\n                    mskd.push(t ? ch : '_');\n                    if (t && selectionStart === index)\n                        selection++;\n                }\n                else {\n                    mskd.push(el);\n                    if (selection === index)\n                        selection++;\n                    if (selectionStart === index)\n                        selectionStart++;\n                }\n            });\n            input.value = mskd.join('');\n            input.selectionStart = input.selectionEnd = selection;\n            const event = document.createEvent('Event');\n            event.initEvent('input', true, true);\n            input.dispatchEvent(event);\n        }\n    };\n    const inputHandler = (e) => {\n        if (e.type === 'focus' && input.value !== '')\n            return;\n        let mskd = [];\n        let startSelection = input.selectionStart;\n        mask.forEach((el, index) => {\n            if (d[el]) {\n                let t = new RegExp(d[el], 'i').test(input.value.charAt(index));\n                mskd.push(t ? input.value.charAt(index) : '_');\n            }\n            else {\n                mskd.push(el);\n            }\n        });\n        input.value = mskd.join('');\n        input.selectionStart = input.selectionEnd = startSelection;\n    };\n    input.addEventListener('keydown', keyDownHandler);\n    input.addEventListener('keypress', keyPressHandler);\n    input.addEventListener('input', inputHandler);\n    input.addEventListener('focus', inputHandler);\n}\n\nclass DomElementBuilder {\n    constructor(tag, parent) {\n        if (typeof tag === \"string\") {\n            this.element = document.createElement(tag);\n        }\n        else {\n            this.element = tag;\n        }\n        if (parent && this.element.parentElement !== parent) {\n            parent.appendChild(this.element);\n        }\n    }\n    addChild(tag, childBuilder) {\n        const builder = domel(tag, this.element);\n        if (childBuilder) {\n            childBuilder(builder);\n        }\n        return this;\n    }\n    addChildElement(element) {\n        if (element) {\n            this.element.appendChild(element);\n        }\n        return this;\n    }\n    attr(attrId, attrValue) {\n        this.element.setAttribute(attrId, attrValue);\n        return this;\n    }\n    id(value) {\n        return this.attr(\"id\", value);\n    }\n    focus() {\n        this.element.focus();\n        return this;\n    }\n    title(value) {\n        return this.attr('title', value);\n    }\n    data(dataId, dataValue = null) {\n        if (dataValue === null) {\n            this.element.removeAttribute('data-' + dataId);\n            return this;\n        }\n        else {\n            return this.attr('data-' + dataId, dataValue);\n        }\n    }\n    show() {\n        return this.removeStyle('display');\n    }\n    hide(toHide = true) {\n        return (toHide) ? this.setStyle('display', 'none') : this;\n    }\n    visible(isVisible = true) {\n        return isVisible ? this.setStyle('visibility', 'visible') : this.setStyle('visibility', 'hidden');\n    }\n    isVisible() {\n        return !!(this.element.offsetWidth || this.element.offsetHeight || this.element.getClientRects().length);\n    }\n    addClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.add(fullList[i]);\n        }\n        return this;\n    }\n    removeClass(className, ...classNames) {\n        if (className) {\n            const fullList = [...className.trim().split(\" \"), ...classNames];\n            for (let i = 0; i < fullList.length; i++)\n                this.element.classList.remove(fullList[i]);\n        }\n        return this;\n    }\n    toggleClass(className, force = undefined) {\n        if (className) {\n            this.element.classList.toggle(className, force);\n        }\n        return this;\n    }\n    on(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.addEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    off(eventType, listener) {\n        const eventTypes = eventType.split(' ');\n        for (let i = 0; i < eventTypes.length; i++) {\n            this.element.removeEventListener(eventTypes[i], listener);\n        }\n        return this;\n    }\n    setStyle(styleId, styleValue) {\n        this.element.style.setProperty(styleId, styleValue);\n        return this;\n    }\n    removeStyle(styleId) {\n        this.element.style.removeProperty(styleId);\n        return this;\n    }\n    text(text) {\n        this.element.innerText = text;\n        return this;\n    }\n    html(html) {\n        this.element.innerHTML = html;\n        return this;\n    }\n    clear() {\n        const oldElem = this.element;\n        this.element = document.createElement(this.element.tagName);\n        oldElem.replaceWith(this.element);\n    }\n    addText(text) {\n        const textEl = document.createTextNode(text);\n        this.element.appendChild(textEl);\n        return this;\n    }\n    addHtml(html) {\n        this.element.innerHTML += html;\n        return this;\n    }\n    toDOM() {\n        return this.element;\n    }\n    appendTo(parent) {\n        if (parent) {\n            parent.appendChild(this.element);\n        }\n        return this;\n    }\n}\nclass DomTextAreaElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"textarea\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    rows(rows) {\n        this.element.rows = rows;\n        return this;\n    }\n    cols(cols) {\n        this.element.cols = cols;\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nclass DomInputElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"input\", parent);\n        }\n    }\n    name(value) {\n        this.element.name = value;\n        return this;\n    }\n    type(value) {\n        this.element.type = value;\n        return this;\n    }\n    size(value) {\n        this.element.size = value;\n        return this;\n    }\n    value(value) {\n        if (value instanceof Date) {\n            this.element.valueAsDate = value;\n        }\n        else if (typeof value === \"number\") {\n            this.element.valueAsNumber = value;\n        }\n        else {\n            this.element.value = value;\n        }\n        return this;\n    }\n    mask(maskPattern) {\n        mask(this.element, maskPattern);\n        return this;\n    }\n}\nclass DomSelectElementBuilder extends DomElementBuilder {\n    constructor(element, parent) {\n        if (element) {\n            super(element, parent);\n        }\n        else {\n            super(\"select\", parent);\n        }\n    }\n    addOption(value) {\n        const option = document.createElement('option');\n        if (typeof value === \"string\") {\n            option.value = value;\n            option.innerHTML = value;\n        }\n        else {\n            option.value = value.value;\n            option.innerHTML = value.title || value.value;\n            option.selected = value.selected || false;\n        }\n        this.element.appendChild(option);\n        return this;\n    }\n    value(value) {\n        this.element.value = value;\n        return this;\n    }\n}\nfunction domel(tag, parent) {\n    if (tag === \"div\" || tag instanceof HTMLDivElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    if (tag === \"span\" || tag instanceof HTMLSpanElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"a\" || tag instanceof HTMLAnchorElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"button\" || tag instanceof HTMLButtonElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"img\" || tag instanceof HTMLImageElement) {\n        return new DomElementBuilder(tag, parent);\n    }\n    else if (tag === \"input\" || tag instanceof HTMLInputElement) {\n        return new DomInputElementBuilder(tag instanceof HTMLInputElement ? tag : null, parent);\n    }\n    else if (tag === \"textarea\" || tag instanceof HTMLTextAreaElement) {\n        return new DomTextAreaElementBuilder(tag instanceof HTMLTextAreaElement ? tag : null, parent);\n    }\n    else if (tag === \"select\" || tag instanceof HTMLSelectElement) {\n        return new DomSelectElementBuilder(tag instanceof HTMLSelectElement ? tag : null, parent);\n    }\n    return new DomElementBuilder(tag, parent);\n}\n\nconst touchEventIsDefined = typeof TouchEvent !== 'undefined';\nvar DropEffect;\n(function (DropEffect) {\n    DropEffect[\"None\"] = \"none\";\n    DropEffect[\"Allow\"] = \"allow\";\n    DropEffect[\"Forbid\"] = \"forbid\";\n})(DropEffect || (DropEffect = {}));\nclass EqDragEvent {\n    constructor(item, dragImage, sourceEvent) {\n        this.dropEffect = DropEffect.Allow;\n        this.pageX = 0;\n        this.pageY = 0;\n        this.item = item;\n        this.dragImage = dragImage;\n        this.data = item.data;\n        this.sourceEvent = sourceEvent;\n        if (sourceEvent && sourceEvent instanceof MouseEvent) {\n            this.pageX = sourceEvent.pageX,\n                this.pageY = sourceEvent.pageY;\n        }\n        if (sourceEvent && touchEventIsDefined && sourceEvent instanceof TouchEvent\n            && sourceEvent.touches[0]) {\n            this.pageX = sourceEvent.touches[0].pageX,\n                this.pageY = sourceEvent.touches[0].pageY;\n        }\n    }\n}\nclass Position {\n    constructor(ev) {\n        if (ev && ev instanceof MouseEvent) {\n            this.x = ev.pageX,\n                this.y = ev.pageY;\n        }\n        if (ev && touchEventIsDefined && ev instanceof TouchEvent && ev.touches[0]) {\n            this.x = ev.touches[0].pageX,\n                this.y = ev.touches[0].pageY;\n        }\n    }\n}\nclass DragManager {\n    constructor() {\n        this.delta = 5;\n        this.draggableItem = null;\n        this.dragImage = null;\n        this.finishedSuccessfully = false;\n        this.mouseDownPosition = null;\n        this.containerDescriptors = [];\n        this.containerDescriptorIndex = -1;\n        this.dropEffect = DropEffect.None;\n        this.classPrefix = 'eqjs-drop';\n        this.DRAG_DISABLED_ATTR = 'drag-disabled';\n    }\n    registerDraggableItem(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in draggle item is null or undefined\");\n        }\n        element.ondragstart = function () {\n            return false;\n        };\n        const detectDragging = (ev) => {\n            if (element.hasAttribute(this.DRAG_DISABLED_ATTR)) {\n                return;\n            }\n            ev.preventDefault();\n            if (ev instanceof MouseEvent) {\n                ev.stopPropagation();\n            }\n            const cursorPosition = new Position(ev);\n            if (Math.abs(cursorPosition.x - this.mouseDownPosition.x) > this.delta\n                || Math.abs(cursorPosition.y - this.mouseDownPosition.y) > this.delta) {\n                startDragging(ev);\n            }\n        };\n        const mouseMoveEventListener = (ev) => {\n            this.mouseMoveDragListener(ev);\n        };\n        const startDragging = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            this.finishedSuccessfully = false;\n            if (descriptor.beforeDragStart)\n                descriptor.beforeDragStart();\n            this.dragImage = domel('div')\n                .setStyle('position', 'absolute')\n                .setStyle('z-index', '65530')\n                .toDOM();\n            document.body.appendChild(this.dragImage);\n            this.dragImage.appendChild(element.cloneNode(true));\n            if (descriptor.renderer) {\n                descriptor.renderer(this.dragImage);\n            }\n            this.dropEffect = DropEffect.None;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n            this.draggableItem = {\n                element: element,\n                scope: descriptor.scope,\n                data: descriptor.data\n            };\n            this.updateDragItemPosition(ev);\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = this.dropEffect;\n            if (descriptor.onDragStart) {\n                descriptor.onDragStart(event);\n            }\n            if (this.dropEffect !== event.dropEffect) {\n                this.dropEffect = event.dropEffect;\n                this.updateImageClass(this.dropEffect);\n            }\n            document.addEventListener('mousemove', mouseMoveEventListener, true);\n            document.addEventListener('touchmove', mouseMoveEventListener, true);\n        };\n        const mouseDownListener = (ev) => {\n            if (touchEventIsDefined && ev instanceof TouchEvent) {\n                ev.preventDefault();\n            }\n            this.mouseDownPosition = new Position(ev);\n            element.addEventListener('mousemove', detectDragging);\n            element.addEventListener('touchmove', detectDragging);\n            document.addEventListener('mouseup', mouseUpListener);\n            document.addEventListener('touchend', mouseUpListener);\n        };\n        element.addEventListener('mousedown', mouseDownListener);\n        element.addEventListener('touchstart', mouseDownListener);\n        const mouseUpListener = (ev) => {\n            this.mouseDownPosition = null;\n            element.removeEventListener('mousemove', detectDragging);\n            element.removeEventListener('touchmove', detectDragging);\n            document.removeEventListener('mousemove', mouseMoveEventListener, true);\n            document.removeEventListener('touchmove', mouseMoveEventListener, true);\n            if (this.draggableItem) {\n                endDraggind(ev);\n            }\n        };\n        const endDraggind = (ev) => {\n            try {\n                if (this.containerDescriptorIndex >= 0) {\n                    const dropContDesc = this.containerDescriptors[this.containerDescriptorIndex];\n                    const container = {\n                        element: dropContDesc.element,\n                        scopes: dropContDesc.scopes,\n                        data: dropContDesc.data\n                    };\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    try {\n                        if (container.scopes.indexOf(this.draggableItem.scope) >= 0\n                            && this.dropEffect === DropEffect.Allow) {\n                            this.finishedSuccessfully = true;\n                            if (dropContDesc.onDrop) {\n                                dropContDesc.onDrop(container, event);\n                            }\n                        }\n                    }\n                    finally {\n                        if (dropContDesc.onDragLeave) {\n                            dropContDesc.onDragLeave(container, event);\n                        }\n                    }\n                }\n            }\n            finally {\n                try {\n                    const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                    event.data.finishedSuccessfully = this.finishedSuccessfully;\n                    if (descriptor.onDragEnd) {\n                        descriptor.onDragEnd(event);\n                    }\n                }\n                finally {\n                    this.draggableItem = null;\n                    if (this.dragImage && this.dragImage.parentElement) {\n                        this.dragImage.parentElement.removeChild(this.dragImage);\n                    }\n                    this.dragImage = null;\n                    this.finishedSuccessfully = false;\n                    document.removeEventListener('mouseup', mouseUpListener);\n                    document.removeEventListener('touchend', mouseUpListener);\n                }\n            }\n        };\n    }\n    registerDropContainer(descriptor) {\n        const element = descriptor.element;\n        if (!element) {\n            throw Error(\"Element in drop container is null or undefined\");\n        }\n        this.containerDescriptors.push(descriptor);\n    }\n    removeDropContainer(descriptorOrSlot) {\n        const descs = this.containerDescriptors\n            .filter(desc => desc === descriptorOrSlot\n            || desc.element == descriptorOrSlot);\n        if (descs) {\n            for (const desc of descs) {\n                utils.removeArrayItem(this.containerDescriptors, desc);\n            }\n        }\n    }\n    mouseMoveDragListener(ev) {\n        if (ev instanceof MouseEvent) {\n            ev.preventDefault();\n        }\n        ev.stopPropagation();\n        this.updateDragItemPosition(ev);\n        if (this.containerDescriptorIndex == -1) {\n            for (let i = 0; i < this.containerDescriptors.length; i++) {\n                const descriptor = this.containerDescriptors[i];\n                if (this.detectDragEnterEvent(descriptor.element, ev)) {\n                    this.containerDescriptorIndex = i;\n                    break;\n                }\n            }\n            if (this.containerDescriptorIndex >= 0) {\n                this.dragEnterEvent(ev);\n            }\n        }\n        else {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            if (this.detectDragLeaveEvent(descriptor.element, ev)) {\n                this.dragLeaveEvent(ev);\n                this.containerDescriptorIndex = -1;\n            }\n        }\n        if (this.containerDescriptorIndex >= 0) {\n            const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n            const container = {\n                element: descriptor.element,\n                scopes: descriptor.scopes,\n                data: descriptor.data\n            };\n            if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n                const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n                event.dropEffect = this.dropEffect;\n                if (descriptor.onDragOver) {\n                    descriptor.onDragOver(container, event);\n                }\n            }\n        }\n    }\n    updateCusror(dropEffect) {\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n            case DropEffect.Forbid:\n                this.setCursorStyle(this.dragImage, 'no-drop');\n                break;\n            default:\n                this.setCursorStyle(this.dragImage, 'grabbing');\n                break;\n        }\n    }\n    updateImageClass(dropEffect) {\n        this.dragImage.classList.remove(`${this.classPrefix}-allow`);\n        this.dragImage.classList.remove(`${this.classPrefix}-forbid`);\n        this.dragImage.classList.remove(`${this.classPrefix}-none`);\n        switch (dropEffect) {\n            case DropEffect.Allow:\n                this.dragImage.classList.add(`${this.classPrefix}-allow`);\n                break;\n            case DropEffect.None:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n            case DropEffect.Forbid:\n                this.dragImage.classList.add(`${this.classPrefix}-forbid`);\n                break;\n            default:\n                this.dragImage.classList.add(`${this.classPrefix}-none`);\n                break;\n        }\n    }\n    setCursorStyle(element, cursor) {\n        if (element) {\n            element.style.cursor = cursor;\n            for (let i = 0; i < element.children.length; i++) {\n                this.setCursorStyle(element.children[i], cursor);\n            }\n        }\n    }\n    updateDragItemPosition(ev) {\n        if (this.dragImage) {\n            const pos = new Position(ev);\n            this.dragImage.style.top = (pos.y - this.dragImage.offsetHeight / 2) + 'px';\n            this.dragImage.style.left = (pos.x - this.dragImage.offsetWidth / 2) + 'px';\n        }\n    }\n    dragEnterEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.Allow;\n            if (descriptor.onDragEnter) {\n                descriptor.onDragEnter(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n        else {\n            if (this.dropEffect !== DropEffect.Forbid) {\n                this.dropEffect = DropEffect.None;\n                this.updateCusror(this.dropEffect);\n                this.updateImageClass(this.dropEffect);\n            }\n        }\n    }\n    dragLeaveEvent(ev) {\n        const descriptor = this.containerDescriptors[this.containerDescriptorIndex];\n        const container = {\n            element: descriptor.element,\n            scopes: descriptor.scopes,\n            data: descriptor.data\n        };\n        if (container.scopes.indexOf(this.draggableItem.scope) >= 0) {\n            const event = new EqDragEvent(this.draggableItem, this.dragImage, ev);\n            event.dropEffect = DropEffect.None;\n            if (descriptor.onDragLeave) {\n                descriptor.onDragLeave(container, event);\n            }\n            this.dropEffect = event.dropEffect;\n            this.updateCusror(this.dropEffect);\n            this.updateImageClass(this.dropEffect);\n        }\n    }\n    detectDragEnterEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y < containerPos.y || pos.y > containerPos.y + container.offsetHeight) {\n            return false;\n        }\n        if (pos.x < containerPos.x || pos.x > containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n    detectDragLeaveEvent(container, ev) {\n        const containerPos = getElementAbsolutePos(container);\n        const pos = new Position(ev);\n        if (pos.y > containerPos.y && pos.y < containerPos.y + container.offsetHeight\n            && pos.x > containerPos.x && pos.x < containerPos.x + container.offsetWidth) {\n            return false;\n        }\n        return true;\n    }\n}\n//global variable\nconst eqDragManager = new DragManager();\n\nvar AutoResizeColumns;\n(function (AutoResizeColumns) {\n    AutoResizeColumns[AutoResizeColumns[\"Always\"] = 0] = \"Always\";\n    AutoResizeColumns[AutoResizeColumns[\"Once\"] = 1] = \"Once\";\n    AutoResizeColumns[AutoResizeColumns[\"Never\"] = 2] = \"Never\";\n})(AutoResizeColumns || (AutoResizeColumns = {}));\n\n//import { CellRendererType } from \"./easy_grid_cell_renderer\";\n//import { GridCellRenderer } from './easy_grid_cell_renderer';\nconst DEFAULT_WIDTH_STRING = 250;\nconst ROW_NUM_WIDTH = 60;\nvar GridColumnAlign;\n(function (GridColumnAlign) {\n    GridColumnAlign[GridColumnAlign[\"NONE\"] = 1] = \"NONE\";\n    GridColumnAlign[GridColumnAlign[\"LEFT\"] = 2] = \"LEFT\";\n    GridColumnAlign[GridColumnAlign[\"CENTER\"] = 3] = \"CENTER\";\n    GridColumnAlign[GridColumnAlign[\"RIGHT\"] = 4] = \"RIGHT\";\n})(GridColumnAlign || (GridColumnAlign = {}));\nfunction MapAlignment(alignment) {\n    switch (alignment) {\n        case ColumnAlignment.Left:\n            return GridColumnAlign.LEFT;\n        case ColumnAlignment.Center:\n            return GridColumnAlign.CENTER;\n        case ColumnAlignment.Right:\n            return GridColumnAlign.RIGHT;\n        default:\n            return GridColumnAlign.NONE;\n    }\n}\nclass GridColumn {\n    constructor(column, grid, isRowNum = false) {\n        this._label = null;\n        this._description = null;\n        //public left: number;\n        this.align = GridColumnAlign.NONE;\n        this.isVisible = true;\n        this.isRowNum = false;\n        this.dataColumn = column;\n        this.grid = grid;\n        const widthOptions = grid.options.columnWidths || {};\n        if (column) {\n            if (column.style.alignment) {\n                this.align = MapAlignment(column.style.alignment);\n            }\n            this.width = (widthOptions && widthOptions[this.type]) ? widthOptions[this.type].default : DEFAULT_WIDTH_STRING;\n            this._description = column.description;\n        }\n        else if (isRowNum) {\n            this.isRowNum = true;\n            this.width = (widthOptions && widthOptions.rowNumColumn) ? widthOptions.rowNumColumn.default : ROW_NUM_WIDTH;\n            this._label = '';\n        }\n    }\n    get label() {\n        return this._label ? this._label : this.isRowNum ? '' : this.dataColumn.label;\n    }\n    ;\n    set label(value) {\n        this._label = this.label;\n    }\n    /** Get column description. */\n    get description() {\n        return this._description;\n    }\n    get type() {\n        return this.dataColumn ? this.dataColumn.type : null;\n    }\n}\nclass GridColumnList {\n    constructor(columnList, grid) {\n        this.items = [];\n        this.grid = grid;\n        this.sync(columnList);\n    }\n    sync(columnList, hasRowNumCol = true) {\n        this.clear();\n        const rowNumCol = new GridColumn(null, this.grid, true);\n        this.add(rowNumCol);\n        if (!hasRowNumCol) {\n            rowNumCol.isVisible = false;\n        }\n        if (columnList) {\n            for (let column of columnList.getItems()) {\n                const col = new GridColumn(column, this.grid);\n                if (this.grid.options.onSyncGridColumn) {\n                    this.grid.options.onSyncGridColumn(col);\n                }\n                this.add(col);\n            }\n        }\n    }\n    get count() {\n        return this.items.length;\n    }\n    add(col) {\n        const index = this.items.length;\n        this.items.push(col);\n        return index;\n    }\n    put(index, col) {\n        if (index >= 0 && index < this.items.length) {\n            this.items[index] = col;\n        }\n    }\n    move(col, newIndex) {\n        let oldIndex = this.items.indexOf(col);\n        if (oldIndex >= 0 && oldIndex != newIndex)\n            utils.moveArrayItem(this.items, oldIndex, newIndex);\n    }\n    get(index) {\n        if (index >= 0 && index < this.items.length) {\n            return this.items[index];\n        }\n        else {\n            return null;\n        }\n    }\n    //    public getIndex(name: string) : number {\n    //        return this.mapper[name];\n    //    }\n    getItems() {\n        return this.items;\n    }\n    removeAt(index) {\n        this.get(index);\n        this.items.splice(index, 1);\n        //delete this.mapper[col.name];\n    }\n    clear() {\n        this.items = [];\n        //this.mapper = {};\n    }\n}\n\nconst cssPrefix$1 = \"keg\";\nconst DFMT_REGEX = /{0:(.*?)}/g;\nvar CellRendererType;\n(function (CellRendererType) {\n    CellRendererType[CellRendererType[\"STRING\"] = 1] = \"STRING\";\n    CellRendererType[CellRendererType[\"NUMBER\"] = 2] = \"NUMBER\";\n    CellRendererType[CellRendererType[\"DATETIME\"] = 3] = \"DATETIME\";\n    CellRendererType[CellRendererType[\"BOOL\"] = 4] = \"BOOL\";\n})(CellRendererType || (CellRendererType = {}));\nconst StringCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const text = value ? value.toString().replace(/\\n/g, '\\u21B5 ') : '';\n    cellValueElement.innerText = text;\n    cellValueElement.title = text;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-left`);\n    }\n};\nconst NumberCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    let strValue = (value || '').toString();\n    if (typeof value == 'number') {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.numberToStr(value, $1);\n            });\n        }\n        else {\n            strValue = value.toLocaleString();\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst DateTimeCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    const isDate = Object.prototype.toString.call(value) === '[object Date]';\n    let strValue = (value || '').toString();\n    if (isDate) {\n        if (column.dataColumn && column.dataColumn.displayFormat\n            && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n            strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                return i18n.dateTimeToStrEx(value, column.type, $1);\n            });\n        }\n        else {\n            const locale = i18n.getCurrentLocale();\n            const timeOptions = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n            switch (column.type) {\n                case DataType.Date:\n                    strValue = value.toLocaleDateString(locale);\n                    break;\n                case DataType.Time:\n                    strValue = value.toLocaleTimeString(locale, timeOptions);\n                    break;\n                case DataType.DateTime:\n                    strValue = `${value.toLocaleDateString(locale)} ${value.toLocaleTimeString(locale, timeOptions)}`;\n                    break;\n            }\n        }\n    }\n    cellValueElement.innerText = strValue;\n    cellValueElement.title = strValue;\n    if (column.align == GridColumnAlign.NONE) {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-align-right`);\n    }\n};\nconst BoolCellRendererDefault = (value, column, cellValueElement, rowElement) => {\n    if (column.dataColumn && column.dataColumn.displayFormat\n        && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n        const strValue = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n            return i18n.booleanToStr(value, $1);\n        });\n        return StringCellRendererDefault(strValue, column, cellValueElement);\n    }\n    else {\n        cellValueElement.classList.add(`${cssPrefix$1}-cell-value-bool`);\n        cellValueElement.classList.add(`${cssPrefix$1}-${value ? 'cell-value-true' : 'cell-value-false'}`);\n    }\n};\nclass GridCellRendererStore {\n    constructor(options) {\n        this.renderers = {};\n        this.defaultRenderers = {};\n        this.registerRenderer('StringDefault', StringCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.STRING, StringCellRendererDefault);\n        this.registerRenderer('NumberDefault', NumberCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.NUMBER, NumberCellRendererDefault);\n        this.registerRenderer('DateTimeDefault', DateTimeCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.DATETIME, DateTimeCellRendererDefault);\n        this.registerRenderer('BoolDefault', BoolCellRendererDefault);\n        this.setDefaultRenderer(CellRendererType.BOOL, BoolCellRendererDefault);\n    }\n    getDefaultRenderer(columnType) {\n        const cellType = this.getCellType(columnType);\n        return this.defaultRenderers[CellRendererType[cellType]];\n    }\n    getDefaultRendererByType(rendererType) {\n        return this.defaultRenderers[CellRendererType[rendererType]];\n    }\n    setDefaultRenderer(cellType, renderer) {\n        if (renderer) {\n            this.defaultRenderers[CellRendererType[cellType]] = renderer;\n        }\n    }\n    getRenderer(name) {\n        return this.renderers[name];\n    }\n    registerRenderer(name, renderer) {\n        this.renderers[name] = renderer;\n    }\n    getCellType(dataType) {\n        switch (dataType) {\n            case DataType.Autoinc:\n            case DataType.Byte:\n            case DataType.Word:\n            case DataType.Currency:\n            case DataType.Float:\n            case DataType.Int32:\n            case DataType.Int64:\n                return CellRendererType.NUMBER;\n            case DataType.Date:\n            case DataType.DateTime:\n            case DataType.Time:\n                return CellRendererType.DATETIME;\n            case DataType.Bool:\n                return CellRendererType.BOOL;\n            default:\n                return CellRendererType.STRING;\n        }\n    }\n}\n\nconst DEFAULT_ROW_HEIGHT = 36;\n/** Represents a grid widget with columns rows, paging, custom rendering and more */\nclass EasyGrid {\n    /** Creates and initializes all internal properties of the grid object */\n    constructor(options) {\n        this.cssPrefix = \"keg\";\n        this.pagination = { page: 1, pageSize: 30, total: 0 };\n        this.paginationOptions = {\n            maxButtonCount: 10,\n            useBootstrap: false\n        };\n        this.defaultDataGridOptions = {\n            slot: null,\n            dataTable: null,\n            fixHeightOnFirstRender: false,\n            syncGridColumns: true,\n            useRowNumeration: true,\n            allowDragDrop: false,\n            aggregates: {\n                settings: null,\n                calculator: null\n            },\n            paging: {\n                enabled: true,\n                pageSize: 30,\n                pageSizeItems: [20, 30, 50, 100, 200]\n            },\n            columnWidths: {\n                autoResize: AutoResizeColumns.Always,\n                stringColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                numberColumns: {\n                    min: 60,\n                    default: 120\n                },\n                boolColumns: {\n                    min: 50,\n                    default: 80\n                },\n                dateColumns: {\n                    min: 80,\n                    default: 200\n                },\n                otherColumns: {\n                    min: 100,\n                    max: 500,\n                    default: 250\n                },\n                rowNumColumn: {\n                    min: 40,\n                    default: 60\n                }\n            },\n            showPlusButton: false,\n            viewportRowsCount: null,\n            showActiveRow: true\n        };\n        this.rowsOnPagePromise = null;\n        this.containerInitialHeight = 0;\n        this.firstRender = true;\n        this.prevRowTotals = null;\n        this.landingIndex = -1;\n        this.landingSlot = domel('div')\n            .addClass(`${this.cssPrefix}-col-landing-slot`)\n            .addChildElement(domel('div')\n            .toDOM())\n            .toDOM();\n        this._activeRowIndex = -1;\n        if (options && options.paging) {\n            options.paging = utils.assign(this.defaultDataGridOptions.paging, options.paging);\n        }\n        this.options = this.mergeOptions(options);\n        this.processColumnWidthsOptions();\n        if (!this.options.slot)\n            throw Error('\"slot\" parameter is required to initialize EasyDataGrid');\n        if (!this.options.dataTable)\n            throw Error('\"dataTable\" parameter is required to initialize EasyDataGrid');\n        this.dataTable = options.dataTable;\n        this.eventEmitter = new EventEmitter(this);\n        this.cellRendererStore = new GridCellRendererStore(options);\n        this.columns = new GridColumnList(this.dataTable.columns, this);\n        this.setSlot(this.options.slot);\n        this.init(this.options);\n    }\n    mergeOptions(options) {\n        const aggrOptions = utils.assignDeep({}, this.defaultDataGridOptions.aggregates, options.aggregates);\n        const colWidthOptions = utils.assignDeep({}, this.defaultDataGridOptions.columnWidths, options.columnWidths);\n        const pagingOptions = utils.assignDeep({}, this.defaultDataGridOptions.paging, options.paging);\n        const result = utils.assign({}, this.defaultDataGridOptions, options);\n        result.aggregates = aggrOptions;\n        result.columnWidths = colWidthOptions;\n        result.paging = pagingOptions;\n        return result;\n    }\n    processColumnWidthsOptions() {\n        const widthOptions = this.options.columnWidths;\n        if (!widthOptions)\n            return;\n        //string columns\n        utils.getStringDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.stringColumns), widthOptions[dataType]);\n        });\n        //numeric columns\n        utils.getNumericDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.numberColumns), widthOptions[dataType]);\n        });\n        //bool columns\n        widthOptions[DataType.Bool] = Object.assign(Object.assign({}, widthOptions.boolColumns), widthOptions[DataType.Bool]);\n        //date columns\n        utils.getDateDataTypes().forEach(dataType => {\n            widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.dateColumns), widthOptions[dataType]);\n        });\n        //other columns\n        const knownTypes = [\n            ...utils.getStringDataTypes(),\n            ...utils.getNumericDataTypes(),\n            ...utils.getDateDataTypes(),\n            DataType.Bool\n        ];\n        utils.getAllDataTypes().forEach(dataType => {\n            if (!(dataType in knownTypes)) {\n                widthOptions[dataType] = Object.assign(Object.assign({}, widthOptions.otherColumns), widthOptions[dataType]);\n            }\n        });\n        widthOptions[DataType.Unknown] = widthOptions.otherColumns;\n    }\n    setSlot(slot) {\n        if (typeof slot === 'string') {\n            if (slot.length) {\n                if (slot[0] === '#') {\n                    this.slot = document.getElementById(slot.substring(1));\n                }\n                else if (slot[0] === '.') {\n                    const result = document.getElementsByClassName(slot.substring(1));\n                    if (result.length)\n                        this.slot = result[0];\n                }\n                else {\n                    throw Error('Unrecognized slot parameter ' +\n                        '(Must be id, class or HTMLElement): ' + slot);\n                }\n            }\n        }\n        else {\n            this.slot = slot;\n        }\n    }\n    /** Initializes grid widget according to the options passed in the parameter */\n    init(options) {\n        if (options.onInit) {\n            this.addEventListener('init', options.onInit);\n        }\n        if (options.onRowClick) {\n            this.addEventListener('rowClick', options.onRowClick);\n        }\n        if (options.onRowDbClick) {\n            this.addEventListener('rowDbClick', options.onRowDbClick);\n        }\n        if (options.onPlusButtonClick) {\n            this.addEventListener('plusButtonClick', options.onPlusButtonClick);\n        }\n        if (options.onColumnChanged) {\n            this.addEventListener('columnChanged', options.onColumnChanged);\n        }\n        if (options.onColumnDeleted) {\n            this.addEventListener('columnDeleted', options.onColumnDeleted);\n        }\n        if (options.onColumnMoved) {\n            this.addEventListener('columnMoved', options.onColumnMoved);\n        }\n        if (options.onPageChanged) {\n            this.addEventListener('pageChanged', options.onPageChanged);\n        }\n        if (options.onActiveRowChanged) {\n            this.addEventListener('activeRowChanged', options.onActiveRowChanged);\n        }\n        this.addEventListener('pageChanged', ev => this.activeRowIndex = -1);\n        utils.assign(this.paginationOptions, options.pagination);\n        this.pagination.pageSize = this.options.paging.pageSize\n            || this.pagination.pageSize;\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDropContainer({\n                element: this.slot,\n                scopes: [\"gridColumnMove\"],\n                onDragEnter: (_, ev) => {\n                    this.slot.classList.add(`${eqCssPrefix}-drophover`);\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragOver: (_, ev) => {\n                    this.showLandingSlot(ev.pageX, ev.pageY);\n                },\n                onDragLeave: (_, ev) => {\n                    ev.dropEffect = DropEffect.Forbid;\n                    this.slot.classList.remove(`${eqCssPrefix}-drophover`);\n                    this.hideLandingSlot();\n                },\n                onDrop: (_, ev) => {\n                    this.dataTable.columns.move(ev.data.column, this.landingIndex);\n                    this.refresh();\n                    this.fireEvent({\n                        type: 'columnMoved',\n                        columnId: ev.data.column.id,\n                        newIndex: this.landingIndex\n                    });\n                }\n            });\n        }\n        this.refresh();\n        this.fireEvent('init');\n    }\n    /** Fires a grid event. You can pass either an event type\n     * (like 'init', 'rowClick', 'pageChanged', etc )\n     * or a ready-to-use grid event object\n     * */\n    fireEvent(event) {\n        if (typeof event === \"string\") {\n            this.eventEmitter.fire(event);\n        }\n        else {\n            this.eventEmitter.fire(event.type, event);\n        }\n    }\n    /** Allows to set the data (represented by a EasyDataTable object)\n     *  or to replace the existing one associated with the grid */\n    setData(data) {\n        this.dataTable = data;\n        this.clear();\n        this.refresh();\n    }\n    /** Returns the EasyDataTable object associated with the grid via `setData()` call */\n    getData() {\n        return this.dataTable;\n    }\n    /** Gets the list of grid columns */\n    getColumns() {\n        return this.columns;\n    }\n    /** This function is called when the grid is destroyed */\n    destroy() {\n        this.slot.innerHTML = \"\";\n    }\n    /** Clears the current DOM object and re-renders everything from the scratch */\n    refresh() {\n        this.clearDOM();\n        this.render();\n    }\n    clearDOM() {\n        this.slot.innerHTML = '';\n    }\n    /** Clears all DOM object in the grid and return it to its initial state */\n    clear() {\n        this.pagination.page = 1;\n        this.clearDOM();\n    }\n    /** Renders the grid */\n    render() {\n        if (!this.hasData() && !this.options.showPlusButton)\n            return;\n        this.containerInitialHeight = this.slot.clientHeight;\n        this.rootDiv = document.createElement('div');\n        this.rootDiv.style.width = '100%';\n        this.rootDiv.classList.add(`${this.cssPrefix}-root`);\n        this.columns.sync(this.dataTable.columns, this.options.useRowNumeration);\n        this.renderHeader();\n        this.rootDiv.appendChild(this.headerDiv);\n        this.renderBody();\n        this.rootDiv.appendChild(this.bodyDiv);\n        this.renderFooter();\n        this.rootDiv.appendChild(this.footerDiv);\n        let gridContainer = document.createElement('div');\n        gridContainer.classList.add(`${this.cssPrefix}-container`);\n        gridContainer.appendChild(this.rootDiv);\n        this.slot.appendChild(gridContainer);\n        const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise\n                .then(() => this.updateHeight())\n                .then(() => {\n                this.firstRender = false;\n                this.rowsOnPagePromise = null;\n            });\n        }\n        else {\n            setTimeout(() => {\n                this.updateHeight()\n                    .then(() => {\n                    this.firstRender = false;\n                    if (needAutoResize) {\n                        this.resizeColumns();\n                    }\n                });\n            }, 100);\n        }\n    }\n    updateHeight() {\n        return new Promise((resolve) => {\n            if (this.options.viewportRowsCount) {\n                const firstRow = this.bodyCellContainerDiv.firstElementChild;\n                const rowHeight = firstRow ? firstRow.offsetHeight : DEFAULT_ROW_HEIGHT;\n                const rowCount = this.options.viewportRowsCount; // || DEFAULT_ROW_COUNT;\n                let viewportHeight = rowHeight * rowCount;\n                domel(this.bodyViewportDiv)\n                    .setStyle('height', `${viewportHeight}px`);\n                setTimeout(() => {\n                    const sbHeight = this.bodyViewportDiv.offsetHeight - this.bodyViewportDiv.clientHeight;\n                    viewportHeight = viewportHeight + sbHeight;\n                    domel(this.bodyViewportDiv)\n                        .setStyle('height', `${viewportHeight}px`);\n                    resolve();\n                }, 100);\n                return;\n            }\n            else if (this.containerInitialHeight > 0) ;\n            resolve();\n        })\n            .then(() => {\n            if (this.options.fixHeightOnFirstRender && this.firstRender) {\n                this.slot.style.height = `${this.slot.offsetHeight}px`;\n            }\n        });\n    }\n    getContainerWidth() {\n        return this.columns.getItems()\n            .filter(col => col.isVisible)\n            .map(col => col.width)\n            .reduce((sum, current) => { return sum + current; });\n    }\n    renderHeader() {\n        this.headerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-header`)\n            .toDOM();\n        this.headerViewportDiv = domel('div', this.headerDiv)\n            .addClass(`${this.cssPrefix}-header-viewport`)\n            .toDOM();\n        this.headerCellContainerDiv = domel('div', this.headerViewportDiv)\n            .addClass(`${this.cssPrefix}-header-cell-container`)\n            .toDOM();\n        this.headerRowDiv = domel('div', this.headerCellContainerDiv)\n            .addClass(`${this.cssPrefix}-header-row`)\n            .toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let hd = this.renderColumnHeader(column, index);\n            this.headerRowDiv.appendChild(hd);\n            if (column.isRowNum) {\n                domel(hd)\n                    .addChildElement(this.renderHeaderButtons());\n            }\n        });\n        const containerWidth = this.getContainerWidth();\n        domel(this.headerCellContainerDiv)\n            .setStyle('width', `${containerWidth}px`);\n    }\n    hasData() {\n        return this.dataTable.columns.count > 0;\n    }\n    renderColumnHeader(column, index) {\n        let colBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-header-cell`)\n            .data('col-idx', `${index}`)\n            .setStyle('width', `${column.width}px`);\n        if (column.dataColumn) {\n            colBuilder\n                .data('col-id', `${column.dataColumn.id}`);\n        }\n        let colDiv = colBuilder.toDOM();\n        domel('div', colDiv)\n            .addClass(`${this.cssPrefix}-header-cell-resize`);\n        if (!column.isRowNum) {\n            domel('div', colDiv)\n                .addClass(`${this.cssPrefix}-header-cell-label`)\n                .text(column.label);\n        }\n        if (column.description) {\n            domel('div', colDiv)\n                .addClass('question-mark')\n                .title(column.description);\n        }\n        if (this.options.allowDragDrop) {\n            eqDragManager.registerDraggableItem({\n                element: colDiv,\n                scope: \"gridColumnMove\",\n                data: { column: column },\n                renderer: (dragImage) => {\n                    dragImage.innerHTML = '';\n                    const attrLabel = document.createElement('div');\n                    attrLabel.innerText = column.label;\n                    dragImage.classList.add(`${this.cssPrefix}-sortable-helper`);\n                    dragImage.appendChild(attrLabel);\n                },\n                onDragStart: (ev) => {\n                    ev.dropEffect = DropEffect.Allow;\n                }\n            });\n        }\n        return colDiv;\n    }\n    renderBody() {\n        this.bodyDiv = domel('div')\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n        this.bodyViewportDiv = domel('div', this.bodyDiv)\n            .addClass(`${this.cssPrefix}-body-viewport`)\n            .attr('tabIndex', '0')\n            .toDOM();\n        this.bodyCellContainerDiv = domel('div', this.bodyViewportDiv)\n            .addClass(`${this.cssPrefix}-cell-container`)\n            .toDOM();\n        const showAggrs = this.canShowAggregates();\n        if (this.dataTable) {\n            this.showProgress();\n            this.rowsOnPagePromise = this.getRowsToRender()\n                .then((rows) => {\n                this.pagination.total = this.dataTable.getTotal();\n                this.hideProgress();\n                //prevent double rendering (bad solution, we have to figure out how to avoid this behavior properly)\n                this.bodyCellContainerDiv.innerHTML = '';\n                this.prevRowTotals = null;\n                let rowsToRender = 0;\n                if (rows.length) {\n                    const groups = showAggrs\n                        ? this.options.aggregates.settings.getGroups()\n                        : [];\n                    rowsToRender = (rows.length < this.pagination.pageSize)\n                        ? rows.length\n                        : this.pagination.pageSize;\n                    rows.forEach((row, index) => {\n                        if (showAggrs)\n                            this.updateTotalsState(groups, row);\n                        //we don't actually render the last row\n                        if (index < rowsToRender) {\n                            const tr = this.renderRow(row, index);\n                            this.bodyCellContainerDiv.appendChild(tr);\n                        }\n                    });\n                    const showGrandTotalsOnEachPage = this.options.aggregates && this.options.aggregates.showGrandTotalsOnEachPage;\n                    if (showAggrs && (this.isLastPage() || showGrandTotalsOnEachPage)) {\n                        const row = new DataRow(this.dataTable.columns, new Array(this.dataTable.columns.count));\n                        this.updateTotalsState(groups, row, true);\n                    }\n                }\n                const needAutoResize = this.options.columnWidths.autoResize !== AutoResizeColumns.Never;\n                if (needAutoResize) {\n                    this.resizeColumns();\n                }\n                else {\n                    const containerWidth = this.getContainerWidth();\n                    domel(this.bodyCellContainerDiv)\n                        .setStyle('width', `${containerWidth}px`);\n                }\n                return rowsToRender;\n            })\n                .catch(error => { console.error(error); return 0; });\n        }\n        this.bodyViewportDiv.addEventListener('scroll', ev => {\n            domel(this.headerViewportDiv)\n                .setStyle('margin-left', `-${this.bodyViewportDiv.scrollLeft}px`);\n        });\n        this.bodyViewportDiv.addEventListener('keydown', this.onViewportKeydown.bind(this));\n    }\n    isLastPage() {\n        if (this.dataTable.elasticChunks) {\n            return this.dataTable.totalIsKnown()\n                && (this.pagination.page * this.pagination.pageSize) >= this.pagination.total;\n        }\n        return this.pagination.page * this.pagination.pageSize >= this.pagination.total;\n    }\n    canShowAggregates() {\n        if (!this.options || !this.options.aggregates || !this.options.aggregates.settings)\n            return false;\n        const aggrSettings = this.options.aggregates.settings;\n        const result = (aggrSettings.hasAggregates() || aggrSettings.hasRecordCount())\n            && (aggrSettings.hasGroups() || aggrSettings.hasGrandTotals());\n        return result;\n    }\n    updateTotalsState(groups, newRow, isLast = false) {\n        const aggrSettings = this.options.aggregates.settings;\n        if (this.prevRowTotals && aggrSettings.hasGroups()) {\n            let changeLevel = -1;\n            for (let level = 1; level <= groups.length; level++) {\n                const group = groups[level - 1];\n                for (const col of group.columns) {\n                    if (!aggrSettings.compareValues(this.prevRowTotals.getValue(col), newRow.getValue(col))) {\n                        changeLevel = level;\n                        break;\n                    }\n                }\n                if (changeLevel !== -1)\n                    break;\n            }\n            if (changeLevel !== -1) {\n                for (let level = groups.length; level >= changeLevel; level--) {\n                    const row = new DataRow(this.dataTable.columns, this.prevRowTotals.toArray());\n                    const tr = this.renderTotalsRow(level, row);\n                    this.bodyCellContainerDiv.appendChild(tr);\n                }\n            }\n        }\n        if (isLast && aggrSettings.hasGrandTotals() && aggrSettings.hasAggregates()) {\n            const tr = this.renderTotalsRow(0, newRow);\n            this.bodyCellContainerDiv.appendChild(tr);\n        }\n        this.prevRowTotals = newRow;\n    }\n    applyGroupColumnTemplate(template, value, count) {\n        let result = template.replace(/{{\\s*GroupValue\\s*}}/g, value ? `${value}` : '-');\n        result = result.replace(/{{\\s*GroupCount\\s*}}/g, count ? `${count}` : '-');\n        return result;\n    }\n    renderTotalsRow(level, row) {\n        const aggrSettings = this.options.aggregates.settings;\n        const group = (level > 0)\n            ? aggrSettings.getGroups()[level - 1]\n            : { columns: [], aggregates: aggrSettings.getAggregates() };\n        const rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-totals`)\n            .addClass(`${this.cssPrefix}-totals-lv${level}`)\n            .data('totals-level', `${level}`)\n            .attr('tabindex', '-1');\n        const rowElement = rowBuilder.toDOM();\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            let val = '';\n            const colIndex = !column.isRowNum\n                ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                : -1;\n            if (!column.isRowNum && column.dataColumn) {\n                if (group.columns.indexOf(column.dataColumn.id) >= 0) {\n                    val = row.getValue(colIndex);\n                }\n            }\n            if (colIndex == this.dataTable.columns.count - 1) {\n                val = '.  .  .  .  .  .';\n            }\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        const aggrContainer = this.options.aggregates.calculator.getAggrContainer();\n        const aggrCols = aggrSettings.getAggregates().map(c => c.colId);\n        const key = aggrSettings.buildGroupKey(group, row);\n        aggrContainer.getAggregateData(level, key)\n            .then((values) => {\n            for (const aggrColId of aggrCols) {\n                row.setValue(aggrColId, values[aggrColId]);\n            }\n            rowElement.innerHTML = '';\n            this.columns.getItems().forEach((column, index) => {\n                if (!column.isVisible) {\n                    return;\n                }\n                let val = '';\n                const colIndex = !column.isRowNum\n                    ? this.dataTable.columns.getIndex(column.dataColumn.id)\n                    : -1;\n                if (!column.isRowNum) {\n                    let isLastGroupColumn = false;\n                    if (column.dataColumn) {\n                        const groupColIndex = group.columns.indexOf(column.dataColumn.id);\n                        const aggrColIndex = aggrCols.indexOf(column.dataColumn.id);\n                        if (level > 0) {\n                            isLastGroupColumn = groupColIndex == group.columns.length - 1;\n                        }\n                        else {\n                            //if it's a grand total row consider first column as the last group column\n                            isLastGroupColumn = colIndex == 0;\n                        }\n                        if (groupColIndex >= 0 || aggrColIndex >= 0) {\n                            val = row.getValue(colIndex);\n                        }\n                    }\n                    let groupFooterTemplate = '';\n                    if (level > 0) {\n                        groupFooterTemplate = column.dataColumn.groupFooterColumnTemplate;\n                        //set the default template for the last grouping column\n                        if (!groupFooterTemplate && aggrSettings.hasRecordCount() && isLastGroupColumn) {\n                            groupFooterTemplate = '{{GroupValue}} ({{GroupCount}})';\n                        }\n                    }\n                    if (groupFooterTemplate) {\n                        const cellDiv = this.renderCell(column, index, val, rowElement);\n                        const innerCell = cellDiv.firstChild;\n                        val = innerCell.innerHTML;\n                        val = this.applyGroupColumnTemplate(groupFooterTemplate, val, values[aggrSettings.COUNT_FIELD_NAME]);\n                    }\n                }\n                const cellDiv = this.renderCell(column, index, val, rowElement);\n                rowElement.appendChild(cellDiv);\n            });\n        })\n            .catch((error) => console.error(error));\n        return rowElement;\n    }\n    onViewportKeydown(ev) {\n        if (this.options.showActiveRow) {\n            const rowCount = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row`).length;\n            let newValue;\n            switch (ev.key) {\n                case 'ArrowLeft':\n                    break;\n                case 'ArrowRight':\n                    break;\n                case 'ArrowUp':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? rowCount - 1 : this.activeRowIndex - 1;\n                    this.activeRowIndex = newValue >= 0 ? newValue : 0;\n                    break;\n                case 'ArrowDown':\n                    ev.preventDefault();\n                    newValue = this.activeRowIndex < 0 || this.activeRowIndex >= rowCount ? 0 : this.activeRowIndex + 1;\n                    this.activeRowIndex = newValue < rowCount ? newValue : rowCount - 1;\n                    break;\n            }\n        }\n    }\n    ensureRowVisibility(rowOrIndex) {\n        const row = typeof rowOrIndex === 'number'\n            ? this.getDataRow(rowOrIndex)\n            : rowOrIndex;\n        if (row) {\n            let rowRect = row.getBoundingClientRect();\n            const viewportRect = this.bodyViewportDiv.getBoundingClientRect();\n            const rowTop = rowRect.top - viewportRect.top;\n            const rowBottom = rowRect.bottom - viewportRect.top;\n            const viewportHeight = this.bodyViewportDiv.clientHeight;\n            const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n            if (rowTop > 0 &&\n                rowBottom <= viewportHeight &&\n                rowRect.top > 0 &&\n                rowRect.bottom < windowHeight) {\n                return;\n            }\n            if (rowTop < 0) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowTop;\n            }\n            else if (rowBottom > viewportHeight) {\n                this.bodyViewportDiv.scrollTop = this.bodyViewportDiv.scrollTop + rowBottom - viewportHeight;\n            }\n            rowRect = row.getBoundingClientRect();\n            if (rowRect.top < 0) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.top;\n            }\n            else if (rowRect.bottom > windowHeight) {\n                document.documentElement.scrollTop = document.documentElement.scrollTop + rowRect.bottom - windowHeight;\n            }\n        }\n    }\n    /** Returns a promise with the list of the rows to render on one page.\n     * The list contains pageSize+1 row to make it possible\n     * to render the totals row (if it appears to be on the edge between pages)\n     */\n    getRowsToRender() {\n        if (this.options.paging.enabled === false) {\n            return Promise.resolve(this.dataTable.getCachedRows());\n        }\n        return this.dataTable.getRows({\n            offset: (this.pagination.page - 1) * this.pagination.pageSize,\n            limit: this.pagination.pageSize + 1\n        })\n            .catch(error => {\n            console.error(error);\n            return [];\n        });\n    }\n    renderFooter() {\n        this.footerDiv = domel('div')\n            .addClass(`${this.cssPrefix}-footer`)\n            .toDOM();\n        if (this.rowsOnPagePromise) {\n            this.rowsOnPagePromise.then(count => {\n                this.footerDiv.innerHTML = '';\n                this.footerPaginateDiv = this.renderPageNavigator();\n                this.footerDiv.appendChild(this.footerPaginateDiv);\n                const pageInfoBlock = this.renderPageInfoBlock(count);\n                this.footerDiv.appendChild(pageInfoBlock);\n            });\n        }\n    }\n    renderPageInfoBlock(count) {\n        const pageInfoDiv = domel('div')\n            .addClass(`${this.cssPrefix}-page-info`)\n            .toDOM();\n        const rowCount = this.dataTable.getTotal();\n        if (rowCount > 0) {\n            const fistPageRecordNum = count\n                ? (this.pagination.page - 1) * this.pagination.pageSize + 1\n                : 0;\n            const lastPageRecordNum = count\n                ? fistPageRecordNum + count - 1\n                : 0;\n            let totalStr = this.dataTable.getTotal().toString();\n            if (this.dataTable.elasticChunks) {\n                const count = this.dataTable.getCachedCount();\n                const total = this.dataTable.getTotal();\n                if (count !== total)\n                    totalStr = '?';\n            }\n            pageInfoDiv.innerHTML = i18n.getText('GridPageInfo')\n                .replace('{FirstPageRecordNum}', `<span>${fistPageRecordNum.toString()}</span>`)\n                .replace('{LastPageRecordNum}', `<span>${lastPageRecordNum.toString()}</span>`)\n                .replace('{Total}', `<span>${totalStr}</span>`);\n        }\n        return pageInfoDiv;\n    }\n    showProgress() {\n    }\n    hideProgress() {\n    }\n    getLocalIndexByGlobal(index) {\n        if (this.pagination) {\n            return index % this.pagination.pageSize;\n        }\n        else {\n            return index;\n        }\n    }\n    getGlobalIndexByLocal(index) {\n        if (this.pagination) {\n            return (this.pagination.page - 1) * this.pagination.pageSize + index;\n        }\n        else {\n            return index;\n        }\n    }\n    renderRow(row, index) {\n        let indexGlobal = this.getGlobalIndexByLocal(index);\n        let rowBuilder = domel('div')\n            .addClass(`${this.cssPrefix}-row`)\n            .addClass(`${this.cssPrefix}-row-${index % 2 == 1 ? 'odd' : 'even'}`)\n            .data('row-idx', `${indexGlobal}`)\n            .attr('tabindex', '-1')\n            .on('click', (ev) => {\n            this.activeRowIndex = index;\n            this.fireEvent({\n                type: 'rowClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        })\n            .on('dblclick', (ev) => {\n            this.fireEvent({\n                type: 'rowDbClick',\n                row: row,\n                rowIndex: index,\n                sourceEvent: ev\n            });\n        });\n        if (index == 0) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-first`);\n        }\n        let rowElement = rowBuilder.toDOM();\n        if (this.options.showActiveRow && index == this.activeRowIndex) {\n            rowBuilder.addClass(`${this.cssPrefix}-row-active`);\n        }\n        this.columns.getItems().forEach((column, index) => {\n            if (!column.isVisible) {\n                return;\n            }\n            const colindex = column.isRowNum ? -1 : this.dataTable.columns.getIndex(column.dataColumn.id);\n            let val = column.isRowNum ? indexGlobal + 1 : row.getValue(colindex);\n            rowElement.appendChild(this.renderCell(column, index, val, rowElement));\n        });\n        return rowElement;\n    }\n    renderCell(column, colIndex, value, rowElement) {\n        const builder = domel('div')\n            .addClass(`${this.cssPrefix}-cell`)\n            .data('col-idx', `${colIndex}`)\n            .attr('tabindex', '-1')\n            .setStyle('width', `${column.width}px`);\n        if (column.align == GridColumnAlign.LEFT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-left`);\n        }\n        else if (column.align == GridColumnAlign.RIGHT) {\n            builder.addClass(`${this.cssPrefix}-cell-align-right`);\n        }\n        else if (column.align == GridColumnAlign.CENTER) {\n            builder.addClass(`${this.cssPrefix}-cell-align-center`);\n        }\n        const cellElement = builder.toDOM();\n        const valueCell = cellElement.appendChild(domel('div')\n            .addClass(`${this.cssPrefix}-cell-value`)\n            .toDOM());\n        const cellRenderer = this.getCellRenderer(column);\n        if (cellRenderer) {\n            cellRenderer(value, column, valueCell, rowElement);\n        }\n        return cellElement;\n    }\n    getCellRenderer(column) {\n        let cellRenderer;\n        if (column.isRowNum) {\n            cellRenderer = this.cellRendererStore.getDefaultRendererByType(CellRendererType.NUMBER);\n        }\n        else {\n            cellRenderer = this.cellRendererStore.getDefaultRenderer(column.type);\n        }\n        if (this.options && this.options.onGetCellRenderer) {\n            cellRenderer = this.options.onGetCellRenderer(column, cellRenderer) || cellRenderer;\n        }\n        return cellRenderer;\n    }\n    /** Sets current grid pages (if paging is used) */\n    setPage(page) {\n        this.pagination.page = page;\n        this.fireEvent({ type: \"pageChanged\", page: page });\n        this.refresh();\n        this.bodyViewportDiv.focus();\n    }\n    renderPageNavigator() {\n        let paginateDiv = document.createElement('div');\n        paginateDiv.className = `${this.cssPrefix}-pagination-wrapper`;\n        const rowCount = this.dataTable.getTotal();\n        const totalRows = this.dataTable.getTotal();\n        const pageSize = this.pagination.pageSize;\n        const totalPages = Math.ceil(totalRows / pageSize);\n        const distance = 10, islandSize = 3;\n        const prefix = this.paginationOptions.useBootstrap ? '' : `${this.cssPrefix}-`;\n        if (!this.options.paging || !this.options.paging.enabled || rowCount <= pageSize) {\n            return paginateDiv;\n        }\n        const buttonClickHandler = (ev) => {\n            const element = ev.target;\n            if (element.hasAttribute('data-page')) {\n                const page = parseInt(element.getAttribute('data-page'));\n                this.setPage(page);\n            }\n        };\n        const renderPaginationItem = (pageIndex, content, disabled, extreme, active) => {\n            const li = document.createElement('li');\n            li.className = `${prefix}page-item`;\n            if (!extreme) {\n                if (active) {\n                    li.className += ' active';\n                }\n                const a = document.createElement('a');\n                a.setAttribute('href', 'javascript:void(0)');\n                a.innerHTML = content || pageIndex.toString();\n                a.setAttribute(\"data-page\", `${pageIndex}`);\n                a.className = `${prefix}page-link`;\n                a.addEventListener(\"click\", buttonClickHandler);\n                li.appendChild(a);\n                return li;\n            }\n            let a = document.createElement('span');\n            a.setAttribute('aria-hidden', 'true');\n            a.className = `${prefix}page-link`;\n            if (disabled) {\n                li.className += ' disabled';\n            }\n            else {\n                if (this.paginationOptions.useBootstrap) {\n                    a = document.createElement('a');\n                    a.setAttribute('href', 'javascript:void(0)');\n                    a.setAttribute(\"data-page\", `${pageIndex}`);\n                }\n                else {\n                    let newA = document.createElement('a');\n                    newA.setAttribute('href', 'javascript:void(0)');\n                    newA.setAttribute('data-page', `${pageIndex}`);\n                    a = newA;\n                }\n                a.className = `${prefix}page-link`;\n                a.addEventListener(\"click\", buttonClickHandler);\n            }\n            a.innerHTML = content;\n            li.appendChild(a);\n            return li;\n        };\n        const pageIndex = this.pagination.page || 1;\n        let ul = document.createElement('ul');\n        ul.className = `${prefix}pagination`;\n        ul.style.userSelect = 'none';\n        paginateDiv.appendChild(ul);\n        if (this.dataTable.elasticChunks) {\n            let cell = renderPaginationItem(pageIndex - 1, '&laquo;', pageIndex == 1, true, false);\n            ul.appendChild(cell);\n            cell = renderPaginationItem(pageIndex + 1, '&raquo;', this.isLastPage(), true, false);\n            ul.appendChild(cell);\n        }\n        else {\n            const prev = renderPaginationItem(pageIndex - 1, '&laquo;', pageIndex == 1, true, false);\n            ul.appendChild(prev);\n            ul.appendChild(renderPaginationItem(1, '1', pageIndex == 1, false, pageIndex === 1));\n            if (totalPages <= 10) {\n                for (let i = 2; i < totalPages; i++) {\n                    ul.appendChild(renderPaginationItem(i, `${i}`, pageIndex === i, false, pageIndex === i));\n                }\n            }\n            else {\n                if (pageIndex < distance) {\n                    for (let i = 2; i <= distance; i++) {\n                        ul.appendChild(renderPaginationItem(i, `${i}`, false, false, pageIndex === i));\n                    }\n                    if (totalPages > distance) {\n                        ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                    }\n                }\n                else if (pageIndex <= totalPages && pageIndex > totalPages - distance + 1) {\n                    if (totalPages > distance) {\n                        ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                    }\n                    for (let i = totalPages - distance + 1; i < totalPages; i++) {\n                        ul.appendChild(renderPaginationItem(i, `${i}`, pageIndex === i, false, pageIndex === i));\n                    }\n                }\n                else {\n                    ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                    // Island Left Side\n                    for (let i = islandSize; i > 0; i--) {\n                        ul.appendChild(renderPaginationItem(pageIndex - i, `${pageIndex - i}`, false, false, false));\n                    }\n                    // Center of Island\n                    ul.appendChild(renderPaginationItem(pageIndex, `${pageIndex}`, false, false, true));\n                    // Island Right Size\n                    for (let i = 1; i <= islandSize; i++) {\n                        ul.appendChild(renderPaginationItem(pageIndex + i, `${pageIndex + i}`, false, false, false));\n                    }\n                    ul.appendChild(renderPaginationItem(-1, `...`, true, true, false));\n                }\n            }\n            if (totalPages > 1 || pageIndex < totalPages) {\n                ul.appendChild(renderPaginationItem(totalPages, `${totalPages}`, pageIndex === totalPages, false, pageIndex === totalPages));\n            }\n            const next = renderPaginationItem(pageIndex + 1, '&raquo;', pageIndex == totalPages, true, false);\n            ul.appendChild(next);\n            if (pageIndex === 1) {\n                prev.classList.add(\"disabled\");\n            }\n            if (pageIndex === totalPages) {\n                next.classList.add(\"disabled\");\n            }\n        }\n        if (this.options.paging.allowPageSizeChange) {\n            const selectChangeHandler = (ev) => {\n                const newValue = parseInt(ev.target.value);\n                this.pagination.pageSize = newValue;\n                this.pagination.page = 1;\n                this.refresh();\n            };\n            const pageSizes = document.createElement('div');\n            pageSizes.className = `${this.cssPrefix}-page-sizes`;\n            const selectSize = document.createElement('div');\n            selectSize.className = `kfrm-select ${this.cssPrefix}-page-sizes-select`;\n            pageSizes.appendChild(selectSize);\n            const sel = document.createElement('select');\n            const selOptions = this.options.paging.pageSizeItems || [];\n            const selSet = new Set(selOptions);\n            selSet.add(this.options.paging.pageSize || 20);\n            Array.from(selSet).forEach(el => {\n                const option = document.createElement(\"option\");\n                option.value = el.toString();\n                option.text = el.toString();\n                sel.appendChild(option);\n            });\n            sel.value = (this.pagination.pageSize || 20).toString();\n            selectSize.appendChild(sel);\n            sel.addEventListener('change', selectChangeHandler);\n            const labelDiv = document.createElement('div');\n            labelDiv.className = `${this.cssPrefix}-page-sizes-label`;\n            pageSizes.appendChild(labelDiv);\n            const label = document.createElement('span');\n            label.innerText = i18n.getText('GridItemsPerPage');\n            labelDiv.appendChild(label);\n            paginateDiv.appendChild(pageSizes);\n        }\n        return paginateDiv;\n    }\n    addEventListener(eventType, handler) {\n        return this.eventEmitter.subscribe(eventType, event => handler(event.data));\n    }\n    removeEventListener(eventType, handlerId) {\n        this.eventEmitter.unsubscribe(eventType, handlerId);\n    }\n    renderHeaderButtons() {\n        if (this.options.showPlusButton) {\n            return domel('div')\n                .addClass(`${this.cssPrefix}-header-btn-plus`)\n                .title(this.options.plusButtonTitle || 'Add')\n                .addChild('a', builder => builder\n                .attr('href', 'javascript:void(0)')\n                .on('click', (e) => {\n                e.preventDefault();\n                this.fireEvent({\n                    type: 'plusButtonClick',\n                    sourceEvent: e\n                });\n            }))\n                .toDOM();\n        }\n        return domel('span')\n            .addText('#')\n            .toDOM();\n    }\n    showLandingSlot(pageX, pageY) {\n        const colElems = this.headerRowDiv.querySelectorAll(`[class*=${this.cssPrefix}-table-col]`);\n        const cols = [];\n        for (let i = 1; i < colElems.length; i++) {\n            const rowElem = colElems[i];\n            if (rowElem.style.display === 'none')\n                continue;\n            cols.push(rowElem);\n        }\n        if (cols.length === 0) {\n            this.landingIndex = 0;\n            this.headerRowDiv.appendChild(this.landingSlot);\n            return;\n        }\n        const landingPos = getElementAbsolutePos(this.landingSlot);\n        if (pageX >= landingPos.x && pageX <= landingPos.x + this.landingSlot.offsetWidth) {\n            return;\n        }\n        let newLandingIndex = this.landingIndex;\n        for (let col of cols) {\n            const colPos = getElementAbsolutePos(col);\n            const width = col.offsetWidth;\n            if (pageX > colPos.x && pageX < colPos.x + width) {\n                // -1 as we don't need to count add button here\n                newLandingIndex = parseInt(col.getAttribute('data-col-idx')) - 1;\n            }\n        }\n        if (newLandingIndex != this.landingIndex) {\n            this.landingIndex = newLandingIndex;\n            if (this.landingIndex < cols.length) {\n                this.headerRowDiv.insertBefore(this.landingSlot, cols[this.landingIndex]);\n            }\n            else {\n                this.headerRowDiv.appendChild(this.landingSlot);\n            }\n        }\n    }\n    hideLandingSlot() {\n        this.landingIndex = -1;\n        setTimeout(() => {\n            if (this.landingSlot.parentElement) {\n                this.landingSlot.parentElement.removeChild(this.landingSlot);\n            }\n        }, 10);\n    }\n    get activeRowIndex() {\n        return this._activeRowIndex;\n    }\n    set activeRowIndex(value) {\n        if (value !== this._activeRowIndex) {\n            const oldValue = this._activeRowIndex;\n            this._activeRowIndex = value;\n            this.updateActiveRow();\n            this.fireEvent({\n                type: 'activeRowChanged',\n                oldValue,\n                newValue: this.activeRowIndex,\n                rowIndex: this.getGlobalIndexByLocal(this.activeRowIndex)\n            });\n        }\n    }\n    updateActiveRow() {\n        if (this.options.showActiveRow) {\n            const rows = this.bodyCellContainerDiv.querySelectorAll(`[class*=${this.cssPrefix}-row-active]`);\n            rows.forEach(el => { el.classList.remove(`${this.cssPrefix}-row-active`); });\n            const activeRow = this.getActiveRow();\n            if (activeRow) {\n                activeRow.classList.add(`${this.cssPrefix}-row-active`);\n                this.ensureRowVisibility(this.activeRowIndex);\n            }\n        }\n    }\n    getActiveRow() {\n        return this.getDataRow(this.activeRowIndex);\n    }\n    getDataRow(index) {\n        const rows = Array.from(this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-row:not(.${this.cssPrefix}-row-totals)`));\n        if (index >= 0 && index < rows.length)\n            return rows[index];\n        return null;\n    }\n    /** Makes the grid focused for keyboard events */\n    focus() {\n        this.bodyViewportDiv.focus();\n    }\n    /** Resizes columns according to the data they represent */\n    resizeColumns() {\n        if (this.options.columnWidths.autoResize === AutoResizeColumns.Never)\n            return;\n        const containerWidth = this.bodyCellContainerDiv.style.width;\n        this.bodyCellContainerDiv.style.visibility = 'hidden';\n        this.bodyCellContainerDiv.style.width = '1px';\n        //this.headerRowDiv.style.visibility = 'hidden';\n        this.headerRowDiv.style.width = '1px';\n        let sumWidth = 0;\n        const columns = this.columns.getItems();\n        const headerCells = this.headerCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-header-cell`);\n        let headerIdx = 0;\n        for (let idx = 0; idx < this.columns.count; idx++) {\n            const column = columns[idx];\n            if (!column.isVisible)\n                continue;\n            const calculatedWidth = this.options.columnWidths.autoResize !== AutoResizeColumns.Always && column.dataColumn\n                ? column.dataColumn.calculatedWidth\n                : 0;\n            const cellValues = this.bodyCellContainerDiv.querySelectorAll(`.${this.cssPrefix}-cell[data-col-idx=\"${idx}\"] > .${this.cssPrefix}-cell-value`);\n            let maxWidth = 0;\n            if (calculatedWidth > 0) {\n                sumWidth += calculatedWidth;\n                column.width = calculatedWidth;\n                cellValues.forEach(value => {\n                    value.parentElement.style.width = `${calculatedWidth}px`;\n                });\n                headerCells[headerIdx].style.width = `${calculatedWidth}px`;\n            }\n            else {\n                if (cellValues.length == 0) {\n                    headerCells[headerIdx].style.width = null;\n                    headerCells[headerIdx].style.whiteSpace = 'nowrap';\n                }\n                maxWidth = headerCells[headerIdx].offsetWidth;\n                if (cellValues.length > 0) {\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = null;\n                        const width = value.parentElement.offsetWidth;\n                        if (width > maxWidth) {\n                            maxWidth = width;\n                        }\n                    });\n                    maxWidth += 3;\n                    const maxOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.max || 500\n                        : this.options.columnWidths[column.dataColumn.type].max || 2000;\n                    const minOption = column.isRowNum\n                        ? this.options.columnWidths.rowNumColumn.min || 0\n                        : this.options.columnWidths[column.dataColumn.type].min || 20;\n                    if (maxWidth > maxOption) {\n                        maxWidth = maxOption;\n                    }\n                    if (maxWidth < minOption) {\n                        maxWidth = minOption;\n                    }\n                    if (utils.isNumericType(column.type)) {\n                        //increase the calculated width in 1.3 times for numeric columns\n                        maxWidth = Math.round(maxWidth * 1.3);\n                    }\n                    sumWidth += maxWidth;\n                    column.width = maxWidth;\n                    cellValues.forEach(value => {\n                        value.parentElement.style.width = `${maxWidth}px`;\n                    });\n                    headerCells[headerIdx].style.width = `${maxWidth}px`;\n                    if (column.dataColumn) {\n                        column.dataColumn.calculatedWidth = maxWidth;\n                    }\n                }\n                else {\n                    sumWidth += maxWidth;\n                }\n            }\n            headerIdx++;\n        }\n        if (sumWidth > 0) {\n            this.bodyCellContainerDiv.style.width = `${sumWidth}px`;\n            this.headerCellContainerDiv.style.width = `${sumWidth}px`;\n        }\n        else {\n            this.bodyCellContainerDiv.style.width = containerWidth;\n            this.headerCellContainerDiv.style.width = containerWidth;\n        }\n        this.bodyCellContainerDiv.style.visibility = null;\n        this.headerRowDiv.removeAttribute('style');\n    }\n}\n\nclass Calendar {\n    get cssPrefix() {\n        return 'kdtp-cal';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n        if (!this.options.yearRange) {\n            this.options.yearRange = 'c-10:c+10';\n        }\n    }\n    setDate(date) {\n        this.currentDate = new Date(date);\n    }\n    getDate() {\n        return new Date(this.currentDate);\n    }\n    dateChanged(apply) {\n        if (this.options.onDateChanged) {\n            this.options.onDateChanged(this.currentDate, apply);\n        }\n    }\n}\n\nclass DateTimePicker {\n    get cssPrefix() {\n        return 'kdtp';\n    }\n    constructor(options) {\n        this.calendar = null;\n        this.timePicker = null;\n        this.options = options;\n        this.render();\n    }\n    setDateTime(dateTime) {\n        this.currentDateTime = new Date(dateTime);\n        if (this.calendar) {\n            this.calendar.setDate(this.currentDateTime);\n        }\n        if (this.timePicker) {\n            this.timePicker.setTime(this.currentDateTime);\n        }\n    }\n    getDateTime() {\n        return new Date(this.currentDateTime);\n    }\n    render() {\n        if (this.options.showCalendar) {\n            this.calendar = this.createCalendar({\n                yearRange: this.options.yearRange,\n                showDateTimeInput: this.options.showDateTimeInput,\n                timePickerIsUsed: this.options.showTimePicker,\n                oneClickDateSelection: this.options.oneClickDateSelection,\n                onDateChanged: (date, apply) => {\n                    this.currentDateTime = date;\n                    if (this.timePicker) {\n                        this.timePicker.setTime(this.currentDateTime);\n                    }\n                    if (this.options.showTimePicker) {\n                        this.dateTimeChanged();\n                    }\n                    if (apply) {\n                        this.apply(this.currentDateTime);\n                    }\n                }\n            });\n            if (this.calendar)\n                this.calendar.render();\n        }\n        if (this.options.showTimePicker) {\n            this.timePicker = this.createTimePicker({\n                onTimeChanged: (time) => {\n                    this.currentDateTime.setHours(time.getHours());\n                    this.currentDateTime.setMinutes(time.getMinutes());\n                    if (this.calendar) {\n                        this.calendar.setDate(this.currentDateTime);\n                    }\n                    this.dateTimeChanged();\n                }\n            });\n            if (this.timePicker)\n                this.timePicker.render();\n        }\n        this.setDateTime(new Date());\n    }\n    createCalendar(options) {\n        return null;\n    }\n    createTimePicker(options) {\n        return null;\n    }\n    show(anchor) {\n        if (this.options.beforeShow) {\n            this.options.beforeShow();\n        }\n        const pos = getElementAbsolutePos(anchor || document.body);\n        this.slot.style.top = pos.y + anchor.clientHeight + 'px';\n        this.slot.style.left = pos.x + 'px';\n    }\n    apply(date) {\n        if (this.options.onApply) {\n            this.options.onApply(date);\n        }\n        this.destroy();\n    }\n    cancel() {\n        if (this.options.onCancel) {\n            this.options.onCancel();\n        }\n        this.destroy();\n    }\n    destroy() {\n        if (this.slot && this.slot.parentElement) {\n            this.slot.parentElement.removeChild(this.slot);\n        }\n    }\n    dateTimeChanged() {\n        if (this.options.onDateTimeChanged) {\n            this.options.onDateTimeChanged(this.currentDateTime);\n        }\n    }\n}\n\nclass DefaultCalendar extends Calendar {\n    constructor(slot, options) {\n        super(slot, options);\n        this.daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        this.months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        this.calendarBody = null;\n        this.isManualInputChanging = false;\n        for (let i = 0; i < this.daysOfWeek.length; i++) {\n            this.daysOfWeek[i] = i18n.getShortWeekDayName(i + 1);\n        }\n        for (let i = 0; i < this.months.length; i++) {\n            this.months[i] = i18n.getLongMonthName(i + 1);\n        }\n    }\n    setDate(date) {\n        super.setDate(date);\n        this.selectedMonth = this.currentDate.getMonth();\n        this.selectedYear = this.currentDate.getFullYear();\n        this.rerenderMonth();\n    }\n    render() {\n        const header = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-header`);\n        if (this.options.showDateTimeInput) {\n            header\n                .addChildElement(this.renderManualDateInput());\n        }\n        else {\n            header\n                .addChild('span', builder => this.headerTextElem = builder.toDOM());\n        }\n        domel(this.slot)\n            .addChildElement(this.renderCalendarButtons());\n        this.calendarBody = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-body`)\n            .toDOM();\n    }\n    getInputDateFormat() {\n        const settings = i18n.getLocaleSettings();\n        return (this.options.timePickerIsUsed)\n            ? `${settings.editDateFormat} ${settings.editTimeFormat}`\n            : settings.editDateFormat;\n    }\n    renderManualDateInput() {\n        const format = this.getInputDateFormat();\n        const builder = domel('input')\n            .attr('placeholder', format)\n            .addClass(`${this.cssPrefix}-header-input`);\n        builder\n            .mask(format.replace('yyyy', '9999')\n            .replace('MM', '99')\n            .replace('dd', '99')\n            .replace('HH', '99')\n            .replace('mm', '99')\n            .replace('ss', '99'))\n            .on('input', ev => {\n            builder.removeClass('error');\n            try {\n                this.isManualInputChanging = true;\n                const newDate = utils.strToDateTime(this.manualInputElem.value, format);\n                this.currentDate = newDate;\n                this.jump(this.currentDate.getFullYear(), this.currentDate.getMonth());\n                this.dateChanged(false);\n            }\n            catch (e) {\n                builder.addClass('error');\n            }\n            finally {\n                this.isManualInputChanging = false;\n            }\n        })\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.manualInputElem.className.indexOf('error') < 0\n                    && !this.isManualInputChanging)\n                    this.dateChanged(true);\n            }\n        })\n            .on('focus', () => {\n            setTimeout(() => {\n                this.manualInputElem.selectionStart = 0;\n                this.manualInputElem.selectionEnd = 0;\n            }, 50);\n        });\n        this.manualInputElem = builder.toDOM();\n        return this.manualInputElem;\n    }\n    updateDisplayedDateValue() {\n        if (this.manualInputElem) {\n            if (!this.isManualInputChanging) {\n                const format = this.getInputDateFormat();\n                this.manualInputElem.value = i18n.dateTimeToStr(this.currentDate, format);\n                this.manualInputElem.focus();\n            }\n        }\n        else if (this.headerTextElem) {\n            const locale = i18n.getCurrentLocale();\n            this.headerTextElem.innerText = this.currentDate.toLocaleString(locale == 'en' ? undefined : locale, {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n            });\n        }\n    }\n    renderCalendarButtons() {\n        const builder = domel('nav')\n            .addClass(`${this.cssPrefix}-nav`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-prev`)\n            .on('click', () => {\n            this.prev();\n        })\n            .addChild('span', builder => builder.html('&lsaquo;')))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-selectors`)\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-month`)\n            .addChild('select', builder => {\n            builder\n                .on('change', () => {\n                this.jump(this.selectedYear, parseInt(this.selectMonthElem.value));\n            });\n            for (let i = 0; i < this.months.length; i++) {\n                builder.addChild('option', builder => builder\n                    .attr('value', i.toString())\n                    .text(this.months[i]));\n            }\n            this.selectMonthElem = builder.toDOM();\n        }))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-year`)\n            .addChild('select', builder => this.selectYearElem = builder\n            .on('change', () => {\n            this.jump(parseInt(this.selectYearElem.value), this.selectedMonth);\n        })\n            .toDOM())))\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-nav-next`)\n            .on('click', () => {\n            this.next();\n        })\n            .addChild('span', builder => builder.html('&rsaquo;')));\n        return builder.toDOM();\n    }\n    prev() {\n        this.selectedYear = (this.selectedMonth === 0) ? this.selectedYear - 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth === 0) ? 11 : this.selectedMonth - 1;\n        this.rerenderMonth();\n    }\n    next() {\n        this.selectedYear = (this.selectedMonth === 11) ? this.selectedYear + 1 : this.selectedYear;\n        this.selectedMonth = (this.selectedMonth + 1) % 12;\n        this.rerenderMonth();\n    }\n    rerenderSelectYear() {\n        const match = /c-(\\d*):c\\+(\\d*)/g.exec(this.options.yearRange);\n        let minusYear = 0;\n        let plusYear = 1;\n        if (match !== null) {\n            minusYear = parseInt(match[1]);\n            plusYear = parseInt(match[2]);\n        }\n        this.selectYearElem.innerHTML = '';\n        for (let i = 0; i <= minusYear + plusYear; i++) {\n            let op = document.createElement(\"option\");\n            let year = this.selectedYear - minusYear + i;\n            op.value = year.toString();\n            op.innerText = year.toString();\n            this.selectYearElem.appendChild(op);\n        }\n    }\n    jump(year, month) {\n        this.selectedYear = year;\n        this.selectedMonth = month;\n        this.rerenderMonth();\n    }\n    rerenderMonth() {\n        //header text\n        this.updateDisplayedDateValue();\n        this.rerenderSelectYear();\n        let firstDay = (new Date(this.selectedYear, this.selectedMonth)).getDay();\n        let daysInMonth = new Date(this.selectedYear, this.selectedMonth + 1, 0).getDate();\n        this.calendarBody.innerHTML = \"\";\n        this.selectYearElem.value = this.selectedYear.toString();\n        this.selectMonthElem.value = this.selectedMonth.toString();\n        this.daysOfWeek.forEach((day, idx) => {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-weekday`)\n                .addClass(idx == 0 || idx == 6 ? `${this.cssPrefix}-weekend` : '')\n                .text(day);\n        });\n        // Add empty cells before first day\n        for (let i = 0; i < firstDay; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n        // Add all month days\n        const today = new Date();\n        for (let day = 1; day <= daysInMonth; day++) {\n            const builder = domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day`)\n                .attr('data-date', day.toString())\n                .text(day.toString())\n                .on('click', (e) => {\n                this.currentDate.setFullYear(this.selectedYear);\n                this.currentDate.setMonth(this.selectedMonth);\n                this.currentDate.setDate(parseInt(e.target.getAttribute('data-date')));\n                this.dateChanged(this.options.oneClickDateSelection);\n            });\n            if (day === today.getDate() && this.selectedYear === today.getFullYear() && this.selectedMonth === today.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-current`);\n            }\n            if (day === this.currentDate.getDate() && this.selectedYear === this.currentDate.getFullYear() && this.selectedMonth === this.currentDate.getMonth()) {\n                builder.addClass(`${this.cssPrefix}-day-selected`);\n            }\n            const dayOfWeek = (firstDay + day - 1) % 7;\n            if (dayOfWeek == 0 || dayOfWeek == 6) {\n                builder.addClass(`${this.cssPrefix}-weekend`);\n            }\n            if (typeof this.options.onDrawDay === \"function\") {\n                this.options.onDrawDay.apply(builder.toDOM(), [\n                    builder.toDOM(),\n                    new Date(this.selectedYear, this.selectedMonth, day)\n                ]);\n            }\n        }\n        // Add empty cells after last day\n        const cellsDrawnInLastRow = (firstDay + daysInMonth) % 7;\n        const cellsToDraw = cellsDrawnInLastRow == 0 ? 0 : 7 - cellsDrawnInLastRow;\n        for (let i = 0; i < cellsToDraw; i++) {\n            domel('div', this.calendarBody)\n                .addClass(`${this.cssPrefix}-day-empty`);\n        }\n    }\n    dateChanged(apply) {\n        super.dateChanged(apply);\n        this.rerenderMonth();\n    }\n}\n\nclass TimePicker {\n    get cssPrefix() {\n        return 'kdtp-tp';\n    }\n    constructor(slot, options) {\n        this.slot = slot;\n        this.options = options || {};\n    }\n    setTime(time) {\n        this.currentTime = new Date(time);\n    }\n    getTime() {\n        return new Date(this.currentTime);\n    }\n    timeChanged() {\n        if (this.options.onTimeChanged) {\n            this.options.onTimeChanged(this.currentTime);\n        }\n    }\n}\n\nclass DefaultTimePicker extends TimePicker {\n    setTime(time) {\n        super.setTime(time);\n        this.updateDisplayedTime();\n        this.hoursInput.valueAsNumber = time.getHours();\n        this.minutesInput.valueAsNumber = time.getMinutes();\n    }\n    render() {\n        domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-time`)\n            .addChild('span', builder => this.timeText = builder.toDOM())\n            .toDOM();\n        const slidersBuilder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-sliders`);\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Hours')\n            .addChild('input', builder => this.hoursInput = builder\n            .addClass(`${this.cssPrefix}-input-hours`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '23')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setHours(this.hoursInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        slidersBuilder\n            .addChild('div', builder => builder\n            .addClass(`${this.cssPrefix}-time-row`)\n            .title('Minutes')\n            .addChild('input', builder => this.minutesInput = builder\n            .addClass(`${this.cssPrefix}-input-minutes`)\n            .type('range')\n            .attr('min', '0')\n            .attr('max', '59')\n            .attr('step', '1')\n            .on('input', (e) => {\n            this.currentTime.setMinutes(this.minutesInput.valueAsNumber);\n            this.updateDisplayedTime();\n            this.timeChanged();\n        })\n            .toDOM()));\n        return this.slot;\n    }\n    updateDisplayedTime() {\n        const locale = i18n.getCurrentLocale();\n        const timeToDraw = this.currentTime.toLocaleString(locale == 'en' ? undefined : locale, {\n            hour: \"numeric\",\n            minute: \"numeric\"\n        });\n        this.timeText.innerText = timeToDraw;\n    }\n}\n\nclass DefaultDateTimePicker extends DateTimePicker {\n    render() {\n        const sb = domel('div', document.body)\n            .addClass(`${this.cssPrefix}`)\n            .attr('tabIndex', '0')\n            .setStyle('position', 'absolute')\n            .setStyle('top', '-1000px')\n            .setStyle('left', '-1000px')\n            .on('keydown', (ev) => {\n            if (ev.keyCode === 27) { // ESC is pressed\n                this.cancel();\n            }\n            else if (ev.keyCode === 13) { // Enter is pressed\n                this.apply(this.getDateTime());\n            }\n            return false;\n        });\n        if (this.options.zIndex) {\n            sb.setStyle('z-index', `${this.options.zIndex}`);\n        }\n        this.slot = sb.toDOM();\n        super.render();\n        this.renderButtons();\n        this.globalMouseDownHandler = (e) => {\n            let event = window.event || e;\n            event.srcElement || event.target;\n            let isOutside = !this.slot.contains(event.target);\n            if (isOutside) {\n                document.removeEventListener('mousedown', this.globalMouseDownHandler, true);\n                this.cancel();\n            }\n            return true;\n        };\n    }\n    renderButtons() {\n        const builder = domel('div', this.slot)\n            .addClass(`${this.cssPrefix}-buttons`)\n            .addChild('button', b => this.nowButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-now`)\n            .text(i18n.getText('ButtonNow'))\n            .on('click', () => {\n            this.setDateTime(new Date());\n            this.dateTimeChanged();\n            return false;\n        })\n            .toDOM());\n        if (this.options.showTimePicker || !this.options.oneClickDateSelection) {\n            builder.addChild('button', b => this.submitButton = b\n                .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-apply`)\n                .text(i18n.getText('ButtonApply'))\n                .on('click', () => {\n                this.apply(this.getDateTime());\n                return false;\n            })\n                .toDOM());\n        }\n        builder.addChild('button', b => this.submitButton = b\n            .addClass(`${this.cssPrefix}-button ${this.cssPrefix}-button-cancel`)\n            .text(i18n.getText('ButtonCancel'))\n            .on('click', () => {\n            this.cancel();\n            return false;\n        })\n            .toDOM());\n    }\n    createCalendar(options) {\n        this.calendarSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-cal`)\n                .toDOM();\n        return new DefaultCalendar(this.calendarSlot, options);\n    }\n    createTimePicker(options) {\n        this.timePickerSlot =\n            domel('div', this.slot)\n                .addClass(`${this.cssPrefix}-tp`)\n                .toDOM();\n        return new DefaultTimePicker(this.timePickerSlot, options);\n    }\n    show(anchor) {\n        if (this.options.showDateTimeInput) {\n            if (this.options.beforeShow) {\n                this.options.beforeShow();\n            }\n            const anchorPos = getElementAbsolutePos(anchor || document.body);\n            const parentPos = getElementAbsolutePos(anchor ? anchor.parentElement || anchor : document.body);\n            this.slot.style.top = parentPos.y + 'px';\n            this.slot.style.left = anchorPos.x + 'px';\n        }\n        else {\n            super.show(anchor);\n            this.slot.focus();\n        }\n        setTimeout(() => {\n            document.addEventListener('mousedown', this.globalMouseDownHandler, true);\n        }, 1);\n    }\n}\n\nvar DialogFooterAlignment;\n(function (DialogFooterAlignment) {\n    DialogFooterAlignment[DialogFooterAlignment[\"Left\"] = 1] = \"Left\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Center\"] = 2] = \"Center\";\n    DialogFooterAlignment[DialogFooterAlignment[\"Right\"] = 3] = \"Right\";\n})(DialogFooterAlignment || (DialogFooterAlignment = {}));\n\nconst cssPrefix = \"kdlg\";\nclass DefaultDialogService {\n    openConfirm(title, content, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-confirm\">${content}</div>`;\n        const options = {\n            title: title,\n            closable: false,\n            submitable: true,\n            cancelable: true,\n            body: template\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                callback(true);\n            };\n            options.onCancel = () => {\n                callback(false);\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                resolve(true);\n            };\n            options.onCancel = () => {\n                resolve(false);\n            };\n            this.open(options);\n        });\n    }\n    openPrompt(title, content, defVal, callback) {\n        const template = `<div id=\"${cssPrefix}-dialog-form\" class=\"kfrm-form\">\r\n            <div class=\"kfrm-fields label-above\">\r\n                <label for=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-content\">${content}</label>\r\n                <input type=\"text\" name=\"${cssPrefix}-dialog-form-input\" id=\"${cssPrefix}-dialog-form-input\" />\r\n            </div>\r\n        </div>`;\n        const options = {\n            title: title,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            submitOnEnter: true,\n            body: template,\n            arrangeParents: false,\n            beforeOpen: () => {\n                const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n                if (defVal) {\n                    input.value = defVal;\n                }\n                input.focus();\n            }\n        };\n        const processInput = (callback) => {\n            const input = document.getElementById(`${cssPrefix}-dialog-form-input`);\n            const result = input.value;\n            if (result && result.replace(/\\s/g, '').length > 0) {\n                callback(result);\n                return true;\n            }\n            input.classList.add('eqjs-invalid');\n            return false;\n        };\n        if (callback) {\n            options.onSubmit = () => {\n                return processInput(callback);\n            };\n            options.onCancel = () => {\n                callback(\"\");\n            };\n            this.open(options);\n            return;\n        }\n        return new Promise((resolve) => {\n            options.onSubmit = () => {\n                return processInput(resolve);\n            };\n            options.onCancel = () => {\n                resolve(\"\");\n            };\n            this.open(options);\n        });\n    }\n    open(options, data) {\n        const dialog = new DefaultDialog(options, data);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    createSet(options) {\n        return new DefaultDialogSet(options, this);\n    }\n    untrack(dlg) {\n        const index = DefaultDialogService.openDialogs.indexOf(dlg);\n        if (index >= 0) {\n            DefaultDialogService.openDialogs.splice(index, 1);\n        }\n    }\n    track(dlg) {\n        DefaultDialogService.openDialogs.push(dlg);\n    }\n    openProgress(options) {\n        const dialog = new DefaultProgressDialog(options);\n        const onDestroy = options.onDestroy;\n        options.onDestroy = (dlg) => {\n            this.untrack(dlg);\n            onDestroy && onDestroy(dlg);\n        };\n        dialog.open();\n        this.track(dialog);\n        return dialog;\n    }\n    getAllDialogs() {\n        return Array.from(DefaultDialogService.openDialogs);\n    }\n    closeAllDialogs() {\n        for (const dialog of Array.from(DefaultDialogService.openDialogs)) {\n            dialog.close();\n        }\n    }\n}\nDefaultDialogService.openDialogs = [];\nclass DefaultDialog {\n    constructor(options, data) {\n        this.options = options;\n        this.submitHandler = (token) => {\n            if (this.options.onSubmit && this.options.onSubmit(this, token) === false) {\n                return false;\n            }\n            this.destroy();\n            return true;\n        };\n        this.cancelHandler = () => {\n            if (this.options.onCancel) {\n                this.options.onCancel(this);\n            }\n            this.destroy();\n        };\n        this.keydownHandler = (ev) => {\n            if (ev.keyCode == 13 && this.isActiveDialog()) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (this.submitHandler()) {\n                    window.removeEventListener('keydown', this.keydownHandler, false);\n                    return false;\n                }\n            }\n            return true;\n        };\n        this.dialogId = utils.generateId('dlg');\n        this.data = data;\n        this.slot =\n            domel('div', document.body)\n                .attr('tab-index', '-1')\n                .data('dialog-id', this.dialogId)\n                .addClass(`${cssPrefix}-modal`, 'is-active')\n                .focus()\n                .addChild('div', b => b\n                .addClass('kdlg-modal-background'))\n                .addChild('div', b => this.windowElement = b\n                .addClass(`${cssPrefix}-modal-window`)\n                .addChild('header', b => {\n                this.headerElement = b\n                    .addClass(`${cssPrefix}-header`)\n                    .addChild('p', b => b\n                    .addClass(`${cssPrefix}-header-title`)\n                    .addText(options.title))\n                    .toDOM();\n                if (options.closable !== false)\n                    b.addChild('button', b => b\n                        .addClass(`${cssPrefix}-modal-close`)\n                        .on('click', () => {\n                        this.cancelHandler();\n                    })\n                        .focus());\n            })\n                .addChild('div', b => {\n                b.addClass(`${cssPrefix}-alert-container`);\n                this.alertElement = b.toDOM();\n            })\n                .addChild('section', b => {\n                this.bodyElement = b\n                    .addClass(`${cssPrefix}-body`)\n                    .toDOM();\n                if (typeof options.body === 'string') {\n                    const html = liquid.renderLiquidTemplate(options.body, data);\n                    b.addHtml(html);\n                }\n                else {\n                    b.addChildElement(options.body);\n                }\n            })\n                .addChild('footer', b => {\n                let alignClass = null;\n                if (options.footerAlignment && options.footerAlignment == DialogFooterAlignment.Center) {\n                    alignClass = 'align-center';\n                }\n                else {\n                    alignClass = 'align-right';\n                }\n                this.footerElement = b\n                    .addClass(`${cssPrefix}-footer`)\n                    .toDOM();\n                b.addClass(alignClass);\n                if (options.submitable === false)\n                    return;\n                b.addChild('button', bb => {\n                    bb.id(this.dialogId + '-btn-submit')\n                        .addClass('kfrm-button', 'is-info')\n                        .addText(options.submitButtonText || i18n.getText('ButtonOK'));\n                    if (options.recaptchaSiteKey) {\n                        bb.data('sitekey', options.recaptchaSiteKey);\n                        bb.addClass('g-recaptcha');\n                        bb.on('click', (e) => {\n                            if (grecaptcha) {\n                                grecaptcha.ready(() => {\n                                    grecaptcha.execute(options.recaptchaSiteKey, { action: 'submit' })\n                                        .then((token) => {\n                                        this.submitHandler(token);\n                                    });\n                                });\n                            }\n                            else {\n                                this.submitHandler();\n                            }\n                        });\n                    }\n                    else {\n                        bb.on('click', (e) => {\n                            this.submitHandler();\n                        });\n                    }\n                    bb.focus();\n                });\n                if (options.cancelable !== false)\n                    b.addChild('button', bb => bb\n                        .id(this.dialogId + '-btn-cancel')\n                        .addClass('kfrm-button')\n                        .addText(options.cancelButtonText || i18n.getText('ButtonCancel'))\n                        .on('click', (e) => {\n                        this.cancelHandler();\n                    }));\n            })\n                .toDOM())\n                .toDOM();\n    }\n    getData() {\n        return this.data;\n    }\n    getRootElement() {\n        return this.slot;\n    }\n    getSubmitButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-submit');\n    }\n    getCancelButtonElement() {\n        return document.getElementById(this.dialogId + '-btn-cancel');\n    }\n    open() {\n        if (this.options.beforeOpen) {\n            this.options.beforeOpen(this);\n        }\n        domel(this.slot).show();\n        if (this.options.arrangeParents) {\n            this.arrangeParents(true);\n        }\n        const windowDiv = this.slot\n            .querySelector(`.${cssPrefix}-modal-window`);\n        if (this.options.height) {\n            windowDiv.style.height = typeof this.options.height === 'string'\n                ? this.options.height\n                : `${this.options.height}px`;\n        }\n        if (this.options.width) {\n            windowDiv.style.width = typeof this.options.width === 'string'\n                ? this.options.width\n                : `${this.options.width}px`;\n        }\n        if (this.options.submitOnEnter) {\n            window.addEventListener('keydown', this.keydownHandler, false);\n        }\n        //clear alert on change in any input element \n        this.slot.querySelectorAll('input')\n            .forEach(element => element.addEventListener('input', () => {\n            this.clearAlert();\n            if (this.options.onInput) {\n                this.options.onInput(this);\n            }\n        }));\n        if (this.options.onShow) {\n            this.options.onShow(this);\n        }\n    }\n    submit() {\n        this.submitHandler();\n    }\n    cancel() {\n        this.cancelHandler();\n    }\n    close() {\n        this.destroy();\n    }\n    disableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = true);\n    }\n    enableButtons() {\n        const buttons = this.slot.querySelectorAll('button');\n        buttons.forEach(button => button.disabled = false);\n    }\n    showAlert(text, reason, replace) {\n        let alert = domel('div')\n            .addClass(`${cssPrefix}-alert ${reason || ''}`)\n            .addChild('span', b => b\n            .addClass(`${cssPrefix}-alert-closebtn`)\n            .text('×')\n            .on('click', (ev) => {\n            const alert = ev.target.parentElement;\n            alert.parentElement.removeChild(alert);\n        }))\n            .addText(text)\n            .toDOM();\n        if (replace === true) {\n            this.clearAlert();\n        }\n        this.alertElement.appendChild(alert);\n    }\n    clearAlert() {\n        this.alertElement.innerHTML = '';\n    }\n    destroy() {\n        const elem = document.querySelectorAll(`[data-dialog-id=\"${this.dialogId}\"]`);\n        if (elem.length <= 0)\n            return;\n        if (this.options.arrangeParents) {\n            this.arrangeParents(false);\n        }\n        document.body.removeChild(this.slot);\n        if (this.options.submitOnEnter) {\n            window.removeEventListener('keydown', this.keydownHandler, false);\n        }\n        if (this.options.onDestroy) {\n            this.options.onDestroy(this);\n        }\n    }\n    isActiveDialog() {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal');\n        return windowDivs[windowDivs.length - 1] === this.slot;\n    }\n    arrangeParents(turnOn) {\n        const windowDivs = document.documentElement.querySelectorAll('.kdlg-modal-window');\n        for (let i = 0; i < windowDivs.length - 1; i++) {\n            if (turnOn) {\n                const offset = i == 0 ? 20 : i * 40 + 20;\n                domel(windowDivs[i])\n                    .setStyle('margin-top', `${offset}px`)\n                    .setStyle('margin-left', `${offset}px`);\n            }\n            else {\n                domel(windowDivs[i])\n                    .removeStyle('margin-top')\n                    .removeStyle('margin-left');\n            }\n        }\n    }\n}\nclass DefaultProgressDialog extends DefaultDialog {\n    constructor(options, data) {\n        let contentElement;\n        let progressElement;\n        const body = domel('div')\n            .addChild('div', b => contentElement = b\n            .text(options.content || '')\n            .toDOM())\n            .addChild('div', b => {\n            b\n                .addClass(`${cssPrefix}-progress-line`)\n                .addChild('div', b => {\n                progressElement = b\n                    .addClass('fill')\n                    .toDOM();\n                if (options.determinated) {\n                    b.setStyle('width', '0%');\n                }\n                else {\n                    b.addClass('indeterminate');\n                }\n            });\n        })\n            .toDOM();\n        super({\n            title: options.title,\n            body: body,\n            beforeOpen: options.beforeOpen,\n            onSubmit: options.onSubmit,\n            width: options.width,\n            height: options.height,\n            submitable: false,\n            cancelable: false,\n            closable: false,\n            onDestroy: options.onDestroy\n        }, data);\n        this.contentElement = contentElement;\n        this.progressElement = progressElement;\n    }\n    updateContent(content) {\n        this.contentElement.innerText = content;\n    }\n    updateProgress(progress) {\n        progress = this.in01(progress);\n        this.progressElement.style.width = `${progress * 100}%`;\n        if (progress === 1) {\n            // postpone for 0.5s for smooth closing\n            setTimeout(() => {\n                this.submit();\n            }, 500);\n        }\n    }\n    in01(num) {\n        if (num > 1)\n            return 1;\n        if (num < 0)\n            return 0;\n        return num;\n    }\n}\nclass DefaultDialogSet {\n    constructor(options, dialogService) {\n        this.options = options;\n        this.dialogService = dialogService;\n        this.currentDialog = null;\n        this.currentIndex = 0;\n        this.options = options;\n        this.dialogService = dialogService;\n    }\n    getCurrent() {\n        return this.currentDialog;\n    }\n    openNext(data) {\n        return this.open(this.currentIndex + 1, data);\n    }\n    openPrev(data) {\n        return this.open(this.currentIndex - 1, data);\n    }\n    open(page, data) {\n        if (page < 0) {\n            this.currentIndex = 0;\n        }\n        else if (page >= this.options.length) {\n            this.currentIndex = this.options.length - 1;\n        }\n        else {\n            this.currentIndex = page;\n        }\n        if (this.currentDialog) {\n            try {\n                this.currentDialog.close();\n            }\n            catch (e) { }\n        }\n        const dlgOptions = this.options[this.currentIndex];\n        this.currentDialog = this.dialogService.open(dlgOptions, data);\n        return this.currentDialog;\n    }\n    close() {\n        if (this.currentDialog) {\n            this.currentDialog.close();\n            this.currentDialog = null;\n        }\n    }\n}\n\nfunction addEasyDataUITexts() {\n    i18n.updateDefaultTexts({\n        GridPageInfo: '{FirstPageRecordNum} - {LastPageRecordNum} of {Total} records',\n        GridItemsPerPage: 'items per page',\n        ButtonOK: \"OK\",\n        ButtonCancel: \"Cancel\",\n        ButtonApply: 'Apply',\n        ButtonNow: 'Now',\n        LblTotal: 'Total'\n    });\n}\naddEasyDataUITexts();\n\nvar PRE_SELECT;\n(function (PRE_SELECT) {\n    PRE_SELECT[PRE_SELECT[\"THIS_WEEK\"] = 0] = \"THIS_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"LAST_WEEK\"] = 1] = \"LAST_WEEK\";\n    PRE_SELECT[PRE_SELECT[\"THIS_MONTH\"] = 2] = \"THIS_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"FIRST_MONTH\"] = 3] = \"FIRST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"LAST_MONTH\"] = 4] = \"LAST_MONTH\";\n    PRE_SELECT[PRE_SELECT[\"THIS_YEAR\"] = 5] = \"THIS_YEAR\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_1\"] = 6] = \"QUARTER_1\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_2\"] = 7] = \"QUARTER_2\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_3\"] = 8] = \"QUARTER_3\";\n    PRE_SELECT[PRE_SELECT[\"QUARTER_4\"] = 9] = \"QUARTER_4\";\n})(PRE_SELECT || (PRE_SELECT = {}));\nvar JUMP_TO;\n(function (JUMP_TO) {\n    JUMP_TO[\"UNDEF\"] = \"-1\";\n    JUMP_TO[\"TODAY\"] = \"1\";\n    JUMP_TO[\"YESTERDAY\"] = \"2\";\n    JUMP_TO[\"TOMORROW\"] = \"3\";\n    JUMP_TO[\"WEEK_START\"] = \"4\";\n    JUMP_TO[\"WEEK_END\"] = \"5\";\n    JUMP_TO[\"MONTH_START\"] = \"6\";\n    JUMP_TO[\"MONTH_END\"] = \"7\";\n    JUMP_TO[\"YEAR_START\"] = \"8\";\n    JUMP_TO[\"YEAR_END\"] = \"9\";\n})(JUMP_TO || (JUMP_TO = {}));\nconst DEFAULT_WEEK_START = 0;\nclass TimeSpanPicker extends DefaultDialog {\n    constructor(options) {\n        super({\n            title: options.title || `Select a period`,\n            body: \"\",\n            submitButtonText: options.submitButtonText || `OK`,\n            cancelButtonText: options.cancelButtonText || `Cancel`,\n            submitable: true,\n            closable: true,\n            cancelable: true,\n            beforeOpen: (dlg) => {\n                this.setupDialog();\n            },\n            onSubmit: (dlg) => {\n                if (typeof options.onSubmit === \"function\") {\n                    options.onSubmit.apply(dlg, [this.result(this.from), this.result(this.to)]);\n                }\n            }\n        });\n        this.yearRange = options.yearRange;\n        this.weekStart = options.weekStart || DEFAULT_WEEK_START;\n        this.bodyElement.append(this.drawDialog());\n        this.calendar1.render();\n        this.calendar2.render();\n        this.from = this.alignDate(options.start ? options.start : new Date());\n        this.to = this.alignDate(options.finish && this.alignDate(options.finish) > this.from ? options.finish : new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 1));\n        this.represent();\n    }\n    alignDate(date) {\n        date.setHours(0);\n        date.setMinutes(0);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n        return date;\n    }\n    drawDialog() {\n        const body = domel('div')\n            .addClass('tsp__container')\n            .addChild('div', b => {\n            b\n                .addClass('tsp__intervals')\n                .addChild('button', b => b.addClass('tsp__button').addText('This Week').on('click', () => { this.select(PRE_SELECT.THIS_WEEK); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Last Week').on('click', () => { this.select(PRE_SELECT.LAST_WEEK); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('This Month').on('click', () => { this.select(PRE_SELECT.THIS_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('First Month').on('click', () => { this.select(PRE_SELECT.FIRST_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Last Month').on('click', () => { this.select(PRE_SELECT.LAST_MONTH); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('This Year').on('click', () => { this.select(PRE_SELECT.THIS_YEAR); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 1').on('click', () => { this.select(PRE_SELECT.QUARTER_1); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 2').on('click', () => { this.select(PRE_SELECT.QUARTER_2); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 3').on('click', () => { this.select(PRE_SELECT.QUARTER_3); }))\n                .addChild('button', b => b.addClass('tsp__button').addText('Quarter 4').on('click', () => { this.select(PRE_SELECT.QUARTER_4); }));\n        })\n            .addChild('div', b => {\n            b\n                .addClass('tsp__form')\n                .addChild('div', b => {\n                b\n                    .addClass('tsp__date')\n                    .addChild('div', b => {\n                    b\n                        .addClass('tsp__label')\n                        .addChild('label', b => {\n                        b.addText('Start');\n                    })\n                        .addChild('select', b => {\n                        b\n                            .addOption({ value: JUMP_TO.UNDEF, title: 'Jump To' })\n                            .addOption({ value: JUMP_TO.TODAY, title: 'Today' })\n                            .addOption({ value: JUMP_TO.YESTERDAY, title: 'Yesterday' })\n                            .addOption({ value: JUMP_TO.TOMORROW, title: 'Tomorrow' })\n                            .addOption({ value: JUMP_TO.WEEK_START, title: 'Week Start' })\n                            .addOption({ value: JUMP_TO.WEEK_END, title: 'Week End' })\n                            .addOption({ value: JUMP_TO.MONTH_START, title: 'Month Start' })\n                            .addOption({ value: JUMP_TO.MONTH_END, title: 'Month End' })\n                            .addOption({ value: JUMP_TO.YEAR_START, title: 'Year Start' })\n                            .addOption({ value: JUMP_TO.YEAR_END, title: 'Year End' });\n                        b.on('change', (event) => {\n                            // @ts-ignore\n                            this.jump(1, event.target.value, event.target);\n                        });\n                    });\n                })\n                    .addChild('div', b => {\n                    b.addClass('tsp__calendar');\n                    this.calendar1 = new DefaultCalendar(b.toDOM(), {\n                        yearRange: this.yearRange,\n                        showDateTimeInput: true,\n                        onDateChanged: (date) => {\n                            this.from = this.alignDate(date);\n                            this.calendar1.setDate(this.from);\n                            if (this.to < this.from) {\n                                this.to = this.from;\n                            }\n                            this.represent();\n                        },\n                        onDrawDay: (cell, date) => {\n                            if (this.alignDate(date) >= this.from && this.alignDate(date) <= this.to) {\n                                cell.classList.add(\"day-in-range\");\n                            }\n                            else {\n                                cell.classList.remove(\"day-in-range\");\n                            }\n                        }\n                    });\n                });\n            })\n                .addChild('div', b => {\n                b\n                    .addClass('tsp__date')\n                    .addChild('div', b => {\n                    b\n                        .addClass('tsp__label')\n                        .addChild('label', b => {\n                        b.addText('Finish');\n                    })\n                        .addChild('select', b => {\n                        b\n                            .addOption({ value: JUMP_TO.UNDEF, title: 'Jump To' })\n                            .addOption({ value: JUMP_TO.TODAY, title: 'Today' })\n                            .addOption({ value: JUMP_TO.YESTERDAY, title: 'Yesterday' })\n                            .addOption({ value: JUMP_TO.TOMORROW, title: 'Tomorrow' })\n                            .addOption({ value: JUMP_TO.WEEK_START, title: 'Week Start' })\n                            .addOption({ value: JUMP_TO.WEEK_END, title: 'Week End' })\n                            .addOption({ value: JUMP_TO.MONTH_START, title: 'Month Start' })\n                            .addOption({ value: JUMP_TO.MONTH_END, title: 'Month End' })\n                            .addOption({ value: JUMP_TO.YEAR_START, title: 'Year Start' })\n                            .addOption({ value: JUMP_TO.YEAR_END, title: 'Year End' });\n                        b.on('change', (event) => {\n                            // @ts-ignore\n                            this.jump(2, event.target.value, event.target);\n                        });\n                    });\n                })\n                    .addChild('div', b => {\n                    b.addClass('tsp__calendar');\n                    this.calendar2 = new DefaultCalendar(b.toDOM(), {\n                        yearRange: this.yearRange,\n                        showDateTimeInput: true,\n                        onDateChanged: (date) => {\n                            if (this.alignDate(date) >= this.from) {\n                                this.to = this.alignDate(date);\n                            }\n                            else {\n                                this.calendar2.setDate(this.to);\n                            }\n                            this.represent();\n                        },\n                        onDrawDay: (cell, date) => {\n                            if (this.alignDate(date) >= this.from && this.alignDate(date) <= this.to) {\n                                cell.classList.add(\"day-in-range\");\n                            }\n                            else {\n                                cell.classList.remove(\"day-in-range\");\n                            }\n                        }\n                    });\n                });\n            });\n        })\n            .toDOM();\n        return body;\n    }\n    setupDialog() {\n    }\n    jump(cal, to, select) {\n        let target = cal === 1 ? 'from' : 'to';\n        let jumpTo;\n        const curr = new Date();\n        switch (to) {\n            case JUMP_TO.TODAY: {\n                jumpTo = curr;\n                break;\n            }\n            case JUMP_TO.YESTERDAY: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - 1);\n                break;\n            }\n            case JUMP_TO.TOMORROW: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 1);\n                break;\n            }\n            case JUMP_TO.WEEK_START: {\n                jumpTo = new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart));\n                break;\n            }\n            case JUMP_TO.WEEK_END: {\n                jumpTo = new Date(curr.setDate(curr.getDate() - curr.getDay() + 6 + this.weekStart));\n                break;\n            }\n            case JUMP_TO.MONTH_START: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth(), 1);\n                break;\n            }\n            case JUMP_TO.MONTH_END: {\n                jumpTo = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\n                break;\n            }\n            case JUMP_TO.YEAR_START: {\n                jumpTo = new Date(curr.getFullYear(), 0, 1);\n                break;\n            }\n            case JUMP_TO.YEAR_END: {\n                jumpTo = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n        }\n        jumpTo = this.alignDate(jumpTo);\n        select.value = JUMP_TO.UNDEF;\n        if (target === \"from\") {\n            this.from = jumpTo;\n            if (this.to < this.from) {\n                this.to = this.from;\n            }\n        }\n        else {\n            if (jumpTo >= this.from) {\n                this[target] = jumpTo;\n            }\n        }\n        this.represent();\n    }\n    represent() {\n        this.calendar1.setDate(this.from);\n        this.calendar2.setDate(this.to);\n    }\n    select(interval) {\n        switch (interval) {\n            case PRE_SELECT.THIS_WEEK: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - curr.getDay());\n                this.to = new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 6);\n                break;\n            }\n            case PRE_SELECT.LAST_WEEK: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - curr.getDay() - 7);\n                this.to = new Date(this.from.getFullYear(), this.from.getMonth(), this.from.getDate() + 6);\n                break;\n            }\n            case PRE_SELECT.THIS_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth(), 1);\n                this.to = new Date(curr.getFullYear(), curr.getMonth() + 1, 0);\n                break;\n            }\n            case PRE_SELECT.FIRST_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 1, 0);\n                break;\n            }\n            case PRE_SELECT.LAST_MONTH: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), curr.getMonth() - 1, 1);\n                this.to = new Date(curr.getFullYear(), curr.getMonth(), 0);\n                break;\n            }\n            case PRE_SELECT.THIS_YEAR: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_1: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 0, 1);\n                this.to = new Date(curr.getFullYear(), 3, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_2: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 3, 1);\n                this.to = new Date(curr.getFullYear(), 6, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_3: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 6, 1);\n                this.to = new Date(curr.getFullYear(), 9, 0);\n                break;\n            }\n            case PRE_SELECT.QUARTER_4: {\n                const curr = new Date();\n                this.from = new Date(curr.getFullYear(), 9, 1);\n                this.to = new Date(curr.getFullYear(), 12, 0);\n                break;\n            }\n        }\n        this.represent();\n    }\n    result(date) {\n        const curr = this.alignDate(new Date());\n        const constants = {\n            \"Today\": this.alignDate(new Date()),\n            \"Yesterday\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() - 1)),\n            \"Tomorrow\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), curr.getDate() + 1)),\n            \"FirstDayOfMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth(), 1)),\n            \"LastDayOfMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 0)),\n            \"FirstDayOfWeek\": this.alignDate(new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart))),\n            \"FirstDayOfYear\": this.alignDate(new Date(curr.getFullYear(), 0, 1)),\n            \"FirstDayOfNextWeek\": this.alignDate(new Date(curr.setDate(curr.getDate() - curr.getDay() + this.weekStart + 7))),\n            \"FirstDayOfNextMonth\": this.alignDate(new Date(curr.getFullYear(), curr.getMonth() + 1, 1)),\n            \"FirstDayOfNextYear\": this.alignDate(new Date(curr.getFullYear() + 1, 0, 1)),\n        };\n        for (let k in constants) {\n            console.log(constants[k], date);\n            if (constants[k].getTime() === date.getTime()) {\n                return `\\${{${k}}}`;\n            }\n        }\n        return i18n.dateTimeToStr(date, i18n.getLocaleSettings().editDateFormat);\n    }\n}\nconst showTimeSpanPicker = (options) => new TimeSpanPicker(options).open();\n\n// grid\n// export dialogs to use outside of context as global\nconst dialogs = new DefaultDialogService();\n\nexport { AutoResizeColumns, Calendar, CellRendererType, DFMT_REGEX, DateTimePicker, DefaultCalendar, DefaultDateTimePicker, DefaultDialog, DefaultDialogService, DefaultDialogSet, DefaultProgressDialog, DefaultTimePicker, DialogFooterAlignment, DomElementBuilder, DomInputElementBuilder, DomSelectElementBuilder, DomTextAreaElementBuilder, DragManager, DropEffect, EasyGrid, EqDragEvent, GridCellRendererStore, GridColumn, GridColumnAlign, GridColumnList, JUMP_TO, PRE_SELECT, TimePicker, TimeSpanPicker, addCssClass, addElement, browserUtils, createBrowserEvent, dialogs, domel, eqCssMobile, eqCssPrefix, eqDragManager, getDocSize, getElementAbsolutePos, getMobileCssClass, getScrollPos, getViewportSize, getWinSize, hideElement, isVisible, mask, showElement, showTimeSpanPicker, slideDown, slideUp, toggleVisibility, wrapInner };\n//# sourceMappingURL=easydata.ui.esm.js.map\n","\n/*\n * EasyData.JS CRUD v1.5.2\n * Copyright 2020-2024 Korzh.com\n * Licensed under MIT\n */\n\nimport { EasyDataTable, utils, DataType, i18n, EntityAttrKind, EditorTag, ValueEditor, DataRow, HttpClient, MetaData, combinePath } from '@easydata/core';\nimport { domel, CellRendererType, browserUtils, DFMT_REGEX, DefaultDialogService, EasyGrid, DefaultDateTimePicker } from '@easydata/ui';\n\nclass TextDataFilter {\n    constructor(loader, sourceTable, sourceId, isLookup = false) {\n        this.loader = loader;\n        this.sourceTable = sourceTable;\n        this.sourceId = sourceId;\n        this.isLookup = isLookup;\n        this.filterValue = '';\n        //turns off client-side search\n        //for test purposes\n        this.justServerSide = false;\n    }\n    getValue() {\n        return this.filterValue;\n    }\n    apply(value) {\n        this.filterValue = value;\n        if (this.filterValue) {\n            return this.applyCore();\n        }\n        else {\n            return this.clear();\n        }\n    }\n    clear() {\n        this.filterValue = '';\n        return Promise.resolve(this.sourceTable);\n    }\n    applyCore() {\n        if (this.sourceTable.getTotal() == this.sourceTable.getCachedCount() && !this.justServerSide) {\n            return this.applyInMemoryFilter();\n        }\n        else {\n            const filters = [\n                { class: \"__substring\", value: this.filterValue }\n            ];\n            return this.loader.loadChunk({\n                offset: 0,\n                limit: this.sourceTable.chunkSize,\n                needTotal: true,\n                filters: filters,\n                sourceId: this.sourceId,\n                lookup: this.isLookup\n            })\n                .then(data => {\n                const filteredTable = new EasyDataTable({\n                    chunkSize: this.sourceTable.chunkSize,\n                    loader: {\n                        loadChunk: (params) => this.loader\n                            .loadChunk(Object.assign(Object.assign({}, params), { filters: filters, sourceId: this.sourceId, lookup: this.isLookup }))\n                    }\n                });\n                for (const col of this.sourceTable.columns.getItems()) {\n                    filteredTable.columns.add(col);\n                }\n                filteredTable.setTotal(data.total);\n                for (const row of data.table.getCachedRows()) {\n                    filteredTable.addRow(row);\n                }\n                return filteredTable;\n            });\n        }\n    }\n    applyInMemoryFilter() {\n        return new Promise((resolve, reject) => {\n            const filteredTable = new EasyDataTable({\n                chunkSize: this.sourceTable.chunkSize,\n                inMemory: true\n            });\n            for (const col of this.sourceTable.columns.getItems()) {\n                filteredTable.columns.add(col);\n            }\n            const words = this.filterValue.split('||').map(w => w.trim().toLowerCase());\n            const suitableColumns = this.sourceTable.columns.getItems()\n                .filter(col => utils.isNumericType(col.type)\n                || utils.getStringDataTypes().indexOf(col.type) >= 0);\n            const hasEnterance = (row) => {\n                for (const col of suitableColumns) {\n                    const value = row.getValue(col.id);\n                    if (value) {\n                        const normalized = value.toString().toLowerCase();\n                        for (const word of words) {\n                            if (normalized.indexOf(word) >= 0) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            };\n            for (const row of this.sourceTable.getCachedRows()) {\n                if (hasEnterance(row)) {\n                    filteredTable.addRow(row);\n                }\n            }\n            filteredTable.setTotal(filteredTable.getCachedCount());\n            resolve(filteredTable);\n        });\n    }\n}\n\nconst internalDateFormat = 'yyyy-MM-dd';\nconst internalTimeFormat = 'HH:mm';\nconst getInternalDateTimeFormat = (dtype) => {\n    if (dtype == DataType.Date)\n        return internalDateFormat;\n    if (dtype == DataType.Time)\n        return internalTimeFormat;\n    return `${internalDateFormat}T${internalTimeFormat}`;\n};\nconst getEditDateTimeFormat = (dtype) => {\n    const settings = i18n.getLocaleSettings();\n    if (dtype == DataType.Date)\n        return settings.editDateFormat;\n    if (dtype == DataType.Time)\n        return settings.editTimeFormat;\n    return `${settings.editDateFormat} ${settings.editTimeFormat}`;\n};\nconst setLocation = (path) => {\n    const state = window.history.state;\n    history.pushState(state, document.title, path);\n    window.dispatchEvent(new Event('ed_set_location'));\n};\n\nclass Validator {\n}\n\nclass DateTimeValidator extends Validator {\n    constructor() {\n        super();\n        this.name = 'DateTime';\n    }\n    validate(attr, value) {\n        if (!utils.IsDefinedAndNotNull(value) || value == '')\n            return { successed: true };\n        if (utils.getDateDataTypes().indexOf(attr.dataType) >= 0) {\n            try {\n                const editFormat = getEditDateTimeFormat(attr.dataType);\n                const newDate = utils.strToDateTime(value, editFormat);\n            }\n            catch (_a) {\n                return {\n                    successed: false,\n                    messages: [i18n.getText('DateTimeError')]\n                };\n            }\n        }\n        return { successed: true };\n    }\n}\n\nclass EntityEditForm {\n    constructor(context) {\n        this.context = context;\n        this.validators = [new DateTimeValidator()];\n    }\n    getHtml() {\n        return this.html;\n    }\n    setHtmlInt(html) {\n        this.html = html;\n        this.errorsDiv = this.html.querySelector('.errors-block');\n    }\n    validate() {\n        this.clearErrors();\n        const inputs = Array.from(this.html.querySelectorAll('input, select'));\n        let isValid = true;\n        for (const input of inputs) {\n            const attr = this.context.getMetaData().getAttributeById(input.name);\n            if (input.type === 'checkbox')\n                continue;\n            const result = this.validateValue(attr, input.value);\n            if (!result.successed) {\n                if (isValid) {\n                    domel(this.errorsDiv)\n                        .addChild('ul');\n                }\n                isValid = false;\n                for (const message of result.messages) {\n                    this.errorsDiv.firstElementChild.innerHTML += `<li>${attr.caption}: ${message}</li>`;\n                }\n            }\n            this.markInputValid(input, result.successed);\n        }\n        return isValid;\n    }\n    getData() {\n        return new Promise((resolve, reject) => {\n            const filePromises = [];\n            const inputs = Array.from(this.html\n                .querySelectorAll('input, select, textarea'));\n            let obj = {};\n            for (const input of inputs) {\n                const property = input.name.substring(input.name.lastIndexOf('.') + 1);\n                const attr = this.context.getMetaData().getAttributeById(input.name);\n                if (input.type === 'checkbox') {\n                    obj[property] = input.checked;\n                }\n                else if (input.type === 'file') {\n                    filePromises.push(this.fileToBase64(input.files[0])\n                        .then(content => obj[property] = content));\n                }\n                else {\n                    obj[property] = this.mapValue(attr.dataType, input.value);\n                }\n            }\n            Promise.all(filePromises)\n                .then(() => resolve(obj))\n                .catch((e) => reject(e));\n        });\n    }\n    fileToBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                const result = reader.result.toString();\n                resolve(result.substring(result.indexOf(',') + 1));\n            };\n            reader.onerror = error => reject(error);\n        });\n    }\n    useValidator(...validator) {\n        this.useValidators(validator);\n    }\n    useValidators(validators) {\n        this.validators = this.validators.concat(validators);\n    }\n    mapValue(type, value) {\n        if (utils.getDateDataTypes().indexOf(type) >= 0) {\n            if (type !== DataType.Time && value && value.length) {\n                const editFormat = getEditDateTimeFormat(type);\n                const internalFormat = getInternalDateTimeFormat(type);\n                const date = utils.strToDateTime(value, editFormat);\n                return i18n.dateTimeToStr(date, internalFormat);\n            }\n            return value && value.length ? value : null;\n        }\n        if (utils.isIntType(type))\n            return parseInt(value);\n        if (utils.isNumericType(type))\n            return parseFloat(value);\n        return value;\n    }\n    clearErrors() {\n        this.errorsDiv.innerHTML = '';\n        this.html.querySelectorAll('input, select').forEach(el => {\n            el.classList.remove('is-valid');\n            el.classList.remove('is-invalid');\n        });\n    }\n    markInputValid(input, valid) {\n        input.classList.add(valid ? 'is-valid' : 'is-invalid');\n    }\n    validateValue(attr, value) {\n        const result = { successed: true, messages: [] };\n        for (const validator of this.validators) {\n            const res = validator.validate(attr, value);\n            if (!res.successed) {\n                result.successed = false;\n                result.messages = result.messages.concat(res.messages);\n            }\n        }\n        return result;\n    }\n}\n\nclass TextFilterWidget {\n    constructor(slot, grid, filter, options) {\n        this.slot = slot;\n        this.grid = grid;\n        this.filter = filter;\n        this.options = {\n            focus: false,\n            instantMode: false,\n            instantTimeout: 1000\n        };\n        this.options = utils.assign(this.options, options || {});\n        const stringDefRenderer = this.grid.cellRendererStore\n            .getDefaultRendererByType(CellRendererType.STRING);\n        this.grid.cellRendererStore\n            .setDefaultRenderer(CellRendererType.STRING, (value, column, cellElement, rowElement) => this.highlightCellRenderer(stringDefRenderer, value, column, cellElement, rowElement));\n        const numDefRenderer = this.grid.cellRendererStore\n            .getDefaultRendererByType(CellRendererType.NUMBER);\n        this.grid.cellRendererStore\n            .setDefaultRenderer(CellRendererType.NUMBER, (value, column, cellElement, rowElement) => this.highlightCellRenderer(numDefRenderer, value, column, cellElement, rowElement));\n        this.render();\n    }\n    render() {\n        const horizClass = browserUtils.isIE()\n            ? 'kfrm-fields-ie is-horizontal'\n            : 'kfrm-fields is-horizontal';\n        const isEdgeOrIE = browserUtils.isIE() || browserUtils.isEdge();\n        domel(this.slot)\n            .addClass(horizClass)\n            .addChild('div', b => {\n            b\n                .addClass('control')\n                .addChild('input', b => {\n                this.filterInput = b.toDOM();\n                b\n                    .attr('placeholder', i18n.getText('SearchInputPlaceholder'))\n                    .type('text');\n                b.on('keydown', this.inputKeydownHandler.bind(this));\n                if (this.options.instantMode) {\n                    b.on('keyup', this.inputKeyupHandler.bind(this));\n                }\n            });\n            if (!isEdgeOrIE) {\n                b\n                    .addClass('has-icons-right')\n                    .addChild('span', b => {\n                    b\n                        .addClass('icon')\n                        .addClass('is-right')\n                        .addClass('is-clickable')\n                        .html('&#x1F5D9;')\n                        .on('click', this.clearButtonClickHander.bind(this));\n                });\n            }\n        });\n        if (!this.options.instantMode) {\n            domel(this.slot)\n                .addChild('button', b => b\n                .addClass('kfrm-button')\n                .addText(i18n.getText('SearchBtn'))\n                .on('click', this.searchButtonClickHandler.bind(this)));\n        }\n        if (this.options.focus) {\n            this.filterInput.focus();\n        }\n    }\n    inputKeydownHandler(ev) {\n        if (ev.keyCode == 13) {\n            this.applyFilter(true);\n        }\n    }\n    inputKeyupHandler() {\n        if (this.applyFilterTimeout) {\n            clearTimeout(this.applyFilterTimeout);\n        }\n        this.applyFilterTimeout = setTimeout(() => {\n            this.applyFilter(true);\n        }, this.options.instantTimeout);\n    }\n    clearButtonClickHander() {\n        this.filterInput.value = '';\n        this.filterInput.focus();\n        this.applyFilter(true);\n    }\n    searchButtonClickHandler() {\n        this.applyFilter(true);\n    }\n    applyFilter(checkChange) {\n        if (this.applyFilterTimeout) {\n            clearTimeout(this.applyFilterTimeout);\n        }\n        const filterValue = this.filter.getValue();\n        if (!checkChange || filterValue != this.filterInput.value) {\n            this.filter.apply(this.filterInput.value)\n                .then(data => {\n                this.grid.setData(data);\n            });\n            return true;\n        }\n        return false;\n    }\n    highlightCellRenderer(defaultRenderer, value, column, cellElement, rowElement) {\n        if (utils.isNumericType(column.type)\n            || utils.getStringDataTypes().indexOf(column.type) >= 0) {\n            if (value) {\n                if (column.dataColumn && column.dataColumn.displayFormat\n                    && DFMT_REGEX.test(column.dataColumn.displayFormat)) {\n                    value = column.dataColumn.displayFormat.replace(DFMT_REGEX, (_, $1) => {\n                        return i18n.numberToStr(value, $1);\n                    });\n                }\n                else {\n                    value = value.toLocaleString();\n                }\n                const result = this.highlightText(value.toString());\n                if (result instanceof HTMLElement) {\n                    cellElement.title = value;\n                    cellElement.appendChild(result);\n                    return;\n                }\n            }\n        }\n        defaultRenderer(value, column, cellElement, rowElement);\n    }\n    highlightText(content) {\n        const normalizedContent = content.toLowerCase();\n        const filterValue = this.filter.getValue().toString();\n        if (filterValue && filterValue.length > 0 && content && content.length > 0) {\n            const indexInMas = [];\n            const words = filterValue.split('||').map(w => w.trim().toLowerCase());\n            for (let i = 0; i < words.length; i++) {\n                let pos = 0;\n                const lowerWord = words[i];\n                if (!lowerWord.length)\n                    continue;\n                if (lowerWord === normalizedContent) {\n                    const highlightSpan = document.createElement('span');\n                    highlightSpan.style.backgroundColor = 'yellow';\n                    highlightSpan.innerText = content;\n                    return highlightSpan;\n                }\n                while (pos < content.length - 1) {\n                    const index = normalizedContent.indexOf(lowerWord, pos);\n                    if (index >= 0) {\n                        indexInMas.push({ index: index, length: words[i].length });\n                        pos = index + lowerWord.length;\n                    }\n                    else {\n                        pos++;\n                    }\n                }\n            }\n            if (indexInMas.length > 0) {\n                //sort array item by index\n                indexInMas.sort((item1, item2) => {\n                    if (item1.index > item2.index) {\n                        return 1;\n                    }\n                    else if (item1.index == item2.index2) {\n                        return 0;\n                    }\n                    else {\n                        return -1;\n                    }\n                });\n                //remove intersecting gaps\n                for (let i = 0; i < indexInMas.length - 1;) {\n                    const delta = indexInMas[i + 1].index - (indexInMas[i].index + indexInMas[i].length);\n                    if (delta < 0) {\n                        const addDelta = indexInMas[i + 1].length + delta;\n                        if (addDelta > 0) {\n                            indexInMas[i].length += addDelta;\n                        }\n                        indexInMas.splice(i + 1, 1);\n                    }\n                    else {\n                        i++;\n                    }\n                }\n                const div = document.createElement('div');\n                for (let i = 0; i < indexInMas.length; i++) {\n                    if (i === 0) {\n                        const text = document.createTextNode(content.substring(0, indexInMas[i].index));\n                        div.appendChild(text);\n                    }\n                    const highlightSpan = document.createElement('span');\n                    highlightSpan.style.backgroundColor = 'yellow';\n                    highlightSpan.innerText = content.substring(indexInMas[i].index, indexInMas[i].index + indexInMas[i].length);\n                    div.appendChild(highlightSpan);\n                    const text = (i < indexInMas.length - 1)\n                        ? document.createTextNode(content.substring(indexInMas[i].index\n                            + indexInMas[i].length, indexInMas[i + 1].index))\n                        : document.createTextNode(content.substring(indexInMas[i].index\n                            + indexInMas[i].length));\n                    div.appendChild(text);\n                }\n                return div;\n            }\n        }\n        return content;\n    }\n}\n\nconst isIE = browserUtils.isIE();\nclass EntityEditFormBuilder {\n    constructor(context, params) {\n        this.context = context;\n        this.params = params;\n        this.params = params || {};\n        this.reset();\n    }\n    reset() {\n        this.form = new EntityEditForm(this.context);\n    }\n    setupLookupField(parent, attr, readOnly, value) {\n        const lookupEntity = this.context.getMetaData().getRootEntity()\n            .subEntities.filter(ent => ent.id == attr.lookupEntity)[0];\n        const dataAttr = this.context.getMetaData().getAttributeById(attr.dataAttr);\n        if (!dataAttr)\n            return;\n        readOnly = readOnly || !dataAttr.isEditable;\n        value = this.params.values\n            ? this.params.values.getValue(dataAttr.id)\n            : undefined;\n        const horizClass = isIE\n            ? 'kfrm-fields-ie is-horizontal'\n            : 'kfrm-fields is-horizontal';\n        let inputEl;\n        domel(parent)\n            .addChild('div', b => {\n            b\n                .addClass(horizClass)\n                .addChild('input', b => {\n                inputEl = b.toDOM();\n                b.attr('readonly', '');\n                b.name(dataAttr.id);\n                b.type(this.resolveInputType(dataAttr.dataType));\n                b.value(utils.IsDefinedAndNotNull(value)\n                    ? value.toString() : '');\n            });\n            if (!readOnly)\n                b.addChild('button', b => b\n                    .addClass('kfrm-button')\n                    .attr('title', i18n.getText('NavigationBtnTitle'))\n                    .addText('...')\n                    .on('click', (ev) => {\n                    const lookupTable = new EasyDataTable({\n                        loader: {\n                            loadChunk: (chunkParams) => this.context.getDataLoader()\n                                .loadChunk(Object.assign(Object.assign({}, chunkParams), { id: lookupEntity.id }))\n                        }\n                    });\n                    this.context.getDataLoader()\n                        .loadChunk({ offset: 0, limit: 1000, needTotal: true, sourceId: lookupEntity.id })\n                        .then(data => {\n                        for (const col of data.table.columns.getItems()) {\n                            const attrs = lookupEntity.attributes.filter(attr => attr.id == col.id && (attr.isPrimaryKey || attr.showInLookup));\n                            if (attrs.length) {\n                                lookupTable.columns.add(col);\n                            }\n                        }\n                        lookupTable.setTotal(data.total);\n                        for (const row of data.table.getCachedRows()) {\n                            lookupTable.addRow(row);\n                        }\n                        const ds = new DefaultDialogService();\n                        let gridSlot = null;\n                        let selectedSlot = null;\n                        let widgetSlot;\n                        const slot = domel('div')\n                            .addClass(`kfrm-form`)\n                            .addChild('div', b => b\n                            .addClass(`kfrm-field`)\n                            .addChild('label', b => b\n                            .addText(i18n.getText('LookupSelectedItem'))\n                            .toDOM())\n                            .addChild('div', b => selectedSlot = b\n                            .addText('None')\n                            .toDOM()))\n                            .addChild('div', b => widgetSlot = b.toDOM())\n                            .addChild('div', b => b\n                            .addClass('kfrm-control')\n                            .addChild('div', b => gridSlot = b.toDOM()))\n                            .toDOM();\n                        let selectedValue = inputEl.value;\n                        const getValue = (row, colId) => {\n                            if (row instanceof DataRow) {\n                                return row.getValue(colId);\n                            }\n                            const property = colId.substring(colId.lastIndexOf('.') + 1);\n                            return row[property];\n                        };\n                        const updateSelectedValue = (row) => {\n                            selectedSlot.innerHTML = lookupTable.columns\n                                .getItems()\n                                .map(col => {\n                                return `<b>${col.label}:</b> ${getValue(row, col.id)}`;\n                            })\n                                .join(', ');\n                        };\n                        if (selectedValue) {\n                            const attr = lookupEntity.getFirstPrimaryAttr();\n                            const key = attr.id.substring(attr.id.lastIndexOf('.') + 1);\n                            this.context.fetchRecord({ [key]: selectedValue }, lookupEntity.id)\n                                .then(data => {\n                                if (data.entity) {\n                                    updateSelectedValue(data.entity);\n                                }\n                            })\n                                .catch(error => {\n                                console.error(error);\n                            });\n                        }\n                        const lookupGrid = new EasyGrid({\n                            slot: gridSlot,\n                            dataTable: lookupTable,\n                            fixHeightOnFirstRender: true,\n                            paging: {\n                                pageSize: 10\n                            },\n                            onActiveRowChanged: (ev) => {\n                                lookupGrid.getData().getRow(ev.rowIndex)\n                                    .then((row) => {\n                                    selectedValue = row.getValue(attr.lookupDataAttr);\n                                    updateSelectedValue(row);\n                                });\n                            }\n                        });\n                        ds.open({\n                            title: i18n.getText('LookupDlgCaption')\n                                .replace('{entity}', lookupEntity.caption),\n                            body: slot,\n                            arrangeParents: true,\n                            beforeOpen: () => {\n                                const dataFilter = this.context.createFilter(lookupEntity.id, lookupGrid.getData(), true);\n                                new TextFilterWidget(widgetSlot, lookupGrid, dataFilter, { instantMode: true, focus: true });\n                            },\n                            onSubmit: () => {\n                                inputEl.value = selectedValue;\n                                return true;\n                            },\n                            onDestroy: () => {\n                                lookupGrid.destroy();\n                                // return focus on button\n                                b.toDOM().focus();\n                            }\n                        });\n                    });\n                }));\n        });\n    }\n    setupDateTimeField(parent, attr, value, readOnly, hidden) {\n        const horizClass = isIE\n            ? 'kfrm-fields-ie is-horizontal'\n            : 'kfrm-fields is-horizontal';\n        const editFormat = getEditDateTimeFormat(attr.dataType);\n        let inputEl;\n        const mask = editFormat\n            .replace('yyyy', '9999')\n            .replace('MM', '99')\n            .replace('dd', '99')\n            .replace('HH', '99')\n            .replace('mm', '99')\n            .replace('ss', '99');\n        domel(parent)\n            .addChild('div', b => {\n            b\n                .addClass(horizClass)\n                .addChild('input', b => {\n                inputEl = b.toDOM();\n                b.name(attr.id);\n                b.type(hidden ? 'hidden' : this.resolveInputType(attr.dataType));\n                if (readOnly) {\n                    b.attr('readonly', '');\n                }\n                else {\n                    b.mask(mask);\n                    b.on('keypress', (ev) => this.applySumbit(ev))\n                        .on('input', ev => {\n                        b.removeClass('is-invalid');\n                        try {\n                            const newDate = utils.strToDateTime(inputEl.value, editFormat);\n                        }\n                        catch (e) {\n                            b.addClass('is-invalid');\n                        }\n                        finally {\n                        }\n                    })\n                        .on('blur', ev => {\n                        if (inputEl.value === mask.replace(/[9]/g, '_')) {\n                            inputEl.value = '';\n                        }\n                    });\n                }\n                b.value((utils.IsDefinedAndNotNull(value)\n                    ? i18n.dateTimeToStr(value, editFormat)\n                    : ''));\n            });\n            if (!readOnly)\n                b.addChild('button', b => b\n                    .addClass('kfrm-button')\n                    .attr('title', i18n.getText(attr.dataType !== DataType.Time\n                    ? 'CalendarBtnTitle'\n                    : 'TimerBtnTitle'))\n                    .addChild('i', b => b.addClass(attr.dataType !== DataType.Time\n                    ? 'ed-calendar-icon'\n                    : 'ed-timer-icon'))\n                    .on('click', (ev) => {\n                    let value;\n                    try {\n                        value = inputEl.value.length\n                            ? attr.dataType !== DataType.Time\n                                ? utils.strToDateTime(inputEl.value, editFormat)\n                                : utils.strToTime(inputEl.value)\n                            : new Date(new Date().setSeconds(0));\n                    }\n                    catch (_a) {\n                        value = new Date(new Date().setSeconds(0));\n                    }\n                    const pickerOptions = {\n                        zIndex: 9999999999,\n                        showCalendar: attr.dataType !== DataType.Time,\n                        showTimePicker: attr.dataType !== DataType.Date,\n                        onApply: (dateTime) => {\n                            dateTime.setSeconds(0);\n                            dateTime.setMilliseconds(0);\n                            inputEl.value = i18n.dateTimeToStr(dateTime, editFormat);\n                        }\n                    };\n                    const dtp = new DefaultDateTimePicker(pickerOptions);\n                    dtp.setDateTime(value);\n                    dtp.show(ev.target);\n                }).toDOM());\n        });\n    }\n    setupListField(parent, attr, value, values, readOnly) {\n        domel(parent)\n            .addChild('div', b => b\n            .addClass('kfrm-select full-width')\n            .addChild('select', b => {\n            if (readOnly)\n                b.attr('readonly', '');\n            b.attr('name', attr.id);\n            b.on('keypress', (ev) => this.applySumbit(ev));\n            if (values) {\n                for (let i = 0; i < values.length; i++) {\n                    const val = values[i];\n                    b.addOption({\n                        value: val.id,\n                        title: val.text,\n                        selected: i === 0\n                    });\n                }\n            }\n            b.value(value);\n        }));\n    }\n    setupFileField(parent, attr, readOnly, accept) {\n        domel(parent)\n            .addChild('input', b => {\n            if (readOnly)\n                b.attr('readonly', '');\n            b.name(attr.id)\n                .type(this.resolveInputType(attr.dataType));\n            b.attr('accept', accept);\n        });\n    }\n    setupTextField(parent, attr, value, readOnly, hidden) {\n        domel(parent)\n            .addChild('input', b => {\n            if (readOnly) {\n                b.attr('readonly', '');\n            }\n            b.type(hidden ? 'hidden' : this.resolveInputType(attr.dataType));\n            b.name(attr.id)\n                .type(this.resolveInputType(attr.dataType));\n            if (attr.dataType == DataType.Bool) {\n                if (value)\n                    b.attr('checked', '');\n            }\n            else {\n                b.on('keypress', (ev) => this.applySumbit(ev))\n                    .value(utils.IsDefinedAndNotNull(value)\n                    ? value.toString()\n                    : '');\n            }\n        });\n    }\n    setupTextArea(parent, attr, value, readOnly) {\n        // feature: modify size in value editor ??\n        domel(parent)\n            .addChild('textarea', b => {\n            if (readOnly)\n                b.attr('readonly', '');\n            b.attr('name', attr.id);\n            b.setStyle('height', `120px`);\n            b.value(utils.IsDefinedAndNotNull(value)\n                ? value.toString()\n                : '');\n        });\n    }\n    addFormField(parent, attr) {\n        const value = (this.params.values && attr.kind !== EntityAttrKind.Lookup)\n            ? this.params.values.getValue(attr.id)\n            : !this.params.isEditForm\n                ? attr.defaultValue\n                : undefined;\n        const editor = this.resolveEditor(attr);\n        const readOnly = this.params.isEditForm && (attr.isPrimaryKey || !attr.isEditable);\n        const required = !attr.isNullable;\n        if (isIE) {\n            parent = domel('div', parent)\n                .addClass('kfrm-field-ie')\n                .toDOM();\n        }\n        domel(parent)\n            .addChild('label', b => {\n            b.attr('for', attr.id);\n            b.addHtml(`${attr.caption} ${required ? '<sup style=\"color: red\">*</sup>' : ''}: `);\n            if (attr.description) {\n                b.addChild('div', b => b\n                    .attr('title', attr.description)\n                    .addClass('question-mark')\n                    .setStyle('vertical-align', 'middle')\n                    .setStyle('display', 'inline-block'));\n            }\n        });\n        const hidden = attr.isPrimaryKey;\n        if (attr.kind === EntityAttrKind.Lookup) {\n            this.setupLookupField(parent, attr, readOnly, value);\n            return;\n        }\n        switch (editor.tag) {\n            case EditorTag.DateTime:\n                this.setupDateTimeField(parent, attr, value, readOnly, hidden);\n                break;\n            case EditorTag.List:\n                this.setupListField(parent, attr, value, editor.values, readOnly);\n                break;\n            case EditorTag.File:\n                this.setupFileField(parent, attr, readOnly, editor.accept);\n                break;\n            case EditorTag.Edit:\n            default:\n                if (editor.multiline) {\n                    this.setupTextArea(parent, attr, value, readOnly);\n                }\n                else {\n                    this.setupTextField(parent, attr, value, readOnly, hidden);\n                }\n                break;\n        }\n    }\n    resolveInputType(dataType) {\n        if (dataType === DataType.Bool)\n            return 'checkbox';\n        if (dataType === DataType.Blob)\n            return 'file';\n        return 'text';\n    }\n    resolveEditor(attr) {\n        let editor = attr.defaultEditor || new ValueEditor();\n        if (editor.tag == EditorTag.Unknown) {\n            if (utils.getDateDataTypes().indexOf(attr.dataType) >= 0) {\n                editor.tag = EditorTag.DateTime;\n            }\n            else {\n                editor.tag = EditorTag.Edit;\n            }\n        }\n        return editor;\n    }\n    applySumbit(ev) {\n        if (ev.keyCode === 13) {\n            this.sumbitCallback && this.sumbitCallback();\n            return false;\n        }\n        return false;\n    }\n    onSubmit(sumbitCallback) {\n        this.sumbitCallback = sumbitCallback;\n        return this;\n    }\n    build() {\n        let fb;\n        const formHtml = domel('div')\n            .addClass('kfrm-form')\n            .addChild('div', b => b\n            .addClass(`errors-block`)\n            .toDOM())\n            .addChild('div', b => {\n            b.addClass(`${isIE\n                ? 'kfrm-fields-ie col-ie-1-4 label-align-right'\n                : 'kfrm-fields col-a-1 label-align-right'}`);\n            fb = b;\n        })\n            .toDOM();\n        this.form['setHtmlInt'](formHtml);\n        for (const attr of this.context.getActiveEntity().attributes) {\n            if (!this.params.isEditForm && !attr.showOnCreate)\n                continue;\n            if (!attr.isPrimaryKey && this.params.isEditForm && !attr.showOnEdit) {\n                continue;\n            }\n            this.addFormField(fb.toDOM(), attr);\n        }\n        return this.form;\n    }\n}\n\nclass ProgressBar {\n    constructor(slot) {\n        this.slot = slot;\n        this.hide();\n        this.slot.classList.add('ed-progress-bar');\n    }\n    show() {\n        this.slot.style.removeProperty('display');\n    }\n    hide() {\n        this.slot.style.display = 'none';\n    }\n}\n\nclass EasyDataServerLoader {\n    constructor(context) {\n        this.context = context;\n    }\n    loadChunk(params) {\n        const url = this.context.resolveEndpoint('FetchDataset', { sourceId: params.sourceId || this.context.getActiveEntity().id });\n        delete params.sourceId;\n        this.context.startProcess();\n        const http = this.context.getHttpClient();\n        return http.post(url, params)\n            .then((result) => {\n            const dataTable = new EasyDataTable({\n                chunkSize: 1000\n            });\n            const resultSet = result.resultSet;\n            for (const col of resultSet.cols) {\n                dataTable.columns.add(col);\n            }\n            for (const row of resultSet.rows) {\n                dataTable.addRow(row);\n            }\n            let totalRecords = 0;\n            if (result.meta && result.meta.totalRecords) {\n                totalRecords = result.meta.totalRecords;\n            }\n            return {\n                table: dataTable,\n                total: totalRecords,\n                hasNext: !params.needTotal\n                    || params.offset + params.limit < totalRecords\n            };\n        })\n            .finally(() => {\n            this.context.endProcess();\n        });\n    }\n}\n\nclass DataContext {\n    constructor(options) {\n        this.endpoints = new Map();\n        this.endpointVarsRegex = /\\{.*?\\}/g;\n        this.options = options || {};\n        this.http = new HttpClient();\n        this.model = new MetaData();\n        this.model.id = options.metaDataId || '__default';\n        this.dataLoader = new EasyDataServerLoader(this);\n        const dataTableOptions = Object.assign({ loader: this.dataLoader }, options.dataTable);\n        this.data = new EasyDataTable(dataTableOptions);\n        this.setDefaultEndpoints(this.options.endpoint || '/api/easydata');\n    }\n    getActiveEntity() {\n        return this.activeEntity;\n    }\n    setActiveSource(entityId) {\n        this.activeEntity = this.model.getRootEntity().subEntities\n            .filter(e => e.id == entityId)[0];\n    }\n    getMetaData() {\n        return this.model;\n    }\n    getData() {\n        return this.data;\n    }\n    getDataLoader() {\n        return this.dataLoader;\n    }\n    createFilter(sourceId, data, isLookup) {\n        return new TextDataFilter(this.dataLoader, data || this.getData(), sourceId || this.activeEntity.id, isLookup);\n    }\n    loadMetaData() {\n        const url = this.resolveEndpoint('GetMetaData');\n        this.startProcess();\n        return this.http.get(url)\n            .then(result => {\n            if (result.model) {\n                this.model.loadFromData(result.model);\n            }\n            return this.model;\n        })\n            .catch(error => {\n            console.error(`Error: ${error.message}. Source: ${error.sourceError}`);\n            return null;\n        })\n            .finally(() => {\n            this.endProcess();\n        });\n    }\n    getHttpClient() {\n        return this.http;\n    }\n    fetchDataset() {\n        this.data.clear();\n        return this.dataLoader.loadChunk({ offset: 0, limit: this.data.chunkSize, needTotal: true })\n            .then(result => {\n            for (const col of result.table.columns.getItems()) {\n                this.data.columns.add(col);\n            }\n            this.data.setTotal(result.total);\n            for (const row of result.table.getCachedRows()) {\n                this.data.addRow(row);\n            }\n            return this.data;\n        });\n    }\n    fetchRecord(keys, sourceId) {\n        const url = this.resolveEndpoint('FetchRecord', { sourceId: sourceId || this.activeEntity.id });\n        this.startProcess();\n        return this.http.get(url, { queryParams: keys })\n            .finally(() => this.endProcess());\n    }\n    createRecord(obj, sourceId) {\n        const url = this.resolveEndpoint('CreateRecord', { sourceId: sourceId || this.activeEntity.id });\n        this.startProcess();\n        return this.http.post(url, obj, { dataType: 'json' })\n            .finally(() => this.endProcess());\n    }\n    updateRecord(obj, sourceId) {\n        const url = this.resolveEndpoint('UpdateRecord', { sourceId: sourceId || this.activeEntity.id });\n        this.startProcess();\n        return this.http.post(url, obj, { dataType: 'json' })\n            .finally(() => this.endProcess());\n    }\n    deleteRecord(obj, sourceId) {\n        const url = this.resolveEndpoint('DeleteRecord', { sourceId: sourceId || this.activeEntity.id });\n        this.startProcess();\n        return this.http.post(url, obj, { dataType: 'json' })\n            .finally(() => this.endProcess());\n    }\n    setEndpoint(key, value) {\n        this.endpoints.set(key, value);\n    }\n    setEnpointIfNotExist(key, value) {\n        if (!this.endpoints.has(key))\n            this.endpoints.set(key, value);\n    }\n    resolveEndpoint(endpointKey, options) {\n        options = options || {};\n        let result = this.endpoints.get(endpointKey);\n        if (!result) {\n            throw endpointKey + ' endpoint is not defined';\n        }\n        let matches = result.match(this.endpointVarsRegex);\n        if (matches) {\n            for (let match of matches) {\n                let opt = match.substring(1, match.length - 1);\n                let optVal = options[opt];\n                if (!optVal) {\n                    if (opt == 'modelId') {\n                        optVal = this.model.getId();\n                    }\n                    else if (opt == 'sourceId') {\n                        optVal = this.activeEntity.id;\n                    }\n                    else {\n                        throw `Parameter [${opt}] is not defined`;\n                    }\n                }\n                result = result.replace(match, optVal);\n            }\n        }\n        return result;\n    }\n    startProcess() {\n        if (this.options.onProcessStart)\n            this.options.onProcessStart();\n    }\n    endProcess() {\n        if (this.options.onProcessEnd)\n            this.options.onProcessEnd();\n    }\n    setDefaultEndpoints(endpointBase) {\n        this.setEnpointIfNotExist('GetMetaData', combinePath(endpointBase, 'models/{modelId}'));\n        this.setEnpointIfNotExist('FetchDataset', combinePath(endpointBase, 'models/{modelId}/sources/{sourceId}/fetch'));\n        this.setEnpointIfNotExist('FetchRecord', combinePath(endpointBase, 'models/{modelId}/sources/{sourceId}/fetch'));\n        this.setEnpointIfNotExist('CreateRecord', combinePath(endpointBase, 'models/{modelId}/sources/{sourceId}/create'));\n        this.setEnpointIfNotExist('UpdateRecord', combinePath(endpointBase, 'models/{modelId}/sources/{sourceId}/update'));\n        this.setEnpointIfNotExist('DeleteRecord', combinePath(endpointBase, 'models/{modelId}/sources/{sourceId}/delete'));\n    }\n}\n\nclass TypeValidator extends Validator {\n    constructor() {\n        super();\n        this.name = 'Type';\n    }\n    validate(attr, value) {\n        if (!utils.IsDefinedAndNotNull(value) || value == '')\n            return { successed: true };\n        if (utils.isNumericType(attr.dataType)) {\n            if (!utils.isNumeric(value))\n                return {\n                    successed: false,\n                    messages: [i18n.getText('NumberError')]\n                };\n            if (utils.isIntType(attr.dataType)\n                && !Number.isInteger(Number.parseFloat(value))) {\n                return {\n                    successed: false,\n                    messages: [i18n.getText('IntNumberError')]\n                };\n            }\n        }\n        return { successed: true };\n    }\n}\n\nclass RequiredValidator extends Validator {\n    constructor() {\n        super();\n        this.name = 'Required';\n    }\n    validate(attr, value) {\n        if (!attr.isNullable && (!utils.IsDefinedAndNotNull(value)\n            || value === ''))\n            return {\n                successed: false,\n                messages: [i18n.getText('RequiredError')]\n            };\n        return { successed: true };\n    }\n}\n\nclass EntityDataView {\n    constructor(slot, context, basePath, options) {\n        this.slot = slot;\n        this.context = context;\n        this.basePath = basePath;\n        this.options = {\n            showFilterBox: true,\n            showBackToEntities: true\n        };\n        this.defaultValidators = [new RequiredValidator(), new TypeValidator()];\n        this.options = utils.assignDeep(this.options, options || {});\n        this.dlg = new DefaultDialogService();\n        const ent = this.context.getActiveEntity();\n        if (!ent) {\n            throw \"Can't find active entity for \" + window.location.pathname;\n        }\n        this.slot.innerHTML += `<h1>${ent.captionPlural || ent.caption}</h1>`;\n        if (this.options.showBackToEntities) {\n            domel(this.slot)\n                .addChild('a', b => b\n                .attr('href', 'javascript:void(0)')\n                .text(`← ${i18n.getText('BackToEntities')}`)\n                .on('click', (e) => {\n                e.preventDefault();\n                setLocation(this.basePath);\n            }));\n        }\n        this.renderGrid();\n    }\n    syncGridColumnHandler(column) {\n        if (column.dataColumn) {\n            const attr = this.context.getMetaData().getAttributeById(column.dataColumn.id);\n            if (attr) {\n                column.isVisible = attr.showOnView;\n            }\n        }\n    }\n    renderGrid() {\n        this.context.fetchDataset()\n            .then(result => {\n            const gridSlot = document.createElement('div');\n            this.slot.appendChild(gridSlot);\n            gridSlot.id = 'Grid';\n            let gridOptions = {\n                slot: gridSlot,\n                dataTable: result,\n                paging: {\n                    pageSize: 15,\n                    allowPageSizeChange: true,\n                    pageSizeItems: [15, 30, 50, 100, 200]\n                },\n                showPlusButton: this.context.getActiveEntity().isEditable,\n                plusButtonTitle: i18n.getText('AddRecordBtnTitle'),\n                showActiveRow: false,\n                onPlusButtonClick: this.addClickHandler.bind(this),\n                onGetCellRenderer: this.manageCellRenderer.bind(this),\n                onRowDbClick: this.rowDbClickHandler.bind(this),\n                onSyncGridColumn: this.syncGridColumnHandler.bind(this)\n            };\n            const sourceOptions = this.options.grid || {};\n            gridOptions = utils.assignDeep(gridOptions, sourceOptions);\n            this.grid = new EasyGrid(gridOptions);\n            if (this.options.showFilterBox) {\n                let filterWidgetSlot;\n                const filterBarDiv = domel('div')\n                    .addClass(`kfrm-form`)\n                    .setStyle('margin', '10px 0px')\n                    .addChild('div', b => filterWidgetSlot = b.toDOM()).toDOM();\n                this.slot.insertBefore(filterBarDiv, gridSlot);\n                const dataFilter = this.context.createFilter();\n                this.filterWidget = new TextFilterWidget(filterWidgetSlot, this.grid, dataFilter);\n            }\n        });\n    }\n    manageCellRenderer(column, defaultRenderer) {\n        if (column.isRowNum) {\n            column.width = 110;\n            return (value, column, cell, rowEl) => {\n                const b = domel('div', cell)\n                    .addClass(`keg-cell-value`);\n                if (this.context.getActiveEntity().isEditable) {\n                    b.addChild('a', b => b\n                        .attr('href', 'javascript:void(0)')\n                        .text(i18n.getText('EditBtn'))\n                        .on('click', (ev) => this.editClickHandler(ev, parseInt(rowEl.getAttribute('data-row-idx')))))\n                        .addChild('span', b => b.text(' | '))\n                        .addChild('a', b => b\n                        .attr('href', 'javascript:void(0)')\n                        .text(i18n.getText('DeleteBtn'))\n                        .on('click', (ev) => this.deleteClickHandler(ev, parseInt(rowEl.getAttribute('data-row-idx')))));\n                }\n            };\n        }\n    }\n    addClickHandler() {\n        const activeEntity = this.context.getActiveEntity();\n        const form = new EntityEditFormBuilder(this.context)\n            .onSubmit(() => dlg.submit())\n            .build();\n        form.useValidators(this.defaultValidators);\n        const dlg = this.dlg.open({\n            title: i18n.getText('AddDlgCaption')\n                .replace('{entity}', activeEntity.caption),\n            body: form.getHtml(),\n            onSubmit: () => {\n                if (!form.validate())\n                    return false;\n                form.getData()\n                    .then(obj => this.context.createRecord(obj))\n                    .then(() => {\n                    return this.refreshData();\n                })\n                    .catch((error) => {\n                    this.processError(error);\n                });\n            }\n        });\n    }\n    editClickHandler(ev, rowIndex) {\n        this.grid.getData().getRow(rowIndex)\n            .then(row => {\n            if (row) {\n                this.showEditForm(row);\n            }\n        });\n    }\n    showEditForm(row) {\n        const activeEntity = this.context.getActiveEntity();\n        const form = new EntityEditFormBuilder(this.context, { isEditForm: true, values: row })\n            .onSubmit(() => dlg.submit())\n            .build();\n        form.useValidators(this.defaultValidators);\n        const dlg = this.dlg.open({\n            title: i18n.getText('EditDlgCaption')\n                .replace('{entity}', activeEntity.caption),\n            body: form.getHtml(),\n            onSubmit: () => {\n                if (!form.validate())\n                    return false;\n                form.getData()\n                    .then(obj => this.context.updateRecord(obj))\n                    .then(() => {\n                    return this.refreshData();\n                })\n                    .catch((error) => {\n                    this.processError(error);\n                });\n            }\n        });\n    }\n    rowDbClickHandler(ev) {\n        if (this.context.getActiveEntity().isEditable) {\n            this.showEditForm(ev.row);\n        }\n    }\n    deleteClickHandler(ev, rowIndex) {\n        this.grid.getData().getRow(rowIndex)\n            .then(row => {\n            if (row) {\n                const activeEntity = this.context.getActiveEntity();\n                const keyAttrs = activeEntity.getPrimaryAttrs();\n                const keyVals = keyAttrs.map(attr => row.getValue(attr.id));\n                const keys = keyAttrs.reduce((val, attr, index) => {\n                    const property = attr.id.substring(attr.id.lastIndexOf('.') + 1);\n                    val[property] = keyVals[index];\n                    return val;\n                }, {});\n                this.dlg.openConfirm(i18n.getText('DeleteDlgCaption')\n                    .replace('{entity}', activeEntity.caption), i18n.getText('DeleteDlgMessage')\n                    .replace('{recordId}', Object.keys(keys)\n                    .map(key => `${key}:${keys[key]}`).join(';')))\n                    .then((result) => {\n                    if (result) {\n                        this.context.deleteRecord(keys)\n                            .then(() => {\n                            return this.refreshData();\n                        })\n                            .catch((error) => {\n                            this.processError(error);\n                        });\n                    }\n                });\n            }\n        });\n    }\n    processError(error) {\n        this.dlg.open({\n            title: 'Ooops, something went wrong',\n            body: error.message,\n            closable: true,\n            cancelable: false\n        });\n    }\n    refreshData() {\n        return this.context.fetchDataset()\n            .then(() => {\n            let processed = false;\n            if (this.filterWidget) {\n                processed = this.filterWidget.applyFilter(false);\n            }\n            if (!processed) {\n                this.grid.refresh();\n            }\n        });\n    }\n}\n\nclass RootDataView {\n    constructor(slot, context, basePath, options) {\n        this.slot = slot;\n        this.context = context;\n        this.basePath = basePath;\n        this.options = {\n            usePluralNames: true\n        };\n        this.metaData = this.context.getMetaData();\n        this.slot.innerHTML += `<h1>${i18n.getText('RootViewTitle')}</h1>`;\n        utils.assign(this.options, options);\n        this.renderEntitySelector();\n    }\n    renderEntitySelector() {\n        const entities = this.metaData.getRootEntity().subEntities;\n        if (this.slot) {\n            domel(this.slot)\n                .addChild('div', b => b\n                .addClass('ed-root')\n                .addChild('div', b => b\n                .addClass('ed-menu-description')\n                .addText(i18n.getText(!this.metaData.isEmpty() ? 'EntityMenuDesc' : 'ModelIsEmpty')))\n                .addChild('ul', b => {\n                b.addClass('ed-entity-menu');\n                entities.forEach(ent => {\n                    const entCaption = this.options.usePluralNames && ent.captionPlural\n                        ? ent.captionPlural\n                        : ent.caption;\n                    b.addChild('li', b => {\n                        b.addClass('ed-entity-item')\n                            .on('click', () => {\n                            setLocation(`${this.basePath}/${decodeURIComponent(ent.id)}`);\n                        })\n                            .addChild('div', b => {\n                            b.addClass('ed-entity-item-caption')\n                                .addText(entCaption);\n                        });\n                        if (ent.description) {\n                            b.addChild('div', b => {\n                                b.addClass('ed-entity-item-descr')\n                                    .addText(`${ent.description}`);\n                            });\n                        }\n                    });\n                });\n            }));\n        }\n    }\n}\n\nclass EasyDataViewDispatcher {\n    constructor(options) {\n        this.options = {\n            container: '#EasyDataContainer',\n            basePath: 'easydata'\n        };\n        this.onSetLocation = () => {\n            this.setActiveView();\n        };\n        this.attach = () => {\n            window.addEventListener('ed_set_location', this.onSetLocation);\n            window.addEventListener('popstate', this.onSetLocation);\n        };\n        this.options = utils.assign(this.options, options || {});\n        if (this.options.rootEntity) {\n            this.options.showBackToEntities = false;\n            this.basePath = '/';\n        }\n        else {\n            this.basePath = this.normalizeBasePath(this.options.basePath);\n        }\n        this.setContainer(this.options.container);\n        const progressBarSlot = document.createElement('div');\n        const bar = new ProgressBar(progressBarSlot);\n        const parent = this.container.parentElement;\n        parent.insertBefore(progressBarSlot, parent.firstElementChild);\n        this.context = new DataContext({\n            endpoint: this.options.endpoint,\n            dataTable: this.options.dataTable,\n            onProcessStart: () => bar.show(),\n            onProcessEnd: () => bar.hide()\n        });\n    }\n    normalizeBasePath(basePath) {\n        basePath = this.trimSlashes(basePath);\n        const fullPath = decodeURIComponent(window.location.pathname);\n        const idx = fullPath.toLocaleLowerCase().indexOf(basePath);\n        return idx >= 0 ? fullPath.substring(0, idx + basePath.length) : '/';\n    }\n    trimSlashes(path) {\n        return path.replace(/^\\/|\\/$/g, '');\n    }\n    setContainer(container) {\n        if (!container) {\n            throw 'Container is undefined';\n        }\n        if (typeof container === 'string') {\n            if (container.length) {\n                if (container[0] === '.') {\n                    const result = document.getElementsByClassName(container.substring(1));\n                    if (result.length)\n                        this.container = result[0];\n                }\n                else {\n                    if (container[0] === '#') {\n                        container = container.substring(1);\n                    }\n                    this.container = document.getElementById(container);\n                }\n                if (!this.container) {\n                    throw Error('Unrecognized `container` parameter: ' + container + '\\n'\n                        + 'It must be an element ID, a class name (starting with .) or an HTMLElement object itself.');\n                }\n            }\n        }\n        else {\n            this.container = container;\n        }\n    }\n    getActiveSourceId() {\n        if (this.options.rootEntity)\n            return this.options.rootEntity;\n        const path = decodeURIComponent(window.location.pathname);\n        const idIndex = this.basePath.length + 1;\n        return idIndex < path.length ? path.substring(idIndex) : null;\n    }\n    run() {\n        this.attach();\n        return this.context.loadMetaData()\n            .then(() => {\n            this.setActiveView();\n        })\n            .catch(error => console.error(error));\n    }\n    setActiveView() {\n        this.clear();\n        const sourceId = this.getActiveSourceId();\n        if (sourceId) {\n            this.context.setActiveSource(sourceId);\n            window['EDView'] = new EntityDataView(this.container, this.context, this.basePath, this.options);\n        }\n        else {\n            const rootViewOptions = {};\n            if (typeof this.options.usePluralNames !== 'undefined') {\n                rootViewOptions.usePluralNames = this.options.usePluralNames;\n            }\n            window['EDView'] = new RootDataView(this.container, this.context, this.basePath, rootViewOptions);\n        }\n    }\n    clear() {\n        this.container.innerHTML = '';\n        this.context.getData().clear();\n    }\n    detach() {\n        window.removeEventListener('ed_set_location', this.onSetLocation);\n        window.removeEventListener('popstate', this.onSetLocation);\n    }\n}\n\nfunction addEasyDataCRUDTexts() {\n    i18n.updateDefaultTexts({\n        RequiredError: 'Value is required.',\n        NumberError: 'Value should be a number',\n        IntNumberError: 'Value should be an integer number',\n        DateTimeError: 'Invalid date or time value',\n        LookupSelectedItem: 'Selected item: ',\n        LookupDlgCaption: 'Select {entity}',\n        None: 'None',\n        NavigationBtnTitle: 'Navigation values',\n        CalendarBtnTitle: 'Open calendar',\n        TimerBtnTitle: 'Open timer',\n        AddBtnTitle: 'Add',\n        AddRecordBtnTitle: 'Add record',\n        EditBtn: 'Edit',\n        DeleteBtn: 'Delete',\n        SelectLink: '[ select ]',\n        AddDlgCaption: 'Create {entity}',\n        EditDlgCaption: 'Edit {entity}',\n        DeleteDlgCaption: 'Delete {entity}',\n        DeleteDlgMessage: 'Are you sure you want to remove this record: {{recordId}}?',\n        EntityMenuDesc: 'Click on an entity to view/edit its content',\n        BackToEntities: 'Back to entities',\n        SearchBtn: 'Search',\n        SearchInputPlaceholder: 'Search...',\n        RootViewTitle: 'Entities',\n        ModelIsEmpty: 'No entity was found.'\n    });\n}\naddEasyDataCRUDTexts();\n\nexport { DataContext, EasyDataServerLoader, EasyDataViewDispatcher, EntityDataView, EntityEditForm, EntityEditFormBuilder, ProgressBar, RequiredValidator, RootDataView, TextDataFilter, TextFilterWidget, TypeValidator, Validator };\n",null],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","DataType","EntityAttrKind","EditorTag","HttpMethod","utils","i18n","ColumnAlignment","liquid","browserUtils","HttpRequest","constructor","xhr","descriptor","this","method","url","headers","queryParams","data","setHeader","name","value","setQueryParam","getXMLHttpRequest","getResponseHeaders","readyState","HEADERS_RECEIVED","arr","getAllResponseHeaders","trim","split","headerMap","line","parts","header","shift","join","open","UNSENT","Object","keys","length","encodeURI","map","param","setRequestHeader","abort","getAllDataTypes","values","filter","item","getDateDataTypes","Time","Date","DateTime","getStringDataTypes","String","Memo","FixedChar","_numericTypes","Byte","Word","Int32","Int64","Float","Currency","Autoinc","getNumericDataTypes","_intTypes","assignDeepCore","hashSet","target","sources","source","hasOwnProperty","key","sourceVal","endsWith","HTMLElement","has","get","Array","isArray","createArrayFrom","set","create","getPrototypeOf","collection","result","push","assign","args","i","assignDeep","WeakMap","getIfDefined","defaultValue","IsDefinedAndNotNull","copyArrayTo","collection1","collection2","len1","len2","findItemById","array","id","arrLength","idx","findItemIndexById","indexOfArrayItem","indexOf","len","moveArrayItem","index1","index2","splice","removeArrayItem","index","insertArrayItem","fillArray","start","end","relativeStart","k","Math","max","min","relativeEnd","undefined","final","shiftToFitWindow","absLeft","width","body","winWidth","window","innerWidth","documentElement","clientWidth","absRight","isObject","val","isNumericType","dtype","isIntType","isNumeric","isNaN","parseFloat","isFinite","areCompatibleDataTypes","type1","type2","Unknown","isPropSet","obj","propName","toLowerCase","toUpperCase","symbols","squeeze","str","maxlen","step","ch","nextIndex","getRandomInt","floor","random","safeParseInt","res","parseInt","generateId","prefix","prfx","pml","ptt","squeezeMoniker","randCharPart","randInt","targetBase","buffer","rest","intToNumBase","getTime","strToDateTime","format","normalizedValue","replace","formatItems","dateItems","monthIndex","dayIndex","yearIndex","hourIndex","minutesIndex","secondsIndex","today","year","getFullYear","month","getMonth","day","getDate","getDaysInMonth","hour","minute","second","_a","strToTime","timeItems","HttpActionResult","request","promise","getPromise","getRequest","then","onfulfilled","onrejected","catch","onfinally","finally","HttpResponseError","Error","status","message","super","setPrototypeOf","prototype","HttpClient","responseBody","_responseBody","defaultHeaders","customPayload","options","send","Get","post","Post","put","Put","Delete","dataType","contentType","XMLHttpRequest","desc","beforeEachRequest","console","warn","onRequest","dataToSend","JSON","stringify","Promise","resolve","reject","responseType","onerror","error","responseText","onreadystatechange","responseContentType","getResponseHeader","responseObj","response","parse","onResponse","decodeArrayBuffer","uintArray","reader","FileReader","onloadend","DONE","readAsText","Blob","currentLocale","englishUSLocaleSettings","shortDateFormat","longDateFormat","editDateFormat","shortTimeFormat","editTimeFormat","longTimeFormat","shortMonthNames","longMonthNames","shortWeekDayNames","longWeekDayNames","decimalSeparator","currency","defaultLocale","localeId","englishName","displayName","texts","ButtonOK","ButtonCancel","Yes","No","True","False","settings","allLocales","mappers","mapInfo","info","mapper","getCurrentLocale","setCurrentLocale","newLocale","getLocaleSettings","updateLocaleSettings","settingsToUpdate","updateLocaleInfo","localeInfo","localeInfoToUpdate","loadBrowserLocaleSettings","now","dateStr","toLocaleDateString","timeStr","toLocaleTimeString","dateFormat","timeFormat","determineSettingsByLocale","navigator","language","addMapper","getLocales","locale","sort","a","b","setLocale","l","getText","textsObj","resText","argLength","getOneLocaleSetting","getShortMonthName","monthNum","getLongMonthName","getShortWeekDayName","dayNum","toString","getLongWeekDayName","updateLocaleTexts","updateDefaultTexts","addLocale","resetLocales","DT_FORMAT_RGEX","dateTimeToStr","date","yearStr","getHours","getMinutes","getSeconds","hour12","isPm","matches","yyyy","yy","substring","MMMM","MMM","MM","M","dd","d","HH","H","hh","h","tt","mm","ss","match","$1","buildShortDateTimeFormat","localeSettings","buildLongDateTimeFormat","dateTimeToStrEx","dateTime","numberToStr","num","charAt","number","cachedSequenceFormats","v","Number","forEach","formatWithSequence","slice","toLocaleString","digits","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","getNumberFormatOptions","mask","reverse","convertWithMask","trunc","booleanToStr","bool","MetaEntity","parent","isEditable","caption","description","attributes","subEntities","loadFromData","model","dto","captionPlural","namePlur","ied","ents","newEntity","createEntity","attrs","newAttr","createEntityAttr","scan","processAttribute","processEntity","opts","stop","internalProcessEntity","entity","attrCount","attr","subEntityCount","getFirstPrimaryAttr","getPrimaryAttrs","isPrimaryKey","MetaEntityAttr","size","isForeignKey","isNullable","showOnView","showOnCreate","showOnEdit","showInLookup","lookupAttr","expr","kind","Data","cptn","ipk","ifk","lattr","lookupEntity","lent","dataAttr","dattr","lookupDataAttr","ldattr","isDataType","defVal","nul","ivis","sov","soc","soe","sil","displayFormat","dfmt","udata","userData","edtr","defaultEditor","getEditorById","createValueEditor","ValueEditor","tag","resType","defValue","defval","rtype","accept","multiline","subType","getValueText","text","MetaData","mainEntity","rootEntity","displayFormats","Map","getMainEntity","loadFromJSON","stringJson","version","vers","editors","newEditor","entroot","dtypeStr","formats","getDisplayFormats","getDisplayFormatsForType","getDefaultFormat","f","isdef","setData","isEmpty","getId","getName","getRootEntity","editorId","editor","getAttributeById","attrId","getEntityAttrById","checkAttrProperty","attribute","listByEntityWithFilter","filterFunc","ent","entIdx","newEnt","items","isEntity","attrIdx","listByEntity","resultEntities","resultAttributes","newOpts","includeRootData","sortCheck","sortEntities","attrPlacement","concat","clear","addDefaultValueEditors","ve","addOrUpdateValueEditor","getEntitiesTree","getEntitiesTreeWithFilter","getFullEntityPathByAttr","sep","getEntityPathByAttr","root","entityCaption","entityText","getAttributeText","attrText","entityPath","RegExp","runThroughEntities","getFirstAttributeByFilter","DataColumn","label","originAttrId","isAggr","groupFooterColumnTemplate","gfct","calculatedWidth","DataColumnList","_dateColumnIdx","count","add","colOrDesc","col","updateDateColumnIdx","getItems","move","newIndex","oldIndex","getIndex","getDateColumnIndexes","removeAt","removeDate","DataRow","columns","toArray","from","getValue","colIdOrIndex","RangeError","setValue","EasyDataTable","_chunkSize","_elasticChunks","cachedRows","total","loader","needTotal","isInMemory","chunkSize","elasticChunks","inMemory","_columns","onUpdate","colDesc","rows","rowData","row","createRow","addRow","getRows","params","fromIndex","pageSize","page","offset","limit","endIndex","loadChunk","apply","table","getCachedRows","getCachedCount","fireUpdated","getRow","getTotal","setTotal","dataOrRow","dateIdx","colId","column","mapDate","rowOrValues","newRow","cachedTotal","totalIsKnown","EasyGuid","newGuid","c","r","EventEmitter","silentMode","events","subscribe","eventType","callback","event","getEventRecByType","eventCallback","eventCallbacks","unsubscribe","callbackId","fire","postpone","force","eventRec","eqevent","emitAllFunc","setTimeout","enterSilentMode","exitSilentMode","isSilent","combinePath","path1","path2","getElementAbsolutePos","element","x","y","position","defaultBoundingClientRect","top","right","bottom","left","height","box","getBoundingClientRect","docElem","scollPos","pageYOffset","scrollTop","pageXOffset","scrollLeft","getScrollPos","clientTop","clientLeft","round","renderLiquidTemplate","template","vars","liquidVarRegexp","NaN","ceil","mobileModeChangeHandler","_isFirefox","isIE","ua","userAgent","includes","isEdge","isFirefox","_isMobileMode","_detectedIsMobileMode","detectIsMobileMode","oldValue","isMobileMode","matchMedia","newValue","addEventListener","setIsMobileMode","onMobileModeChanged","eqCssPrefix","DomElementBuilder","parentElement","addChild","childBuilder","builder","domel","addChildElement","attrValue","setAttribute","focus","title","dataId","dataValue","removeAttribute","show","removeStyle","hide","toHide","setStyle","visible","isVisible","offsetWidth","offsetHeight","getClientRects","addClass","className","classNames","fullList","classList","removeClass","remove","toggleClass","toggle","on","listener","eventTypes","off","removeEventListener","styleId","styleValue","setProperty","removeProperty","innerText","html","innerHTML","oldElem","tagName","replaceWith","addText","textEl","addHtml","toDOM","appendTo","DomTextAreaElementBuilder","cols","DomInputElementBuilder","valueAsDate","valueAsNumber","maskPattern","input","inputHandler","e","mskd","startSelection","selectionStart","el","t","test","selectionEnd","keyCode","preventDefault","selection","onlyLodash","createEvent","initEvent","dispatchEvent","char","fromCharCode","charCode","DomSelectElementBuilder","addOption","option","selected","HTMLDivElement","HTMLSpanElement","HTMLAnchorElement","HTMLButtonElement","HTMLImageElement","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","touchEventIsDefined","TouchEvent","DropEffect","EqDragEvent","dragImage","sourceEvent","dropEffect","Allow","pageX","pageY","MouseEvent","touches","Position","ev","eqDragManager","delta","draggableItem","finishedSuccessfully","mouseDownPosition","containerDescriptors","containerDescriptorIndex","None","classPrefix","DRAG_DISABLED_ATTR","registerDraggableItem","ondragstart","detectDragging","hasAttribute","stopPropagation","cursorPosition","abs","startDragging","mouseMoveEventListener","mouseMoveDragListener","beforeDragStart","cloneNode","renderer","updateCusror","updateImageClass","scope","updateDragItemPosition","onDragStart","mouseDownListener","mouseUpListener","endDraggind","dropContDesc","container","scopes","onDrop","onDragLeave","onDragEnd","removeChild","registerDropContainer","removeDropContainer","descriptorOrSlot","descs","detectDragEnterEvent","dragEnterEvent","detectDragLeaveEvent","dragLeaveEvent","onDragOver","setCursorStyle","Forbid","cursor","children","pos","onDragEnter","containerPos","AutoResizeColumns","GridColumnAlign","GridColumn","grid","isRowNum","_label","_description","align","NONE","dataColumn","widthOptions","columnWidths","alignment","Left","LEFT","Center","CENTER","Right","RIGHT","MapAlignment","default","rowNumColumn","GridColumnList","columnList","sync","hasRowNumCol","rowNumCol","onSyncGridColumn","cssPrefix$1","DFMT_REGEX","CellRendererType","StringCellRendererDefault","cellValueElement","rowElement","NumberCellRendererDefault","strValue","_","DateTimeCellRendererDefault","isDate","call","timeOptions","BoolCellRendererDefault","GridCellRendererStore","renderers","defaultRenderers","registerRenderer","setDefaultRenderer","STRING","NUMBER","DATETIME","BOOL","getDefaultRenderer","columnType","cellType","getCellType","getDefaultRendererByType","rendererType","getRenderer","Bool","EasyGrid","cssPrefix","pagination","paginationOptions","maxButtonCount","useBootstrap","defaultDataGridOptions","slot","dataTable","fixHeightOnFirstRender","syncGridColumns","useRowNumeration","allowDragDrop","aggregates","calculator","paging","enabled","pageSizeItems","autoResize","Always","stringColumns","numberColumns","boolColumns","dateColumns","otherColumns","showPlusButton","viewportRowsCount","showActiveRow","rowsOnPagePromise","containerInitialHeight","firstRender","prevRowTotals","landingIndex","landingSlot","_activeRowIndex","mergeOptions","processColumnWidthsOptions","eventEmitter","cellRendererStore","setSlot","init","aggrOptions","colWidthOptions","pagingOptions","knownTypes","getElementById","getElementsByClassName","onInit","onRowClick","onRowDbClick","onPlusButtonClick","onColumnChanged","onColumnDeleted","onColumnMoved","onPageChanged","onActiveRowChanged","activeRowIndex","showLandingSlot","hideLandingSlot","refresh","fireEvent","columnId","getData","getColumns","destroy","clearDOM","render","hasData","clientHeight","rootDiv","renderHeader","headerDiv","renderBody","bodyDiv","renderFooter","footerDiv","gridContainer","needAutoResize","Never","updateHeight","resizeColumns","firstRow","bodyCellContainerDiv","firstElementChild","viewportHeight","bodyViewportDiv","sbHeight","getContainerWidth","reduce","sum","current","headerViewportDiv","headerCellContainerDiv","headerRowDiv","hd","renderColumnHeader","renderHeaderButtons","containerWidth","colBuilder","colDiv","attrLabel","showAggrs","canShowAggregates","showProgress","getRowsToRender","hideProgress","rowsToRender","groups","getGroups","updateTotalsState","tr","renderRow","showGrandTotalsOnEachPage","isLastPage","onViewportKeydown","bind","aggrSettings","hasAggregates","hasRecordCount","hasGroups","hasGrandTotals","isLast","changeLevel","level","group","compareValues","renderTotalsRow","applyGroupColumnTemplate","getAggregates","colIndex","renderCell","aggrContainer","getAggrContainer","aggrCols","buildGroupKey","getAggregateData","aggrColId","isLastGroupColumn","groupColIndex","aggrColIndex","groupFooterTemplate","COUNT_FIELD_NAME","cellDiv","rowCount","querySelectorAll","ensureRowVisibility","rowOrIndex","getDataRow","rowRect","viewportRect","rowTop","rowBottom","windowHeight","innerHeight","footerPaginateDiv","renderPageNavigator","pageInfoBlock","renderPageInfoBlock","pageInfoDiv","fistPageRecordNum","lastPageRecordNum","totalStr","getLocalIndexByGlobal","getGlobalIndexByLocal","indexGlobal","rowBuilder","rowIndex","colindex","cellElement","valueCell","cellRenderer","getCellRenderer","onGetCellRenderer","setPage","paginateDiv","totalRows","totalPages","distance","buttonClickHandler","getAttribute","renderPaginationItem","pageIndex","content","disabled","extreme","active","li","newA","ul","userSelect","cell","prev","next","allowPageSizeChange","selectChangeHandler","pageSizes","selectSize","sel","selOptions","selSet","Set","labelDiv","handler","handlerId","plusButtonTitle","colElems","rowElem","display","landingPos","newLandingIndex","colPos","updateActiveRow","activeRow","getActiveRow","visibility","sumWidth","headerCells","headerIdx","cellValues","maxWidth","whiteSpace","maxOption","minOption","Calendar","yearRange","setDate","currentDate","dateChanged","onDateChanged","DateTimePicker","calendar","timePicker","setDateTime","currentDateTime","setTime","getDateTime","showCalendar","createCalendar","showDateTimeInput","timePickerIsUsed","showTimePicker","oneClickDateSelection","dateTimeChanged","createTimePicker","onTimeChanged","time","setHours","setMinutes","anchor","beforeShow","onApply","cancel","onCancel","onDateTimeChanged","DefaultCalendar","daysOfWeek","months","calendarBody","isManualInputChanging","selectedMonth","selectedYear","rerenderMonth","renderManualDateInput","headerTextElem","renderCalendarButtons","getInputDateFormat","newDate","manualInputElem","jump","updateDisplayedDateValue","selectMonthElem","selectYearElem","rerenderSelectYear","exec","minusYear","plusYear","op","firstDay","getDay","daysInMonth","setFullYear","setMonth","dayOfWeek","onDrawDay","cellsDrawnInLastRow","cellsToDraw","TimePicker","currentTime","timeChanged","DefaultTimePicker","updateDisplayedTime","hoursInput","minutesInput","timeText","slidersBuilder","timeToDraw","DefaultDateTimePicker","sb","zIndex","renderButtons","globalMouseDownHandler","srcElement","contains","nowButton","submitButton","calendarSlot","timePickerSlot","anchorPos","parentPos","DialogFooterAlignment","DefaultDialogService","openConfirm","closable","submitable","cancelable","onSubmit","openPrompt","submitOnEnter","arrangeParents","beforeOpen","processInput","dialog","DefaultDialog","onDestroy","dlg","untrack","track","createSet","DefaultDialogSet","openDialogs","openProgress","DefaultProgressDialog","getAllDialogs","closeAllDialogs","close","submitHandler","token","cancelHandler","keydownHandler","isActiveDialog","dialogId","windowElement","headerElement","alertElement","bodyElement","alignClass","footerAlignment","footerElement","bb","submitButtonText","recaptchaSiteKey","grecaptcha","ready","execute","action","cancelButtonText","getRootElement","getSubmitButtonElement","getCancelButtonElement","windowDiv","querySelector","clearAlert","onInput","onShow","submit","disableButtons","button","enableButtons","showAlert","reason","alert","windowDivs","turnOn","contentElement","progressElement","determinated","updateContent","updateProgress","progress","in01","dialogService","currentDialog","currentIndex","getCurrent","openNext","openPrev","dlgOptions","PRE_SELECT","JUMP_TO","GridPageInfo","GridItemsPerPage","ButtonApply","ButtonNow","LblTotal","TimeSpanPicker","setupDialog","to","weekStart","append","drawDialog","calendar1","calendar2","alignDate","finish","represent","setSeconds","setMilliseconds","select","THIS_WEEK","LAST_WEEK","THIS_MONTH","FIRST_MONTH","LAST_MONTH","THIS_YEAR","QUARTER_1","QUARTER_2","QUARTER_3","QUARTER_4","UNDEF","TODAY","YESTERDAY","TOMORROW","WEEK_START","WEEK_END","MONTH_START","MONTH_END","YEAR_START","YEAR_END","cal","jumpTo","curr","interval","constants","Today","Yesterday","Tomorrow","FirstDayOfMonth","LastDayOfMonth","FirstDayOfWeek","FirstDayOfYear","FirstDayOfNextWeek","FirstDayOfNextMonth","FirstDayOfNextYear","log","showTimeSpanPicker","TextDataFilter","sourceTable","sourceId","isLookup","filterValue","justServerSide","applyCore","filters","class","lookup","filteredTable","applyInMemoryFilter","words","w","suitableColumns","hasEnterance","normalized","word","internalDateFormat","internalTimeFormat","getEditDateTimeFormat","setLocation","path","state","history","pushState","Event","Validator","DateTimeValidator","validate","successed","editFormat","messages","EntityEditForm","context","validators","getHtml","setHtmlInt","errorsDiv","clearErrors","inputs","isValid","getMetaData","validateValue","markInputValid","filePromises","property","lastIndexOf","checked","fileToBase64","files","mapValue","all","file","readAsDataURL","onload","useValidator","validator","useValidators","internalFormat","valid","TextFilterWidget","instantMode","instantTimeout","stringDefRenderer","highlightCellRenderer","numDefRenderer","horizClass","isEdgeOrIE","filterInput","inputKeydownHandler","inputKeyupHandler","clearButtonClickHander","searchButtonClickHandler","applyFilter","applyFilterTimeout","clearTimeout","checkChange","defaultRenderer","highlightText","normalizedContent","indexInMas","lowerWord","highlightSpan","backgroundColor","item1","item2","addDelta","div","EntityEditFormBuilder","reset","form","setupLookupField","readOnly","inputEl","resolveInputType","lookupTable","chunkParams","getDataLoader","ds","widgetSlot","gridSlot","selectedSlot","selectedValue","updateSelectedValue","fetchRecord","lookupGrid","dataFilter","createFilter","setupDateTimeField","hidden","applySumbit","pickerOptions","dtp","setupListField","setupFileField","setupTextField","setupTextArea","addFormField","Lookup","isEditForm","resolveEditor","required","sumbitCallback","build","fb","formHtml","getActiveEntity","ProgressBar","EasyDataServerLoader","resolveEndpoint","startProcess","getHttpClient","resultSet","totalRecords","meta","hasNext","endProcess","DataContext","endpoints","endpointVarsRegex","http","metaDataId","dataLoader","dataTableOptions","setDefaultEndpoints","endpoint","activeEntity","setActiveSource","entityId","loadMetaData","sourceError","fetchDataset","createRecord","updateRecord","deleteRecord","setEndpoint","setEnpointIfNotExist","endpointKey","opt","optVal","onProcessStart","onProcessEnd","endpointBase","TypeValidator","isInteger","RequiredValidator","EntityDataView","basePath","showFilterBox","showBackToEntities","defaultValidators","location","pathname","renderGrid","syncGridColumnHandler","gridOptions","addClickHandler","manageCellRenderer","rowDbClickHandler","sourceOptions","filterWidgetSlot","filterBarDiv","filterWidget","rowEl","editClickHandler","deleteClickHandler","refreshData","processError","showEditForm","keyAttrs","keyVals","processed","RootDataView","usePluralNames","metaData","renderEntitySelector","entities","entCaption","decodeURIComponent","EasyDataViewDispatcher","onSetLocation","setActiveView","attach","normalizeBasePath","setContainer","progressBarSlot","bar","trimSlashes","fullPath","toLocaleLowerCase","getActiveSourceId","idIndex","run","rootViewOptions","detach","RequiredError","NumberError","IntNumberError","DateTimeError","LookupSelectedItem","LookupDlgCaption","NavigationBtnTitle","CalendarBtnTitle","TimerBtnTitle","AddBtnTitle","AddRecordBtnTitle","EditBtn","DeleteBtn","SelectLink","AddDlgCaption","EditDlgCaption","DeleteDlgCaption","DeleteDlgMessage","EntityMenuDesc","BackToEntities","SearchBtn","SearchInputPlaceholder","RootViewTitle","ModelIsEmpty","globalThis","showPicker","showPickerWithPreset","crud.EasyDataViewDispatcher"],"mappings":"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","x_google_ignoreList":[0]}